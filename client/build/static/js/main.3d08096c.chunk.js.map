{"version":3,"sources":["utils/SetAuthToken.js","context/stats/statsContext.js","components/layouts/Spinner.js","components/charts/UserCountKPI.js","components/charts/UserCountKPITaxSigned.js","components/layouts/VertIconMenu.js","components/charts/PaymentPendingAuthCountKPI.js","components/charts/PaymentPendingAuthValueKPI.js","components/charts/PaymentsAuthValueKPI.js","components/charts/PaymentsAuthValueYTDKPI.js","utils/dropdowns.js","components/payments/UserPayments.js","context/auth/authContext.js","components/layouts/NavButtonHome.js","context/payment/paymentContext.js","components/pages/Home.js","context/userAdmin/userAdminContext.js","components/userAdmin/UserAdminAddModal.js","components/layouts/NavButtonUserMgmt.js","context/user/userContext.js","components/userAdmin/UserAdmin.js","components/pages/UserAdmin.js","components/layouts/NavButtonUserProfile.js","components/user/User.js","components/pages/User.js","components/layouts/NavButtonPayments.js","components/pages/UserPayments.js","components/payments/Payments.js","components/payments/PaymentsNav.js","components/layouts/ConfirmationDialog.js","components/pages/Payments.js","components/layouts/NavButtonPaymentsAdd.js","components/layouts/MarkingRange.js","components/payments/CreatePayments.js","components/pages/PaymentsCreate.js","components/payments/ViewPayments.js","components/pages/PaymentsView.js","components/layouts/NavButtonAbout.js","components/pages/About.js","components/layouts/NavButtonUserMgmtImport.js","components/import/Import.js","components/pages/Import.js","components/layouts/NavButtonUserMgmtImportNSP.js","components/import/ImportNSP.js","components/pages/ImportNSP.js","components/auth/Register.js","components/auth/Login.js","components/auth/Verify.js","components/auth/PasswordReset.js","components/auth/PasswordResetRequest.js","components/layouts/NavigationBar.js","components/routing/PrivateRoute.js","context/types.js","context/user/UserReducer.js","context/user/UserState.js","context/userAdmin/UserAdminReducer.js","context/userAdmin/UserAdminState.js","context/payment/PaymentReducer.js","context/payment/PaymentState.js","context/stats/StatsReducer.js","context/stats/StatsState.js","context/auth/AuthReducer.js","context/auth/AuthState.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","statsContext","createContext","useStyles","makeStyles","theme","root","display","marginLeft","spacing","flexDirection","justifyContent","ProgressIndicator","classes","className","CircularProgress","color","height","whiteSpace","UserCountKPITAxSigned","useContext","StatsContext","stats","getStatData","loading","useEffect","Card","CardHeader","title","statsActive","subheader","UserCountKPI","console","log","statsActiveTaxSigned","options","id","icon","to","name","LongMenu","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","onClose","Grid","container","direction","justify","alignItems","map","option","MenuItem","item","Typography","PaymentPendingAuthCountKPI","action","VertIconMenu","statsPending","PaymentPendingAuthValueKPI","num","statsPaymentPendingAuth","length","total","toFixed","currentMonth","Date","PaymentsAuthValueKPI","statsPaymentAuthMTD","format","PaymentsAuthValueYTDKPI","statsPaymentAuthYTD","CurrentAcaYear","schoolMenu","value","label","statusMenu","roleMenu","titlesMenu","pronounMenu","countryMenu","Counties","country","semester","deliveryCategory","academicYear","monthWords","yearsDD","date","toUTCString","UserPayments","props","user","userPayments","userPaymentsLoading","history","useHistory","CustomChip","onDelete","Chip","variant","filter","filterType","sortOrder","downloadOptions","filterOptions","useDisplayedColumnsOnly","useDisplayedRowsOnly","filename","QUBID","selectableRowsHideCheckboxes","rowsPerPageOptions","rowsPerPage","draggableColumns","enabled","columns","download","sort","customBodyRender","i","tableMeta","updateValue","Intl","NumberFormat","style","currency","empty","alignContent","align","Pageview","fontSize","dataIndex","path","push","viewPayment","rowData","userID","xs","data","components","TableFilterList","ItemComponent","authContext","margin","speedDial","position","bottom","right","NavButtonHome","React","setOpen","AuthContext","isAdmin","setUserID","_id","actions","SpeedDial","ariaLabel","onOpen","FabProps","SpeedDialAction","tooltipTitle","paymentContext","MuiAlert","Alert","elevation","flexGrow","paper","padding","textAlign","palette","text","secondary","left","table","minWidth","spacer","marginTop","textField","footer","minHeight","inputField","inputCenter","typography","pxToRem","finalButton","Home","loadUser","resendVerifyEmail","PaymentContext","getUserPayments","timeOfDayWords","getHours","getGreeting","firstName","md","sm","UserCountKPITaxSigned","clsx","role","emailVerified","marginBottom","severity","Button","size","AlertTitle","email","NINO","component","Link","taxDeclaration","signed","payments","userAdminContext","flexWrap","width","textLabel","marginRight","textFieldFull","UserAdminAddModal","passwordResetRequest","UserAdminContext","addUser","clearCurrent","current","updateUser","setDialogClosed","toggleDialog","error","setUser","address","street","city","county","postcode","contact","mobile","landline","bank","bankName","branchName","sortCode","accNumber","buildingSocietyNumber","dob","emailTokenIssued","emailTokenExpiry","emailVerifiedDate","lastName","nino","password","password1","passwordResetToken","passwordResetTokenExpiresAt","pronoun","payment","payment1","NSPID","qubSchool","status","employeeStatements_section1","employeeStatements_section2","employeeStatements_section3q1","employeeStatements_section3q2","employeeStatements_section3q3","employeeStatements_section3q4","employeeStatements_section3q5","useSnackbar","enqueueSnackbar","closeSnackbar","emailVerificationToken","emailVerificationTokenExpiresAt","userImg","onChange","e","target","onCloseDialog","clearAll","onSubmit","preventDefault","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","noValidate","autoComplete","TextField","required","type","placeholder","disabled","select","FormLabel","DialogActions","NavButtonUserMgmt","setDialogOpen","handleClick","userContext","UserAdmin","UserContext","users","getUsers","deleteUser","clearErrors","setCurrent","onRowsDelete","rows","d","forEach","a","customBodyRenderLite","openDialog","editProfile","NavButtonUserProfile","button","backgroundColor","taxText","fontWeight","taxTextSpacingTop","taxTextSpacingBottom","Subtext","User","useParams","getUser","setData","newPassword","confirmPassword","currentPassword","tab","setTab","preSigned","setPreSign","handleSwitchChange","checked","Box","Tabs","indicatorColor","textColor","newValue","Tab","weight","Tooltip","moment","arrow","helperText","fullWidth","FormControl","RadioGroup","taxAlign","FormControlLabel","control","Radio","FormHelperText","paddingLeft","paddingTop","mt","mb","Switch","activeUser","NavButtonPayments","UserPaymentsHome","Payments","deletePayment","approvePayment","rejectPayment","holdPayment","pendingPayment","paidPayment","onClickApprovePayment","onClickRejectPayment","minimumFractionDigits","find","element","ThumbUp","ThumbDown","PauseCircleOutline","onClickHoldPayment","PlayCircleOutline","onClickPendingPayment","Receipt","onClickPaidPayment","PaymentsNav","onClickReject","onClickApprove","onClickPaid","Paper","ResponsiveDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","hideForm","stage","finalisePayment","invoiceTotal","RejectAllPayments","ApproveAllPayments","PaidAllPayments","autoFocus","Payment","getPayments","setLoading","rejectAllPayments","approveAllPayments","paidAllPayments","formShowing","setFormShowing","setStage","showForm","tableLayout","MarkingRange","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","CUR","AC1_RATE","AC2_RATE","inputEdit","BandB","HtmlTooltip","withStyles","tooltip","maxWidth","border","ccyFormat","subtotal","totals","reduce","sum","totalGrade1Hours","grade","totalPaidHours","totalGrade2Hours","totalOfficeHours","count","pad","substr","CreatePayment","addPayment","activeUsers","setUserSelect","month","getMonth","deliveredBy","school","paymentPeriod","paymentPeriodYear","getFullYear","paymentPeriodNum","parseInt","toString","account","projectCode","projectName","subAnalysis","amount","student_cohort","cohort_id","paymentStatus","grade1","grade2","rate1","rate2","setPayment","range","numOfStudents","numOfCWPcsPerStudent","OralExamHours","markingCalc","setMarkingCalc","description","officeHoursCalc","setOfficeHoursCalc","lecture","activity","paymentGrade","paymentRate","time","totalhrs","seminar","lab","fieldTrip","office","marking","training","paymentCalc","setPaymentCalc","hourlyRates","setHourlyRates","panel1","panel2","panel3","resetButton","addPaymentButton","isDisabled","setIsDisabled","isExpanded","setExpanded","userSelect","finalised","setFinalised","setGrade","g","r","rng","rate","userQUBID","val","parseFloat","invoiceSubtotal","totPaidHours","totOfficeHours","Accordion","defaultExpanded","expanded","AccordionSummary","AccordionDetails","continuePayment","placement","Fragment","continueMarkingOfficeHours","colSpan","uuidv4","row","Input","disableUnderline","input","selected","InputProps","startAdornment","InputAdornment","rowSpan","onChangeCapture","submitArray","PaymentsCreate","getActiveUsers","NavButtonPaymentsAdd","CreatePayments","ViewPayment","paymentDetail","officeHours","PaymentsView","getPayment","ViewPayments","NavButtonAbout","About","NavButtonUserMgmtImport","Import","file","filestate","setFilestate","jsonFile","setJsonFileState","fileUploader","useRef","readFile","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_json","onerror","then","makePassword","characters","charactersLength","charAt","Math","floor","random","usersToDelete","newState","includes","accept","ref","stopPropagation","files","message","htmlFor","startIcon","focus","makeRandomPassword","signedDate","userWithAddedRandomPassword","Object","assign","err","ImportUsers","importedUsersAdded","mergeById","a1","a2","itm","ImportNSP","getUsersNSP","updateUserNSP","usersNSP","clearNSPUser","NSPUserState","setNSPUserState","enable","setEnable","ile","__rowNum__","ImportNSPData","NavButtonUserMgmtImportNSP","Register","register","isAuthenticated","password2","minLength","Login","login","Verify","verifyEmail","logout","PasswordReset","passwordUpdateRequest","setPassword","handleChangePassword","PasswordResetRequest","passwordResetRequestPublic","NavigationBar","clearUserAccount","clearUserAdmin","authLinks","href","unAuthLinks","defaultProps","PrivateRoute","Component","rest","render","GET_PAYMENTS","GET_PAYMENT","GET_USER_PAYMENTS","ADD_PAYMENT","ADD_USER_PAYMENT","DELETE_PAYMENT","UPDATE_PAYMENT","CLEAR_PAYMENTS","PAYMENT_ERROR","APPROVE_ALL_PAYMENTS","REJECT_ALL_PAYMENTS","PAID_ALL_PAYMENTS","APPROVE_PAYMENT","REJECT_PAYMENT","HOLD_PAYMENT","PENDING_PAYMENT","PAID_PAYMENT","GET_USERS","GET_USERS_NSP","GET_ACTIVE_USERS","ADD_USER","DELETE_USER","UPDATE_USER","CLEAR_USERS","CLEAR_USER","USER_ERROR","GET_USER","GET_STATS","STATS_ERROR","CLEAR_ERRORS","REGISTER_SUCCESS","REGISTER_FAIL","RESEND_VERIFY","PASSWORD_RESET","PASSWORD_RESET_REQUEST","PASSWORD_RESET_EMAIL_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_CURRENT","CLEAR_CURRENT","OPEN_DIALOG","CLOSE_DIALOG","SET_LOADING","state","payload","UserState","useReducer","userReducer","dispatch","get","res","response","config","put","Provider","children","UserAdminState","post","delete","clearActiveUsers","filtered","PaymentState","paymentReducer","addUserPayment","pid","updatePayment","clearPayments","StatsState","StatsReducer","localStorage","setItem","removeItem","AuthState","initialState","getItem","AuthReducer","formData","SetAuthToken","ID","App","maxSnack","exact","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.3d08096c.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst setAuthToken = (token) => {\n    if(token){\n        axios.defaults.headers.common[\"x-auth-token\"] = token\n    } else {\n        delete axios.defaults.headers.common[\"x-auth-token\"] \n    }\n}\n\nexport default setAuthToken","import { createContext } from \"react\";\n\nconst statsContext = createContext();\n\nexport default statsContext;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst ProgressIndicator = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}> \n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n}\nexport default ProgressIndicator;\n","import React, { useContext, useEffect } from \"react\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    whiteSpace: \"pre-line\",\n  },\n}));\n\nconst UserCountKPITAxSigned = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData, loading } = statsContext;\n\n  useEffect(() => {\n    getStatData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      {stats !== null && !loading ? (\n        <Card className={classes.root}>\n          <CardHeader\n            title={stats[0].statsActive}\n            subheader={\"Active Users\"}\n          />\n        </Card>\n      ) : (\n        <ProgressIndicator />\n      )}\n    </>\n  );\n};\nexport default UserCountKPITAxSigned;\n","import React, { useContext, useEffect } from \"react\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    whiteSpace: \"pre-line\",\n  },\n}));\n\nconst UserCountKPI = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData, loading } = statsContext;\n\n  useEffect(() => {\n    getStatData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  console.log(stats)\n  return (\n    <>\n      {stats !== null && !loading ? (\n        <Card className={classes.root}>\n          <CardHeader\n            title={stats[9].statsActiveTaxSigned}\n            subheader={\"Active &\\nApproved Users\"}\n          />\n        </Card>\n      ) : (\n        <ProgressIndicator />\n      )}\n    </>\n  );\n};\nexport default UserCountKPI;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nconst options = [\n  {\n    id: 1,\n    icon: (\n      <Link to=\"/payments\">\n        <ViewListIcon />\n      </Link>\n    ),\n    name: <Link to=\"/payments\">View</Link>,\n  },\n  // {\n  //   id: 2,\n  //   icon: (\n  //     <Link to=\"/payments/approve\">\n  //       <ThumbUpIcon />\n  //     </Link>\n  //   ),\n  //   name:<Link to=\"/payments/approve\">Approve All</Link>\n  // },\n  // {\n  //   id: 3,\n  //   icon: (\n  //     <Link to=\"/payments\">\n  //       <ThumbDownIcon />\n  //     </Link>\n  //   ),\n  //   name: <Link to=\"/payments\">\n  //   Reject All\n  // </Link>,\n  // },\n  // { icon: <Admin />, name: \"Admin\" },\n];\n\nconst LongMenu = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n      >\n        <Grid\n          container\n          spacing={1}\n          direction=\"column\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n        >\n          {options.map((option) => (\n            <MenuItem key={option.id} onClick={handleClose}>\n              <Grid item>{option.icon}</Grid>\n              <Grid item>\n                <Typography>{option.name}</Typography>\n              </Grid>\n            </MenuItem>\n          ))}\n        </Grid>\n      </Menu>\n    </div>\n  );\n};\nexport default LongMenu;\n","import React, {useContext, useEffect} from \"react\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport VertIconMenu from \"../../components/layouts/VertIconMenu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    whiteSpace: 'pre-line'\n  },\n}));\n\nconst PaymentPendingAuthCountKPI = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData, loading } = statsContext;\n \n  useEffect(() => {\n    getStatData();\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [])\n\n  return (\n    <>\n    {stats !== null && !loading ? (\n     <Card className={classes.root}>\n     <CardHeader\n     action={<VertIconMenu />}\n       title={stats[1].statsPending}\n       subheader={\"Payments Pending\"}\n     />\n   </Card>\n    ) : (\n      <ProgressIndicator />\n    )}\n  </>\n  );\n};\nexport default PaymentPendingAuthCountKPI;\n\n","import React, { useContext, useEffect } from \"react\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    whiteSpace: \"pre-line\",\n  },\n}));\nconst PaymentPendingAuthValueKPI = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData, loading } = statsContext;\n\n  useEffect(() => {\n    getStatData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <ProgressIndicator />\n      ) : stats && stats[3].statsPaymentPendingAuth.length ? (\n        <Card className={classes.root}>\n          <CardHeader\n            title={`£${ccyFormat(stats[3].statsPaymentPendingAuth[0].total)}`}\n            subheader={\"Pending\\n Approval\"}\n          />\n        </Card>\n      ) : (\n        <Card className={classes.root}>\n          <CardHeader title={`£0.00`} subheader={\"Pending Authorisation\"} />\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default PaymentPendingAuthValueKPI;\n","import React, { useContext, useEffect } from \"react\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Moment from \"react-moment\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    whiteSpace: \"pre-line\",\n  },\n}));\n\nlet currentMonth = new Date();\nconst PaymentsAuthValueKPI = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData, loading } = statsContext;\n\n  useEffect(() => {\n    getStatData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <ProgressIndicator />\n      ) : stats && stats[4].statsPaymentAuthMTD.length ? (\n        <Card className={classes.root}>\n          <CardHeader\n              title={`£${ccyFormat(stats[4].statsPaymentAuthMTD[0].total)}`}\n              subheader={\n                <>\n                {\"Approved for \\n\"}\n                <Moment format=\"MMMM YY\">{currentMonth}</Moment>\n              </>\n            }\n          />\n        </Card>\n      ) : (\n        <Card className={classes.root}>\n          <CardHeader\n            title={`£0.00`}\n            subheader={\n              <>\n                  {\"Approved for \\n\"}<Moment format=\"MMMM YY\">{currentMonth}</Moment>\n              </>\n            }\n          />\n        </Card>\n      )}\n    </>\n  );\n};\nexport default PaymentsAuthValueKPI;\n","import React, { useContext, useEffect } from \"react\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ProgressIndicator from \"../layouts/Spinner\";\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    whiteSpace: 'pre-line',\n  },\n}));\n\nconst PaymentsAuthValueYTDKPI = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData, loading } = statsContext;\n\n  useEffect(() => {\n    getStatData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <ProgressIndicator />\n      ) : stats && stats[5].statsPaymentAuthYTD.length ? (\n        <Card className={classes.root}>\n          <CardHeader\n              title={`£${ccyFormat(stats[5].statsPaymentAuthYTD[0].total)}`}\n              subheader={\n                <>\n                {\"Approved for \\n\"}{stats[6].CurrentAcaYear}\n              </>\n            }\n          />\n        </Card>\n      ) : (\n        <Card className={classes.root}>\n          <CardHeader\n            title={`£0.00`}\n            subheader={\n              <>\n                  {\"Approved for \\n\"}{stats[6].CurrentAcaYear}\n              </>\n            }\n          />\n        </Card>\n      )}\n    </>\n  );\n}\nexport default PaymentsAuthValueYTDKPI","export const schoolMenu = [\n  {\n    id: 1,\n    value: \"Arts, English and Languages\",\n    label: \"Arts, English and Languages\",\n  },\n  { id: 2, value: \"Biological Sciences\", label: \"Biological Sciences\" },\n  {\n    id: 3,\n    value: \"Chemistry and Chemical Engineering\",\n    label: \"Chemistry and Chemical Engineering\",\n\n  },\n  {\n    id: 4,\n    value: \"Electronics, Electrical Engineering and Computer Science\",\n    label: \"Electronics, Electrical Engineering and Computer Science\",\n\n  },\n  { id: 5, value: \"EPS Budget Management\", label: \"EPS Budget Management\" },\n  { id: 6, value: \"Faculty Office - AHSS\", label: \"Faculty Office - AHSS\" },\n  { id: 7, value: \"Faculty Office (E&PS)\", label: \"Faculty Office (E&PS)\" },\n  { id: 8, value: \"Faculty Office (MH&LS)\", label: \"Faculty Office (MH&LS)\" },\n  {\n    id: 9,\n    value: \"History, Anthropology, Philosophy and Politics\",\n    label: \"History, Anthropology, Philosophy and Politics\",\n  },\n  {\n    id: 10,\n    value: \"Institute of Professional Legal Studies\",\n    label: \"Institute of Professional Legal Studies\",\n  },\n  { id: 11, value: \"Institute of Theology\", label: \"Institute of Theology\" },\n  { id: 12, value: \"Law\", label: \"Law\" },\n  {\n    id: 13,\n    value: \"Mathematics and Physics\",\n    label: \"Mathematics and Physics\",\n  },\n  {\n    id: 14,\n    value: \"Mechanical and Aerospace Engineering\",\n    label: \"Mechanical and Aerospace Engineering\",\n  },\n  {\n    id: 15,\n    value: \"Medicine, Dentistry and Biomedical Sciences\",\n    label: \"Medicine, Dentistry and Biomedical Sciences\",\n  },\n  {\n    id: 16,\n    value: \"Natural and Built Environment\",\n    label: \"Natural and Built Environment\",\n  },\n  { id: 17, value: \"Nursing and Midwifery\", label: \"Nursing and Midwifery\" },\n  { id: 18, value: \"Pharmacy\", label: \"Pharmacy\" },\n  { id: 19, value: \"Psychology\", label: \"Psychology\" },\n  {\n    id: 20,\n    value: \"Queen's University Management School\",\n    label: \"Queen's University Management School\",\n  },\n  {\n    id: 21,\n    value:\n      \"Senator George J Mitchell Institute for Global Peace, Security and Justice\",\n    label:\n      \"Senator George J Mitchell Institute for Global Peace, Security and Justice\",\n  },\n  {\n    id: 22,\n    value: \"Social Sciences, Education and Social Work\",\n    label: \"Social Sciences, Education and Social Work\",\n  },\n];\n\nexport const statusMenu = [\n  { id: 1, value: \"Pending\", label: \"Pending\" },\n  { id: 2, value: \"Active\", label: \"Active\" },\n  { id: 3, value: \"Disabled\", label: \"Disabled\" },\n  { id: 4, value: \"Expired\", label: \"Expired\" },\n];\n\nexport const roleMenu = [\n  { id: 1, value: \"User\", label: \"User\" },\n  { id: 2, value: \"Admin\", label: \"Admin\" },\n  { id: 3, value: \"Module Owner\", label: \"Module Owner\" },\n  { id: 4, value: \"School Management\", label: \"School Management\" },\n  { id: 5, value: \"Clerical\", label: \"Clerical\" },\n  { id: 6, value: \"Adhoc\", label: \"Adhoc\" },\n];\n\nexport const titlesMenu = [\n  { id: 1, value: \"Mr\", label: \"Mr\" },\n  { id: 2, value: \"Mrs\", label: \"Mrs\" },\n  { id: 3, value: \"Miss\", label: \"Miss\" },\n  { id: 4, value: \"Dr\", label: \"Dr\" },\n  { id: 5, value: \"Ms\", label: \"Ms\" },\n  { id: 6, value: \"Prof\", label: \"Prof\" },\n  { id: 7, value: \"Other\", label: \"Other\" },\n];\n\nexport const pronounMenu = [\n  { id: 1, value: \"He/Him\", label: \"He/Him\" },\n  { id: 2, value: \"She/Her\", label: \"She/Her\" },\n  { id: 3, value: \"They/Them\", label: \"They/Them\" },\n  { id: 4, value: \"Other\", label: \"Other\" },\n];\n\nexport const countryMenu = [\n  { id: 1, value: \"England\", label: \"England\" },\n  { id: 2, value: \"Scotland\", label: \"Scotland\" },\n  { id: 3, value: \"Wales\", label: \"Wales\" },\n  { id: 4, value: \"Northern Ireland\", label: \"Northern Ireland\" },\n];\n\nexport const Counties = [\n  { id: 1, name: \"Avon\", country: \"England\" },\n  { id: 2, name: \"Bedfordshire\", country: \"England\" },\n  { id: 3, name: \"Berkshire\", country: \"England\" },\n  { id: 4, name: \"Buckinghamshire\", country: \"England\" },\n  { id: 5, name: \"Cambridgeshire\", country: \"England\" },\n  { id: 6, name: \"Cheshire\", country: \"England\" },\n  { id: 7, name: \"Cleveland\", country: \"England\" },\n  { id: 8, name: \"Cornwall\", country: \"England\" },\n  { id: 9, name: \"Cumbria\", country: \"England\" },\n  { id: 10, name: \"Derbyshire\", country: \"England\" },\n  { id: 11, name: \"Devon\", country: \"England\" },\n  { id: 12, name: \"Dorset\", country: \"England\" },\n  { id: 13, name: \"Durham\", country: \"England\" },\n  { id: 14, name: \"East Sussex\", country: \"England\" },\n  { id: 15, name: \"Essex\", country: \"England\" },\n  { id: 16, name: \"Gloucestershire\", country: \"England\" },\n  { id: 17, name: \"Hampshire\", country: \"England\" },\n  { id: 18, name: \"Herefordshire\", country: \"England\" },\n  { id: 19, name: \"Hertfordshire\", country: \"England\" },\n  { id: 20, name: \"Isle of Wight\", country: \"England\" },\n  { id: 21, name: \"Kent\", country: \"England\" },\n  { id: 22, name: \"Lancashire\", country: \"England\" },\n  { id: 23, name: \"Leicestershire\", country: \"England\" },\n  { id: 24, name: \"Lincolnshire\", country: \"England\" },\n  { id: 25, name: \"London\", country: \"England\" },\n  { id: 26, name: \"Merseyside\", country: \"England\" },\n  { id: 27, name: \"Norfolk\", country: \"England\" },\n  { id: 28, name: \"Northamptonshire\", country: \"England\" },\n  { id: 29, name: \"Northumberland\", country: \"England\" },\n  { id: 30, name: \"North Yorkshire\", country: \"England\" },\n  { id: 31, name: \"Nottinghamshire\", country: \"England\" },\n  { id: 32, name: \"Oxfordshire\", country: \"England\" },\n  { id: 33, name: \"Rutland\", country: \"England\" },\n  { id: 34, name: \"Shropshire\", country: \"England\" },\n  { id: 35, name: \"Somerset\", country: \"England\" },\n  { id: 36, name: \"South Yorkshire\", country: \"England\" },\n  { id: 37, name: \"Staffordshire\", country: \"England\" },\n  { id: 38, name: \"Suffolk\", country: \"England\" },\n  { id: 39, name: \"Surrey\", country: \"England\" },\n  { id: 40, name: \"Tyne and Wear\", country: \"England\" },\n  { id: 41, name: \"Warwickshire\", country: \"England\" },\n  { id: 42, name: \"West Midlands\", country: \"England\" },\n  { id: 43, name: \"West Sussex\", country: \"England\" },\n  { id: 44, name: \"West Yorkshire\", country: \"England\" },\n  { id: 45, name: \"Wiltshire\", country: \"England\" },\n  { id: 46, name: \"Worcestershire\", country: \"England\" },\n  { id: 47, name: \"Clwyd\", country: \"Wales\" },\n  { id: 48, name: \"Dyfed\", country: \"Wales\" },\n  { id: 49, name: \"Gwent\", country: \"Wales\" },\n  { id: 50, name: \"Gwynedd\", country: \"Wales\" },\n  { id: 51, name: \"Mid Glamorgan\", country: \"Wales\" },\n  { id: 52, name: \"Powys\", country: \"Wales\" },\n  { id: 53, name: \"South Glamorgan\", country: \"Wales\" },\n  { id: 54, name: \"West Glamorgan\", country: \"Wales\" },\n  { id: 55, name: \"Aberdeenshire\", country: \"Scotland\" },\n  { id: 56, name: \"Angus\", country: \"Scotland\" },\n  { id: 57, name: \"Argyll\", country: \"Scotland\" },\n  { id: 58, name: \"Ayrshire\", country: \"Scotland\" },\n  { id: 59, name: \"Banffshire\", country: \"Scotland\" },\n  { id: 60, name: \"Berwickshire\", country: \"Scotland\" },\n  { id: 61, name: \"Bute\", country: \"Scotland\" },\n  { id: 62, name: \"Caithness\", country: \"Scotland\" },\n  { id: 63, name: \"Clackmannanshire\", country: \"Scotland\" },\n  { id: 64, name: \"Dumfriesshire\", country: \"Scotland\" },\n  { id: 65, name: \"Dunbartonshire\", country: \"Scotland\" },\n  { id: 66, name: \"East Lothian\", country: \"Scotland\" },\n  { id: 67, name: \"Fife\", country: \"Scotland\" },\n  { id: 68, name: \"Inverness-shire\", country: \"Scotland\" },\n  { id: 69, name: \"Kincardineshire\", country: \"Scotland\" },\n  { id: 70, name: \"Kinross-shire\", country: \"Scotland\" },\n  { id: 71, name: \"Kirkcudbrightshire\", country: \"Scotland\" },\n  { id: 72, name: \"Lanarkshire\", country: \"Scotland\" },\n  { id: 73, name: \"Midlothian\", country: \"Scotland\" },\n  { id: 74, name: \"Moray\", country: \"Scotland\" },\n  { id: 75, name: \"Nairnshire\", country: \"Scotland\" },\n  { id: 76, name: \"Orkney\", country: \"Scotland\" },\n  { id: 77, name: \"Peeblesshire\", country: \"Scotland\" },\n  { id: 78, name: \"Perthshire\", country: \"Scotland\" },\n  { id: 79, name: \"Renfrewshire\", country: \"Scotland\" },\n  { id: 80, name: \"Ross-shire\", country: \"Scotland\" },\n  { id: 81, name: \"Roxburghshire\", country: \"Scotland\" },\n  { id: 82, name: \"Selkirkshire\", country: \"Scotland\" },\n  { id: 83, name: \"Shetland\", country: \"Scotland\" },\n  { id: 84, name: \"Stirlingshire\", country: \"Scotland\" },\n  { id: 85, name: \"Sutherland\", country: \"Scotland\" },\n  { id: 86, name: \"West Lothian\", country: \"Scotland\" },\n  { id: 87, name: \"Wigtownshire\", country: \"Scotland\" },\n  { id: 88, name: \"Antrim\", country: \"Northern Ireland\" },\n  { id: 89, name: \"Armagh\", country: \"Northern Ireland\" },\n  { id: 90, name: \"Down\", country: \"Northern Ireland\" },\n  { id: 91, name: \"Fermanagh\", country: \"Northern Ireland\" },\n  { id: 92, name: \"Londonderry\", country: \"Northern Ireland\" },\n  { id: 93, name: \"Tyrone\", country: \"Northern Ireland\" },\n];\n\nexport const deliveryCode = [\n  { id: 1, value: \"TA (Non-PGR)\", label: \"TA (Non-PGR)\" },\n  { id: 2, value: \"PGTA (PGR)\", label: \"PGTA (PGR)\" },\n];\n\nexport const semester = [\n  { id: 1, value: \"1\", label: \"Semester 1\" },\n  { id: 2, value: \"2\", label: \"Semester 2\" },\n  { id: 3, value: \"3\", label: \"Semester 3\" },\n];\n\nexport const deliveryCategory = [\n  { id: 1, value: \"TA\", label: \"TA (Non-PGR)\" },\n  { id: 2, value: \"PGTA\", label: \"PGTA (PGR)\" },\n];\n\nexport const academicYear = [\n  { id: 1, value: \"2020/2021\", label: \"2020/2021\" },\n  { id: 2, value: \"2021/2022\", label: \"2021/2022\" },\n  { id: 3, value: \"2022/2023\", label: \"2022/2023\" },\n];\n\nexport const monthWords = [\n  { id: 1, value: \"January\", label: \"January\" },\n  { id: 2, value: \"February\", label: \"February\" },\n  { id: 3, value: \"March\", label: \"March\" },\n  { id: 4, value: \"April\", label: \"April\" },\n  { id: 5, value: \"May\", label: \"May\" },\n  { id: 6, value: \"June\", label: \"June\" },\n  { id: 7, value: \"July\", label: \"July\" },\n  { id: 8, value: \"August\", label: \"August\" },\n  { id: 9, value: \"September\", label: \"September\" },\n  { id: 10, value: \"October\", label: \"October\" },\n  { id: 11, value: \"November\", label: \"November\" },\n  { id: 12, value: \"December\", label: \"December\" },\n];\n\nexport const yearsDD = [\n  { value: 2020 },\n  { value: 2021 },\n  { value: 2022 },\n  { value: 2023 },\n  { value: 2024 },\n  { value: 2025 },\n];\n\n","import React, { Fragment } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n//Context\nimport { monthWords } from \"../../utils/dropdowns\";\n\n//Components\nimport { Grid, Chip, Typography } from \"@material-ui/core\";\nimport { Pageview } from \"@material-ui/icons\";\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n\nconst date = new Date().toUTCString();\n\nconst UserPayments = (props) => {\n  const { user, userPayments, userPaymentsLoading } = props;\n\n  const history = useHistory();\n\n  function MonthWords(i) {\n    const arr = monthWords.map((value) => value.value);\n    return arr[i - 1];\n  }\n\n  const viewPayment = (dataIndex) => {\n    let path = `/payments/${dataIndex}`;\n    history.push(path);\n  };\n\n  const CustomChip = ({ label, onDelete }) => {\n    return (\n      <Chip\n        variant=\"outlined\"\n        color=\"primary\"\n        label={label}\n        onDelete={onDelete}\n      />\n    );\n  };\n\n  const CustomFilterList = (props) => {\n    return <TableFilterList {...props} ItemComponent={CustomChip} />;\n  };\n\n  const options = {\n    filter: true,\n    filterType: \"dropdown\",\n    sortOrder: {\n      name: \"paymentPeriodNum\",\n      direction: \"asc\",\n    },\n    downloadOptions: {\n      filterOptions: {\n        useDisplayedColumnsOnly: false,\n        useDisplayedRowsOnly: true,\n      },\n      filename: `${user.QUBID}Payments-${date}.csv`,\n    },\n    selectableRowsHideCheckboxes: false,\n    rowsPerPageOptions: [5, 10, 20, 50, 100],\n    rowsPerPage: 10,\n    draggableColumns: {\n      enabled: false,\n    },\n    selectableRowsHideCheckboxes: true,\n    // customToolbar: () => {\n    //   return <CustomToolbar />;\n    // },\n  };\n\n  const columns = [\n    {\n      name: \"_id\",\n      label: \"UserId\",\n      options: {\n        filter: false,\n        display: false,\n        download: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"paymentPeriodNum\",\n      label: \"Month\",\n      options: {\n        filter: false,\n        display: false,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"paymentPeriod\",\n      label: \"Month\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n        customBodyRender: (value) => {\n          return MonthWords(value);\n        },\n      },\n    },\n    {\n      name: \"QUBID\",\n      label: \"QUBID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"academicYear\",\n      label: \"Year\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"deliveredBy\",\n      label: \"Role\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"amount\",\n      label: \"Amount\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return new Intl.NumberFormat(\"en-GB\", {\n            style: \"currency\",\n            currency: \"GBP\",\n          }).format(value);\n        },\n      },\n    },\n    {\n      name: \"paymentStatus\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"\",\n      options: {\n        filter: false,\n        sort: false,\n        empty: true,\n        download: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <>\n              <Grid\n                container\n                direction=\"row\"\n                alignContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Typography align=\"center\">\n                  <Pageview\n                    fontSize=\"small\"\n                    onClick={() => viewPayment(tableMeta.rowData[0])}\n                    userID={tableMeta.rowData[0]}\n                  />\n                  <Typography align=\"center\" display=\"block\" variant=\"caption\">\n                    View\n                  </Typography>\n                </Typography>\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <div>\n        <div>\n          {userPayments !== null && !userPaymentsLoading ? (\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <MUIDataTable\n                  title={\n                    <div>\n                      <Typography variant=\"h5\">My Payments</Typography>\n                    </div>\n                  }\n                  data={userPayments}\n                  columns={columns}\n                  options={options}\n                  components={{\n                    TableFilterList: CustomFilterList,\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <ProgressIndicator />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UserPayments;\n","import { createContext } from \"react\";\n\nconst authContext = createContext();\n\nexport default authContext;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Payments from \"@material-ui/icons/AccountBalanceWallet\";\nimport Reports from \"@material-ui/icons/Assessment\";\nimport Admin from \"@material-ui/icons/Settings\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\n//State\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst NavButtonHome = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const authContext = useContext(AuthContext);\n  const { user } = authContext;\n  const { isAdmin } = props;\n\n  useEffect(() => {\n    if (user !== null) {\n      setUserID(user._id);\n    } else {\n      setUserID({\n        _id: \"\",\n      });\n    }\n  }, [authContext, user]);\n\n  const [userID, setUserID] = useState({\n    _id: \"\",\n  });\n\n  let actions;\n\n  // eslint-disable-next-line no-lone-blocks\n  {\n    isAdmin\n      ? (actions = [\n          {\n            id: 1,\n            icon: (\n              <Link to=\"/userAdmin\">\n                <GroupIcon />\n              </Link>\n            ),\n            name: \"User Management\",\n          },\n          {\n            id: 2,\n            icon: (\n              <Link to=\"/payments\">\n                <Payments />\n              </Link>\n            ),\n            name: \"Payments\",\n          },\n          // {\n          //   id: 3,\n          //   icon: (\n          //     <Link to=\"#\">\n          //       <Reports />\n          //     </Link>\n          //   ),\n          //   name: \"Report Manager\",\n          // },\n          // {\n          //   id: 4,\n          //   icon: (\n          //     <Link to=\"#\">\n          //       <Admin />\n          //     </Link>\n          //   ),\n          //   name: \"Admin\",\n          // },\n          {\n            id: 5,\n            icon: (\n              <Link to=\"/about\">\n                <InfoIcon />\n              </Link>\n            ),\n            name: \"About\",\n          },\n        ])\n      : (actions = [\n          {\n            id: 6,\n            icon: (\n              <Link to={`/user/${userID}`}>\n                <PersonIcon />\n              </Link>\n            ),\n            name: \"My Profile\",\n          },\n          {\n            id: 5,\n            icon: (\n              <Link to=\"/about\">\n                <InfoIcon />\n              </Link>\n            ),\n            name: \"About\",\n          },\n        ]);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"Home Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={handleClose}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n\nexport default NavButtonHome;\n","import { createContext } from \"react\";\n\nconst paymentContext = createContext();\n\nexport default paymentContext;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Grid } from \"@material-ui/core\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n//ScoreCards\nimport UserCountKPI from \"../../components/charts/UserCountKPI\";\nimport UserCountKPITaxSigned from \"../../components/charts/UserCountKPITaxSigned\";\nimport PaymentPendingAuthCountKPI from \"../../components/charts/PaymentPendingAuthCountKPI\";\nimport PaymentPendingAuthValueKPI from \"../../components/charts/PaymentPendingAuthValueKPI\";\nimport PaymentsAuthValueKPI from \"../../components/charts/PaymentsAuthValueKPI\";\nimport PaymentsAuthValueYTDKPI from \"../../components/charts/PaymentsAuthValueYTDKPI\";\nimport UserPaymentsView from \"../../components/payments/UserPayments\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n\n//Navigation\nimport NavButtonHome from \"../../components/layouts/NavButtonHome\";\n//State\nimport AuthContext from \"../../context/auth/authContext\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport PaymentContext from \"../../context/payment/paymentContext\";\n\nfunction MuiAlert(props) {\n  return <Alert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"right\",\n    color: theme.palette.text.secondary,\n  },\n  right: {\n    textAlign: \"right\",\n  },\n  left: {\n    textAlign: \"left\",\n  },\n  table: {\n    minWidth: 700,\n  },\n  spacer: {\n    marginTop: theme.spacing(2),\n  },\n  textField: {\n    \"& > *\": {},\n  },\n  footer: {\n    minHeight: 100,\n  },\n  inputField: {\n    textAlign: \"center\",\n  },\n  inputCenter: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: theme.typography.pxToRem(14),\n  },\n  finalButton: {\n    margin: theme.spacing(2),\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData } = statsContext;\n  const authContext = useContext(AuthContext);\n  const { user, loadUser, resendVerifyEmail, isAdmin } = authContext;\n  const paymentContext = useContext(PaymentContext);\n  const { loading, getUserPayments, userPayments } = paymentContext;\n\n  const getGreeting = () => {\n    const timeOfDayWords = new Date();\n    if (timeOfDayWords.getHours() >= 4 && timeOfDayWords.getHours() < 12) {\n      return \"Good Morning\";\n    } else if (\n      timeOfDayWords.getHours() >= 12 &&\n      timeOfDayWords.getHours() <= 16\n    ) {\n      return \"Good Day\";\n    } else if (\n      timeOfDayWords.getHours() >= 17 &&\n      timeOfDayWords.getHours() <= 23\n    ) {\n      return \"Good Evening\";\n    } else {\n      return \"Good Night\";\n    }\n  };\n\n  const [userID, setUserID] = useState({\n    id: \"\",\n  });\n\n  useEffect(() => {\n    loadUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    getStatData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (user && user._id) {\n      getUserPayments(user._id);\n      setUserID({ id: user._id });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user]);\n  \n  \n  const resendEmail = () => {\n    resendVerifyEmail(userID.id);\n  };\n\n  return (\n    <>\n      <h1 className=\"HomeGreeting\">\n        {getGreeting()}, {user && user.firstName}\n      </h1>\n\n      {loading && authContext.loading ? (\n        <ProgressIndicator />\n      ) : (\n        <>\n          {isAdmin ? (\n            <>\n              <NavButtonHome isAdmin={isAdmin} />\n              {stats && stats[1].statsPending !== 0 ? (\n                <h3 className=\"HomeGreetingSubtitle\">You have pending tasks</h3>\n              ) : (\n                <h3 className=\"HomeGreetingSubtitle\">You are all caught up</h3>\n              )}\n              <Grid container direction=\"row\" spacing={4} alignItems=\"stretch\">\n                <Grid item md xs={12} sm={6}>\n                  <UserCountKPI key={1} />\n                  </Grid>\n                  <Grid item md xs={12} sm={6}>\n                  <UserCountKPITaxSigned key={10} />\n                </Grid>\n                <Grid item xs={12} md sm={6}>\n                  <PaymentPendingAuthCountKPI key={2} />\n                </Grid>\n              </Grid>\n              <Grid container direction=\"row\" spacing={4} alignItems=\"stretch\">\n                <Grid item xs={12} md sm={6}>\n                  <PaymentPendingAuthValueKPI key={3} />\n                </Grid>\n                <Grid item xs={12} md sm={6}>\n                  <PaymentsAuthValueKPI />\n                </Grid>\n                <Grid item xs={12} md sm={6}>\n                  <PaymentsAuthValueYTDKPI />\n                </Grid>\n              </Grid>\n              <Grid container spacing={10}>\n                <Grid\n                  item\n                  xs={12}\n                  className={clsx(classes.footer, classes.left)}\n                ></Grid>\n              </Grid>\n            </>\n          ) : user && user.role === \"Module Owner\" ? (\n            <>\n              <NavButtonHome isAdmin={isAdmin} />\n              {stats && stats[1].statsPending !== 0 ? (\n                <h3 className=\"HomeGreetingSubtitle\">You have pending tasks</h3>\n              ) : (\n                <h3 className=\"HomeGreetingSubtitle\">You are all caught up</h3>\n              )}\n              <Grid container direction=\"row\" spacing={4} alignItems=\"stretch\">\n                <Grid item md={6} xs={12} sm={6}>\n                  <UserCountKPI key={1} />\n                </Grid>\n                <Grid item xs={12} md={6} sm={6}>\n                  <PaymentPendingAuthCountKPI key={2} />\n                </Grid>\n              </Grid>\n              <Grid container direction=\"row\" spacing={4} alignItems=\"stretch\">\n                <Grid item xs={12} md sm={6}>\n                  <PaymentPendingAuthValueKPI key={3} />\n                </Grid>\n                <Grid item xs={12} md sm={6}>\n                  <PaymentsAuthValueKPI />\n                </Grid>\n                <Grid item xs={12} md sm={6}>\n                  <PaymentsAuthValueYTDKPI />\n                </Grid>\n              </Grid>\n              <Grid container spacing={10}>\n                <Grid\n                  item\n                  xs={12}\n                  className={clsx(classes.footer, classes.left)}\n                ></Grid>\n              </Grid>\n            </>\n          ) : (\n            <>\n              {user && !user.emailVerified ? (\n                <MuiAlert\n                  style={{ marginBottom: \"20px\" }}\n                  severity=\"warning\"\n                  action={\n                    <Button onClick={resendEmail} color=\"inherit\" size=\"small\">\n                      Resend Email\n                    </Button>\n                  }\n                >\n                  <AlertTitle>Email Address Pending Validation</AlertTitle>\n                  Please click the verify link issued to {user.email} or click\n                  the resend email button\n                </MuiAlert>\n              ) : user && !user.NINO ? (\n                <>\n                  <MuiAlert\n                    style={{ marginBottom: \"20px\" }}\n                    severity=\"warning\"\n                    action={\n                      <Button\n                        component={Link}\n                        to={`/user/${user._id }`}\n                        color=\"inherit\"\n                        size=\"small\"\n                      >\n                        My Profile\n                      </Button>\n\n                    }\n                  >\n                    <AlertTitle>Please complete your User Profile</AlertTitle>\n                    Your user account is currently incomplete, please navigate\n                    to your user profile and complete all of the required fields\n                  </MuiAlert>\n                  <NavButtonHome isAdmin={isAdmin} />\n                </>\n              ) : (\n                <NavButtonHome isAdmin={isAdmin} />\n              )}\n              {user && !user.taxDeclaration[0].signed ? (\n                <>\n                  <MuiAlert\n                    style={{ marginBottom: \"20px\" }}\n                    severity=\"error\"\n                    action={\n                      <Button\n                        component={Link}\n                        to={`/user/${user._id }`}\n                        color=\"inherit\"\n                        size=\"small\"\n                      >\n                        My Profile\n                      </Button>\n                    }\n                  >\n                    <AlertTitle>\n                      Please complete your Tax Declaration\n                    </AlertTitle>\n                    <p>\n                      You must complete the tax declaration before you can be\n                      undertake any demonstrator activities.\n                    </p>\n                    Your module coordinator will be unable to process payments\n                    until you have successfully submitted a tax declaration.\n                    Please navigate to your user profile to complete\n                  </MuiAlert>\n                  <NavButtonHome isAdmin={isAdmin} />\n                </>\n              ) : (\n                \"\"\n              )}\n              {!loading && user && userPayments.payments.length ? (\n                <Grid container spacing={10}>\n                  <Grid item xs={12}>\n                    <UserPaymentsView\n                      user={user}\n                      userPayments={userPayments.payments}\n                      userPaymentsLoading={loading}\n                    />\n                  </Grid>\n                </Grid>\n              ) : (\n                <h4>\n                  You currently have no payments recorded. If required, please\n                  liaise with your module coordinator\n                </h4>\n              )}\n              <Grid container spacing={10}>\n                <Grid\n                  item\n                  xs={12}\n                  className={clsx(classes.footer, classes.left)}\n                ></Grid>\n              </Grid>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import { createContext } from \"react\";\n\nconst userAdminContext = createContext();\n\nexport default userAdminContext;\n","import React, { useState, useContext, useEffect } from \"react\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport { schoolMenu, statusMenu, roleMenu } from \"../../utils/dropdowns\";\nimport { useSnackbar } from \"notistack\";\n//UI\nimport Button from \"@material-ui/core/Button\";\nimport {\n  TextField,\n  Tooltip,\n  MenuItem,\n  FormLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"47%\",\n  },\n  textLabel: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    width: \"26ch\",\n  },\n  textFieldFull: {\n    margin: theme.spacing(1),\n    width: \"97%\",\n  },\n  text: {\n    textAlign: \"center\",\n  },\n}));\n\nconst UserAdminAddModal = () => {\n  const classes = useStyles();\n  const authContext = useContext(AuthContext);\n  const { passwordResetRequest } = authContext;\n  const userAdminContext = useContext(UserAdminContext);\n  const {\n    addUser,\n    clearCurrent,\n    current,\n    updateUser,\n    setDialogClosed,\n    toggleDialog,\n    error,\n  } = userAdminContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setUser(current);\n    } else {\n      setUser({\n        address: [\n          {\n            street: \"\",\n            city: \"\",\n            county: \"\",\n            country: \"\",\n            postcode: \"\",\n          },\n        ],\n        contact: [\n          {\n            mobile: \"\",\n            landline: \"\",\n          },\n        ],\n        bank: [\n          {\n            bankName: \"\",\n            branchName: \"\",\n            sortCode: \"\",\n            accNumber: \"\",\n            buildingSocietyNumber: \"\",\n          },\n        ],\n        dob: \"\",\n        email: \"\",\n        emailTokenIssued: \"\",\n        emailTokenExpiry: \"\",\n        emailVerified: false,\n        emailVerifiedDate: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        nino: \"\",\n        password: \"\",\n        password1: \"\",\n        passwordResetToken: \"\",\n        passwordResetTokenExpiresAt: \"\",\n        pronoun: \"\",\n        payment: \"\",\n        payment1: \"\",\n        QUBID: \"\",\n        NSPID: \"\",\n        qubSchool: \"\",\n        role: \"\",\n        status: \"Pending\",\n        title: \"\",\n        taxDeclaration: [\n          {\n            employeeStatements_section1: \"A\",\n            employeeStatements_section2: \"1\",\n            employeeStatements_section3q1: \"false\",\n            employeeStatements_section3q2: \"false\",\n            employeeStatements_section3q3: \"false\",\n            employeeStatements_section3q4: \"1\",\n            employeeStatements_section3q5: \"false\",\n            signed: false,\n          },\n        ],\n      });\n    }\n  }, [userAdminContext, current]);\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const [user, setUser] = useState({\n    dob: \"\",\n    email: \"\",\n    emailVerificationToken: \"\",\n    emailVerificationTokenExpiresAt: \"\",\n    emailVerified: false,\n    userImg: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\",\n    password1: \"\",\n    passwordResetToken: \"\",\n    passwordResetTokenExpiresAt: \"\",\n    payment: \"\",\n    payment1: \"\",\n    QUBID: \"\",\n    NSPID: \"\",\n    role: \"User\",\n    status: \"Pending\",\n    qubSchool: \"\",\n  });\n\n  const {\n    dob,\n    email,\n    firstName,\n    lastName,\n    password,\n    password1,\n    QUBID,\n    NSPID,\n    role,\n    status,\n    qubSchool,\n  } = user;\n\n  const onChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onCloseDialog = () => {\n    clearCurrent();\n    clearAll();\n    setDialogClosed();\n  };\n\n  const passwordReset = () => {\n    passwordResetRequest(current._id);\n    onCloseDialog();\n    enqueueSnackbar(`Password Reset Sent`, {\n      variant: \"success\",\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!error) {\n      if (current === null) {\n        if (password !== password1) {\n          enqueueSnackbar(`Password Error! Check Passwords Match`, {\n            variant: \"error\",\n          });\n        } else {\n          addUser(user);\n          onCloseDialog();\n        }\n      } else {\n        updateUser(user);\n        onCloseDialog();\n        enqueueSnackbar(`User Updated`, {\n          variant: \"success\",\n        });\n      }\n      clearAll();\n    } else {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={toggleDialog}\n        onClose={onCloseDialog}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        {current ? (\n          <DialogTitle id=\"form-dialog-title\">Edit a user</DialogTitle>\n        ) : (\n          <DialogTitle id=\"form-dialog-title\">Add a user</DialogTitle>\n        )}\n\n        <DialogContent>\n          {current ? (\n            <DialogContentText className={classes.text}>\n              To edit a new user please update the fields fields below\n            </DialogContentText>\n          ) : (\n            <DialogContentText className={classes.text}>\n              To add a new user please complete all fields below\n            </DialogContentText>\n          )}\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                className={classes.textField}\n                required\n                id=\"firstName\"\n                type=\"text\"\n                name=\"firstName\"\n                placeholder=\"First Name\"\n                value={firstName}\n                onChange={onChange}\n                label=\"First Name\"\n                variant=\"outlined\"\n              />\n              <TextField\n                className={classes.textField}\n                required\n                id=\"lastName\"\n                type=\"text\"\n                name=\"lastName\"\n                placeholder=\"Last Name\"\n                value={lastName}\n                onChange={onChange}\n                label=\"Last Name\"\n                variant=\"outlined\"\n              />\n              <TextField\n                required\n                className={classes.textFieldFull}\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email Address\"\n                value={email}\n                onChange={onChange}\n                label=\"Email Address\"\n                variant=\"outlined\"\n              />\n              <TextField\n                required\n                className={classes.textField}\n                id=\"dob\"\n                type=\"date\"\n                name=\"dob\"\n                value={dob || \"2000-01-01\"}\n                onChange={onChange}\n                label=\"Date Of Birth\"\n                variant=\"outlined\"\n              />\n              <div>\n                  <TextField\n                    className={classes.textField}\n                    required\n                    id=\"QUBID\"\n                    type=\"text\"\n                    name=\"QUBID\"\n                    placeholder=\"QUB ID\"\n                    value={QUBID}\n                    onChange={onChange}\n                    label=\"QUB ID\"\n                    variant=\"outlined\"\n                  />\n                <TextField\n                  className={classes.textField}\n                  disabled={!role || role !== \"User\" ? true : false}\n                  id=\"NSPID\"\n                  type=\"text\"\n                  name=\"NSPID\"\n                  placeholder=\"NSP ID\"\n                  value={NSPID}\n                  onChange={onChange}\n                  label=\"NSP ID\"\n                  variant=\"outlined\"\n                />\n              </div>\n              {current ? (\n                <TextField\n                  className={classes.textField}\n                  select\n                  variant=\"outlined\"\n                  id=\"status\"\n                  name=\"status\"\n                  label=\"Select Status\"\n                  value={status}\n                  onChange={onChange}\n                >\n                  {statusMenu.map((option) => (\n                    <MenuItem key={option.id} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : (\n                <TextField\n                  className={classes.textField}\n                  disabled\n                  variant=\"outlined\"\n                  id=\"status\"\n                  name=\"status\"\n                  label=\"Select Status\"\n                  value=\"Pending\"\n                  onChange={onChange}\n                />\n              )}\n              <TextField\n                className={classes.textField}\n                select\n                variant=\"outlined\"\n                id=\"role\"\n                name=\"role\"\n                label=\"Select Role\"\n                value={role}\n                onChange={onChange}\n              >\n                {roleMenu.map((option) => (\n                  <MenuItem key={option.id} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <div>\n                <TextField\n                  className={classes.textFieldFull}\n                  select\n                  variant=\"outlined\"\n                  id=\"qubSchool\"\n                  name=\"qubSchool\"\n                  label=\"Select A School\"\n                  value={qubSchool}\n                  onChange={onChange}\n                >\n                  {schoolMenu.map((option) => (\n                    <MenuItem key={option.id} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                {current ? (\n                  \"\"\n                ) : (\n                  <>\n                    <FormLabel className={classes.textLabel} component=\"legend\">\n                      Set Password\n                    </FormLabel>\n                    <TextField\n                      className={classes.textField}\n                      required\n                      id=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Set Password\"\n                      value={password}\n                      onChange={onChange}\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      className={classes.textField}\n                      required\n                      id=\"password1\"\n                      label=\"Password\"\n                      type=\"password\"\n                      name=\"password1\"\n                      placeholder=\"Repeat Password\"\n                      value={password1}\n                      onChange={onChange}\n                      variant=\"outlined\"\n                    />\n                  </>\n                )}\n              </div>\n            </div>\n            {current ? (\n              <>\n                <DialogActions>\n                  <Button\n                    onClick={passwordReset}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    Password Reset\n                  </Button>\n                  <Button\n                    onClick={onCloseDialog}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button onClick={onSubmit} variant=\"outlined\" color=\"primary\">\n                    Update\n                  </Button>\n                </DialogActions>\n              </>\n            ) : (\n              <>\n                <DialogActions>\n                  <Button\n                    onClick={onCloseDialog}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button onClick={onSubmit} variant=\"outlined\" color=\"primary\">\n                    Submit\n                  </Button>\n                </DialogActions>\n              </>\n            )}\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default UserAdminAddModal;\n","import React, {useState, useContext} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport CallMerge from '@material-ui/icons/CallMerge';\n\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\n// UI\nimport UserAdminAddModal from \"../userAdmin/UserAdminAddModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\n\nconst NavButtonUserMgmt = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false)\n  const userAdminContext = useContext(UserAdminContext);\n  const {\n    setDialogOpen,\n    setDialogClosed,\n    toggleDialog,\n  } = userAdminContext;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const openDialog = () => {\n    setDialogOpen()\n  }\n\n  const closeDialog = () => {\n    setDialogClosed()\n  }\n\n\n  function handleClick (e,id){\n    e.preventDefault();\n    if(id === 2){\n      openDialog()\n    }\n  };\n\n  const actions = [\n    { id: 1, icon: (<Link to=\"/\"><ArrowBackIcon /></Link>), name: \"Back\", },\n    { id: 2, icon: (<Link to=\"#\"><PersonAddIcon /></Link>), name: \"Manually Add User\" },\n    { id: 3, icon: (<Link to=\"/import\"><GroupAddIcon /></Link>), name: \"Import User File\" },\n    { id: 3, icon: (<Link to=\"/importNSP\"><CallMerge /></Link>), name: \"Import NSP Data File\" },\n  ];\n  \n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"User Management Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\"}}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={(e) => {\n              handleClick(e, action.id)\n         }}\n          />\n        ))}\n      </SpeedDial>\n      <>\n      <UserAdminAddModal open={toggleDialog} onClose={closeDialog}/>\n      </>\n    </div>\n  );\n};\n\nexport default NavButtonUserMgmt;\n","import { createContext } from \"react\";\n\nconst userContext = createContext();\n\nexport default userContext;\n","import React, { useContext, Fragment, useEffect } from \"react\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport UserContext from \"../../context/user/userContext\";\n//Components\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport { useSnackbar } from \"notistack\";\n// import CustomToolbar from \"../layouts/CustomToolbar\";\n\nconst UserAdmin = (props) => {\n  const userAdminContext = useContext(UserAdminContext);\n  const userContext = useContext(UserContext);\n  const { user } = props;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const {\n    users,\n    getUsers,\n    deleteUser,\n    loading,\n    error,\n    clearErrors,\n    setDialogOpen,\n    setCurrent,\n  } = userAdminContext;\n\n  const history = useHistory();\n\n  useEffect(() => {\n    getUsers();\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (users !== null && users.length === 0 && !loading) {\n    return <h4>Please add a user</h4>; // if user list is empty\n  }\n\n  const openDialog = (e, dataIndex) => {\n    e.preventDefault();\n    setCurrent(users[dataIndex]);\n    setDialogOpen();\n  };\n\n  const editProfile = (e, dataIndex) => {\n    userContext.setCurrent(users[dataIndex]);\n    let path = `/user/${users[dataIndex]._id}`;\n    history.push(path);\n  };\n\n  const CustomChip = ({ label, onDelete }) => {\n    return (\n      <Chip\n        variant=\"outlined\"\n        color=\"primary\"\n        label={label}\n        onDelete={onDelete}\n      />\n    );\n  };\n\n  const CustomFilterList = (props) => {\n    return <TableFilterList {...props} ItemComponent={CustomChip} />;\n  };\n\n  const options = {\n    filter: true,\n    filterType: \"dropdown\",\n    sortOrder: {\n      name: \"QUBID\",\n      direction: \"asc\",\n    },\n    downloadOptions: {\n      filterOptions: {\n        useDisplayedColumnsOnly: false,\n        useDisplayedRowsOnly: true,\n      },\n      filename: \"userAdminDownload.csv\",\n    },\n    rowsPerPageOptions: [5, 10, 20, 50, 100],\n    rowsPerPage: 10,\n    draggableColumns: {\n      enabled: true,\n    },\n    // customToolbar: () => {\n    //   return <CustomToolbar />;\n    // },\n    onRowsDelete: (rows) => {\n      if (rows.data.length <= 10) {\n        const usersToDelete = rows.data.map((d) => users[d.dataIndex]);\n        usersToDelete.forEach((a) => {\n          if (a._id === user._id) {\n            enqueueSnackbar(`You cannot delete your own record`, {\n              variant: \"error\",\n            });\n            clearErrors();\n          } else {\n            enqueueSnackbar(\n              `User ${a.firstName} ${a.lastName} (${a.QUBID}) deleted`,\n              {\n                variant: \"success\",\n              }\n            );\n            deleteUser(a._id);\n          }\n        });\n      } else {\n        userAdminContext.loading = true;\n        const usersToDelete = rows.data.map((d) => users[d.dataIndex]);\n        usersToDelete.forEach((a) => {\n          if (a._id === user._id) {\n            enqueueSnackbar(`You cannot delete your own record`, {\n              variant: \"error\",\n            });\n            clearErrors();\n          } else {\n            deleteUser(a._id);\n          }\n        });\n        userAdminContext.loading = false;\n      }\n    },\n  };\n\n  const columns = [\n    {\n      name: \"_id\",\n      label: \"UserId\",\n      options: {\n        filter: false,\n        display: false,\n        download: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"QUBID\",\n      label: \"QUBID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"firstName\",\n      label: \"First Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"lastName\",\n      label: \"Last Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"role\",\n      label: \"Role\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"status\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        sort: false,\n        empty: true,\n        download: false,\n        customBodyRenderLite: (dataIndex) => {\n          return (\n            <>\n              <Grid\n                container\n                direction=\"row\"\n                alignContent=\"center\"\n                alignItems=\"center\"\n                justify=\"space-around\"\n              >\n                <Grid item align=\"center\">\n                  <EditIcon\n                    onClick={(e) => {\n                      openDialog(e, dataIndex);\n                    }}\n                  />\n                  <Typography align=\"center\" display=\"block\" variant=\"caption\">\n                    Edit\n                  </Typography>\n                </Grid>\n                <Typography align=\"center\">\n                  <PersonIcon\n                    onClick={(e) => {\n                      editProfile(e, dataIndex);\n                    }}\n                  />\n                  <Typography align=\"center\" display=\"block\" variant=\"caption\">\n                    View\n                  </Typography>\n                </Typography>\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <div>\n        <div>\n          {users !== null && !loading ? (\n            <Grid container spacing={4}>\n              <Grid item xs={12}>\n                <MUIDataTable\n                  title={\n                    <div>\n                      <Typography variant=\"h5\">User Account Admin</Typography>\n                      <Typography variant=\"caption\">\n                        Update basic user account information\n                      </Typography>\n                    </div>\n                  }\n                  data={users}\n                  columns={columns}\n                  options={options}\n                  components={{\n                    TableFilterList: CustomFilterList,\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <ProgressIndicator />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UserAdmin;\n","import React, { useContext, useEffect } from \"react\";\n//Navigation\nimport NavButtonUserMgmt from \"../../components/layouts/NavButtonUserMgmt\";\n//Components\nimport UsersAdminTable from \"../userAdmin/UserAdmin\";\n//State\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst UserAdmin = (props) => {\n  const authContext = useContext(AuthContext);\n  const { loadUser, isAdmin, user, loading } = authContext;\n\n  useEffect(() => {\n    loadUser();\n    if (!loading && !isAdmin) {\n      props.history.push(\"/\");\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAdmin, props.history]);\n  return (\n    <>\n      <NavButtonUserMgmt />\n      <div className=\"grid-1\">\n        <UsersAdminTable user={user} isAdmin={isAdmin}/>\n      </div>\n    </>\n  );\n};\n\nexport default UserAdmin;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Payments from \"@material-ui/icons/AccountBalanceWallet\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport Reports from \"@material-ui/icons/Assessment\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\n// UI\nimport UserAdminAddModal from \"../userAdmin/UserAdminAddModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst NavButtonUserProfile = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const { isAdmin } = props;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  let actions;\n\n  // eslint-disable-next-line no-lone-blocks\n  {\n    isAdmin\n      ? (actions = [\n          {\n            id: 1,\n            icon: (\n              <Link to=\"/userAdmin\">\n                <ArrowBackIcon />\n              </Link>\n            ),\n            name: \"Back\",\n          },\n          {\n            id: 2,\n            icon: (\n              <Link to=\"/payments\">\n                <Payments />\n              </Link>\n            ),\n            name: \"Payments\",\n          },\n        ])\n      : (actions = [\n          {\n            id: 1,\n            icon: (\n              <Link to={\"/\"}>\n                <ArrowBackIcon />\n              </Link>\n            ),\n            name: \"Back\",\n          },\n        ]);\n  }\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"User Profile Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={handleClose}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n\nexport default NavButtonUserProfile;\n","import React, { useContext, useEffect, useState, Fragment } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\n//State\nimport UserContext from \"../../context/user/userContext\";\nimport {\n  titlesMenu,\n  pronounMenu,\n  countryMenu,\n  Counties,\n} from \"../../utils/dropdowns\";\n//Components\nimport {\n  Radio,\n  FormHelperText,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  Typography,\n  Tooltip,\n  Button,\n  Grid,\n  Box,\n  TextField,\n  Tabs,\n  Tab,\n  Checkbox,\n  Switch,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport clsx from \"clsx\";\nimport { useSnackbar } from \"notistack\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    fontSize: \"1.2rem\",\n  },\n  textFieldFull: {\n    margin: theme.spacing(1),\n    width: \"97%\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    margin: theme.spacing(1),\n    width: \"97%\",\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"47%\",\n  },\n  textLabel: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    width: \"26ch\",\n  },\n  text: {\n    textAlign: \"center\",\n    marginBottom: 30,\n  },\n  taxText: {\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n  },\n  taxTextSpacingTop: {\n    marginTop: 30,\n  },\n  taxTextSpacingBottom: {\n    marginBottom: 30,\n  },\n  Subtext: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst User = (props) => {\n  const classes = useStyles();\n  const { id } = useParams();\n  const userContext = useContext(UserContext);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { isAdmin } = props;\n  const { user, current, getUser, setCurrent, updateUser } = userContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setData(current);\n    } else {\n      getUser(id);\n      setCurrent(user);\n    }\n  }, [userContext, current]);\n\n  const [password, setPassword] = useState({\n    newPassword: \"\",\n    confirmPassword: \"\",\n    currentPassword: \"\",\n  });\n\n  const [data, setData] = useState({\n    address: [\n      {\n        street: \"\",\n        city: \"\",\n        county: \"\",\n        country: \"\",\n        postcode: \"\",\n      },\n    ],\n    contact: [\n      {\n        mobile: \"\",\n        landline: \"\",\n      },\n    ],\n    bank: [\n      {\n        bankName: \"\",\n        branchName: \"\",\n        sortCode: \"\",\n        accNumber: \"\",\n        buildingSocietyNumber: \"\",\n      },\n    ],\n    dob: \"\",\n    email: \"\",\n    emailTokenIssued: \"\",\n    emailTokenExpiry: \"\",\n    emailVerified: false,\n    emailVerifiedDate: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    nino: \"\",\n    password: \"\",\n    password1: \"\",\n    passwordResetToken: \"\",\n    passwordResetTokenExpiresAt: \"\",\n    pronoun: \"\",\n    payment: \"\",\n    payment1: \"\",\n    QUBID: \"\",\n    qubSchool: \"\",\n    role: \"\",\n    status: \"\",\n    title: \"\",\n    taxDeclaration: [\n      {\n        employeeStatements_section1: \"A\",\n        employeeStatements_section2: 1,\n        employeeStatements_section3q1: false,\n        employeeStatements_section3q2: false,\n        employeeStatements_section3q3: false,\n        employeeStatements_section3q4: 1,\n        employeeStatements_section3q5: false,\n        signed: false,\n      },\n    ],\n  });\n\n  const [tab, setTab] = useState(0);\n  const handleChangeTab = (event, newValue) => {\n    setTab(newValue);\n  };\n  const [preSigned, setPreSign] = useState(false);\n  const onSubmit = (e) => {\n    e.preventDefault();\n    updateUser(data);\n    enqueueSnackbar(\"User Profile Updated\", {\n      variant: \"success\",\n    });\n  };\n  const handleUpdatePassword = () => {\n    console.log(\"Update Password Test\");\n  };\n  const handleChangePassword = (e) => {\n    setPassword({\n      ...password,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const onChange = (e, i) => {\n    switch (i) {\n      case 1:\n        data.address[0][e.target.name] = e.target.value;\n        setData({ ...data });\n        break;\n      case 2:\n        data.bank[0][e.target.name] = e.target.value;\n        setData({ ...data });\n        break;\n      case 3:\n        data.contact[0][e.target.name] = e.target.value;\n        setData({ ...data });\n        break;\n      case 4:\n        data.taxDeclaration[0][e.target.name] = e.target.value;\n        setPreSign(true);\n        setData({ ...data });\n        break;\n      default:\n        setData({\n          ...data,\n          [e.target.name]: e.target.value,\n        });\n    }\n  };\n  const handleSwitchChange = (e) => {\n    data.taxDeclaration[0][e.target.name] = e.target.checked;\n    setData({ ...data });\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Box display={\"flex\"} justifyContent={\"center\"}>\n              <Tabs\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                value={tab}\n                onChange={handleChangeTab}\n              >\n                <Tab label=\"ACCOUNT\" icon={<AccountBoxIcon />} />\n                <Tab label=\"PROFILE\" icon={<PersonIcon />} />\n                <Tab label=\"TAX\" icon={<BusinessCenterIcon />} />\n                {/* <Tab label=\"CHANGE PASSWORD\" icon={<LockIcon />} /> */}\n                {/* <Tab label=\"SETTINGS\" icon={<SettingsIcon />} /> */}\n              </Tabs>\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid item justify={\"center\"} container>\n              <Box display={\"flex\"} flexDirection={\"column\"} width={600}>\n                <form>\n                  {tab === 0 ? (\n                    <>\n                      <Typography\n                        variant=\"h5\"\n                        weight=\"medium\"\n                        className={classes.text}\n                      >\n                        Edit your DemPay account details\n                      </Typography>\n                      <div>\n                        <TextField\n                          className={classes.textField}\n                          disabled\n                          id=\"QUBID\"\n                          type=\"text\"\n                          name=\"QUBID\"\n                          value={data.QUBID}\n                          onChange={onChange}\n                          label=\"QUB ID\"\n                          variant=\"outlined\"\n                        />\n                        {current && current.status !== \"Pending\" ? (\n                          <Tooltip\n                            title={`Verified on: ${moment(\n                              data.emailVerifiedDate\n                            ).format(\"DD/MM/YYYY h:mm A\")}`}\n                            arrow\n                          >\n                            <TextField\n                              className={classes.textField}\n                              disabled\n                              variant=\"outlined\"\n                              id=\"status\"\n                              name=\"status\"\n                              label=\"Status\"\n                              value={data.status}\n                              onChange={onChange}\n                            />\n                          </Tooltip>\n                        ) : (\n                          <TextField\n                            error\n                            className={classes.textField}\n                            disabled\n                            variant=\"outlined\"\n                            id=\"status\"\n                            name=\"status\"\n                            label=\"Status\"\n                            value={data.status}\n                            onChange={onChange}\n                            helperText=\"Please verify your email\"\n                          />\n                        )}\n                      </div>\n                      <TextField\n                        disabled\n                        className={classes.textFieldFull}\n                        id=\"email\"\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        value={data.email}\n                        onChange={onChange}\n                        label=\"Email Address\"\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        disabled\n                        className={classes.textFieldFull}\n                        variant=\"outlined\"\n                        id=\"role\"\n                        name=\"role\"\n                        label=\"Role\"\n                        value={data.role}\n                        onChange={onChange}\n                      />\n                      <TextField\n                        disabled\n                        className={classes.textFieldFull}\n                        variant=\"outlined\"\n                        id=\"qubSchool\"\n                        name=\"qubSchool\"\n                        label=\"QUB School\"\n                        value={data.qubSchool}\n                        onChange={onChange}\n                      />\n                    </>\n                  ) : tab === 1 ? (\n                    <>\n                      <Typography\n                        variant=\"h5\"\n                        weight=\"medium\"\n                        className={classes.text}\n                      >\n                        Edit your personal information\n                      </Typography>\n                      <Typography\n                        variant=\"h6\"\n                        weight=\"medium\"\n                        className={classes.Subtext}\n                      >\n                        Personal information\n                      </Typography>\n                      <div>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          select\n                          variant=\"outlined\"\n                          id=\"title\"\n                          name=\"title\"\n                          label=\"Title\"\n                          value={data.title}\n                          onChange={(e) => onChange(e)}\n                        >\n                          {titlesMenu.map((option) => (\n                            <MenuItem key={option.id} value={option.value}>\n                              {option.label}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          select\n                          variant=\"outlined\"\n                          id=\"pronoun\"\n                          name=\"pronoun\"\n                          label=\"Pronoun\"\n                          value={data.pronoun}\n                          onChange={(e) => onChange(e)}\n                        >\n                          {pronounMenu.map((option) => (\n                            <MenuItem key={option.id} value={option.value}>\n                              {option.label}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                      </div>\n                      <div>\n                        <TextField\n                          className={classes.textField}\n                          required\n                          id=\"firstName\"\n                          type=\"text\"\n                          name=\"firstName\"\n                          placeholder=\"First Name\"\n                          value={data.firstName}\n                          onChange={(e) => onChange(e)}\n                          label=\"First Name\"\n                          variant=\"outlined\"\n                        />\n                        <TextField\n                          className={classes.textField}\n                          required\n                          id=\"lastName\"\n                          type=\"text\"\n                          name=\"lastName\"\n                          placeholder=\"Last Name\"\n                          value={data.lastName}\n                          onChange={(e) => onChange(e)}\n                          label=\"Last Name\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n                      <div>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          id=\"dob\"\n                          type=\"date\"\n                          name=\"dob\"\n                          value={data.dob}\n                          onChange={(e) => onChange(e)}\n                          label=\"Date Of Birth\"\n                          variant=\"outlined\"\n                        />\n                        <TextField\n                          className={classes.textField}\n                          required\n                          id=\"nino\"\n                          type=\"text\"\n                          name=\"nino\"\n                          placeholder=\"XX000000X\"\n                          value={data.nino}\n                          onChange={(e) => onChange(e)}\n                          label=\"National Insurance\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n                      <div>\n                        <TextField\n                          className={classes.textField}\n                          id=\"mobile\"\n                          type=\"tel\"\n                          name=\"mobile\"\n                          placeholder=\"07000 000000\"\n                          value={data.contact[0].mobile}\n                          onChange={(e) => onChange(e, 3)}\n                          label=\"Mobile Number\"\n                          variant=\"outlined\"\n                        />\n                        <TextField\n                          className={classes.textField}\n                          id=\"landline\"\n                          type=\"tel\"\n                          name=\"landline\"\n                          placeholder=\"020 0000 0000\"\n                          value={data.contact[0].landline}\n                          onChange={(e) => onChange(e, 3)}\n                          label=\"Landline Number\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n                      <Typography\n                        variant=\"h6\"\n                        weight=\"medium\"\n                        className={classes.Subtext}\n                      >\n                        Address information\n                      </Typography>\n                      <TextField\n                        required\n                        className={classes.textFieldFull}\n                        id=\"street\"\n                        type=\"text\"\n                        name=\"street\"\n                        placeholder=\"Street Address\"\n                        value={data.address[0].street}\n                        onChange={(e) => onChange(e, 1)}\n                        label=\"Street Address\"\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        required\n                        className={classes.textFieldFull}\n                        id=\"city\"\n                        type=\"text\"\n                        name=\"city\"\n                        placeholder=\"City\"\n                        value={data.address[0].city}\n                        onChange={(e) => onChange(e, 1)}\n                        label=\"City\"\n                        variant=\"outlined\"\n                      />\n                      <div>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          select\n                          variant=\"outlined\"\n                          id=\"county\"\n                          name=\"county\"\n                          label=\"County\"\n                          value={data.address[0].county}\n                          onChange={(e) => onChange(e, 1)}\n                        >\n                          {Counties.map((option) => (\n                            <MenuItem key={option.id} value={option.name}>\n                              {option.name}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          select\n                          variant=\"outlined\"\n                          id=\"country\"\n                          name=\"country\"\n                          label=\"Country\"\n                          value={data.address[0].country}\n                          onChange={(e) => onChange(e, 1)}\n                        >\n                          {countryMenu.map((option) => (\n                            <MenuItem key={option.id} value={option.value}>\n                              {option.label}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                      </div>\n                      <TextField\n                        required\n                        className={classes.textField}\n                        id=\"postcode\"\n                        type=\"text\"\n                        name=\"postcode\"\n                        placeholder=\"Postcode\"\n                        value={data.address[0].postcode}\n                        onChange={(e) => onChange(e, 1)}\n                        label=\"Postcode\"\n                        variant=\"outlined\"\n                      />\n                      <Typography\n                        variant=\"h6\"\n                        weight=\"medium\"\n                        className={classes.Subtext}\n                      >\n                        Bank Information\n                      </Typography>\n                      <TextField\n                        required\n                        className={classes.textFieldFull}\n                        id=\"bankName\"\n                        type=\"text\"\n                        name=\"bankName\"\n                        placeholder=\"Bank Name\"\n                        value={data.bank[0].bankName}\n                        onChange={(e) => onChange(e, 2)}\n                        label=\"Bank Name\"\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        required\n                        className={classes.textFieldFull}\n                        id=\"branchName\"\n                        type=\"text\"\n                        name=\"branchName\"\n                        placeholder=\"Branch Name\"\n                        value={data.bank[0].branchName}\n                        onChange={(e) => onChange(e, 2)}\n                        label=\"Branch Name\"\n                        variant=\"outlined\"\n                      />\n                      <div>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          id=\"sortCode\"\n                          type=\"text\"\n                          name=\"sortCode\"\n                          placeholder=\"Sort Code\"\n                          value={data.bank[0].sortCode}\n                          onChange={(e) => onChange(e, 2)}\n                          label=\"Sort Code\"\n                          variant=\"outlined\"\n                        />\n                        <TextField\n                          required\n                          className={classes.textField}\n                          id=\"accNumber\"\n                          type=\"text\"\n                          name=\"accNumber\"\n                          placeholder=\"Account Number\"\n                          value={data.bank[0].accNumber}\n                          onChange={(e) => onChange(e, 2)}\n                          label=\"Account Number\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n                      <TextField\n                        className={classes.textFieldFull}\n                        id=\"buildingSocietyNumber\"\n                        type=\"text\"\n                        name=\"buildingSocietyNumber\"\n                        placeholder=\"Building Society Number\"\n                        value={data.bank[0].buildingSocietyNumber}\n                        onChange={(e) => onChange(e, 2)}\n                        label=\"Building Society Number\"\n                        variant=\"outlined\"\n                      />\n                      <Box>\n                        <Button\n                          size=\"large\"\n                          fullWidth={true}\n                          className={classes.button}\n                          onClick={onSubmit}\n                          color=\"secondary\"\n                          variant=\"contained\"\n                        >\n                          Save\n                        </Button>\n                      </Box>\n                    </>\n                  ) : tab === 2 ? (\n                    <>\n                      <Typography\n                        variant=\"h5\"\n                        weight=\"medium\"\n                        className={classes.text}\n                      >\n                        Tax Declaration\n                      </Typography>\n                      <Typography className={classes.taxText}>\n                        <h2>Section 1</h2>\n                        <h3>Employee Statement</h3>\n                        <p>\n                          You need to select only one of the following\n                          statements A, B or C, if you do not have a P45 or the\n                          leaving date on your P45 is before last 6th April.\n                        </p>\n                      </Typography>\n                      <FormControl\n                        disabled={data.taxDeclaration[0].signed}\n                        component=\"fieldset\"\n                        error={\n                          data.taxDeclaration[0].signed &&\n                          data.taxDeclaration[0].employeeStatements_section1 ===\n                            \"\"\n                        }\n                      >\n                        <RadioGroup\n                          className={clsx(\n                            classes.taxTextSpacingTop,\n                            classes.taxTextSpacingBottom\n                          )}\n                          name=\"employeeStatements_section1\"\n                          value={\n                            data.taxDeclaration[0].employeeStatements_section1\n                          }\n                          onChange={(e) => onChange(e, 4)}\n                        >\n                          <Grid\n                            className={classes.taxAlign}\n                            xs={12}\n                            container\n                            spacing={3}\n                            alignItems={\"center\"}\n                          >\n                            <Grid item xs={1}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                A\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                This is my first job since last 6 April and I\n                                have not been receiving taxable Jobseeker’s\n                                Allowance, Employment and Support Allowance,\n                                taxable A Incapacity Benefit, State or\n                                Occupational Pension.\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <FormControlLabel\n                                value=\"A\"\n                                control={<Radio />}\n                                label=\"A\"\n                              />\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section1 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                B\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                This is now my only job but since last 6 April I\n                                have had another job, or received taxable\n                                Jobseeker’s Allowance, Employment and Support\n                                Allowance or taxable Incapacity Benefit. I do\n                                not receive a State or B Occupational Pension.\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <FormControlLabel\n                                value=\"B\"\n                                control={<Radio />}\n                                label=\"B\"\n                              />\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section1 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                C\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                As well as my new job, I have another job or\n                                receive a State or Occupational Pension.\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <FormControlLabel\n                                value=\"C\"\n                                control={<Radio />}\n                                label=\"C\"\n                              />\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section1 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                          </Grid>\n                        </RadioGroup>\n                      </FormControl>\n                      <hr></hr>\n                      <Typography\n                        className={clsx(\n                          classes.taxText,\n                          classes.taxTextSpacingTop\n                        )}\n                      >\n                        <h2>Section 2</h2>\n                        <h3>Employee Statement</h3>\n                        <p>Please select the statement which applies to you</p>\n                      </Typography>\n\n                      <FormControl\n                        disabled={data.taxDeclaration[0].signed}\n                        component=\"fieldset\"\n                        error={\n                          data.taxDeclaration[0].signed &&\n                          data.taxDeclaration[0].employeeStatements_section2 ===\n                            \"\"\n                        }\n                      >\n                        <RadioGroup\n                          className={clsx(\n                            classes.taxTextSpacingTop,\n                            classes.taxTextSpacingBottom\n                          )}\n                          name=\"employeeStatements_section2\"\n                          value={\n                            data.taxDeclaration[0].employeeStatements_section2\n                          }\n                          onChange={(e) => onChange(e, 4)}\n                        >\n                          <Grid\n                            className={classes.taxAlign}\n                            xs={12}\n                            container\n                            spacing={3}\n                            alignItems={\"center\"}\n                          >\n                            <Grid item xs={1}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                1\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                I am an EU/EEA/Swiss National\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <FormControlLabel\n                                value=\"1\"\n                                control={<Radio />}\n                                label=\"1\"\n                              />\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section2 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                2\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                I am a Non-EU/EEA/Swiss National (I agree to the\n                                terms and conditions below)\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <FormControlLabel\n                                value=\"2\"\n                                control={<Radio />}\n                                label=\"2\"\n                              />\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section2 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                <p>\n                                  Please Note: Current Tier 4 students cannot be\n                                  engaged via the NSP payroll. If you are a Tier\n                                  4 student, please contact OnCampus jobs ext:\n                                  3953 in the first instance.\n                                </p>\n                                <br></br>\n                                <p>\n                                  If you are subject to any other restrictions\n                                  on your visa, completion of this form confirms\n                                  you fully understand any restrictions on\n                                  working hours of your immigration permission\n                                  and you agree to abide by those restrictions\n                                </p>\n                              </Typography>\n                            </Grid>\n                          </Grid>\n                        </RadioGroup>\n                      </FormControl>\n                      <hr></hr>\n                      <Typography\n                        className={clsx(\n                          classes.taxText,\n                          classes.taxTextSpacingTop\n                        )}\n                      >\n                        <h2>Section 3</h2>\n                        <p>Student Loan Declaration</p>\n                        <p>\n                          Please read the following questions carefully and\n                          select the statement which applies to you.\n                        </p>\n                      </Typography>\n                      <FormControl\n                        disabled={data.taxDeclaration[0].signed}\n                        component=\"fieldset\"\n                        error={\n                          (data.taxDeclaration[0].signed &&\n                            data.taxDeclaration[0]\n                              .employeeStatements_section1 === \"\") ||\n                          data.taxDeclaration[0].employeeStatements_section2 ===\n                            \"\" ||\n                          data.taxDeclaration[0]\n                            .employeeStatements_section3q1 === \"\" ||\n                          (data.taxDeclaration[0]\n                            .employeeStatements_section3q1 === \"true\" &&\n                            data.taxDeclaration[0]\n                              .employeeStatements_section3q2 === \"\") ||\n                          (data.taxDeclaration[0]\n                            .employeeStatements_section3q2 === \"true\" &&\n                            data.taxDeclaration[0]\n                              .employeeStatements_section3q3 === \"\") ||\n                          (data.taxDeclaration[0]\n                            .employeeStatements_section3q3 === \"false\" &&\n                            data.taxDeclaration[0]\n                              .employeeStatements_section3q4 === \"\") ||\n                          data.taxDeclaration[0]\n                            .employeeStatements_section3q5 === \"\"\n                        }\n                      >\n                        <RadioGroup\n                          className={clsx(\n                            classes.taxTextSpacingTop,\n                            classes.taxTextSpacingBottom\n                          )}\n                          name=\"employeeStatements_section3q1\"\n                          value={\n                            data.taxDeclaration[0].employeeStatements_section3q1\n                          }\n                          onChange={(e) => onChange(e, 4)}\n                        >\n                          <Grid\n                            className={classes.taxAlign}\n                            xs={12}\n                            container\n                            spacing={3}\n                            alignItems={\"center\"}\n                          >\n                            <Grid item xs={12}>\n                              <Typography weight=\"medium\">\n                                <p>Question 1:</p>\n                                <p>\n                                  Have you left full-time education before the\n                                  last 6th April?\n                                </p>\n                              </Typography>\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section3q1 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                            <Grid item xs={6}>\n                              <FormControlLabel\n                                value={\"true\"}\n                                control={<Radio />}\n                                label=\"Yes\"\n                              />\n                              <Typography variant=\"p\" weight=\"medium\">\n                                (Go to Question 2)\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                              <FormControlLabel\n                                value={\"false\"}\n                                control={<Radio />}\n                                label=\"No\"\n                              />\n                              <Typography variant=\"p\" weight=\"medium\">\n                                (Sign the declaration below)\n                              </Typography>\n                            </Grid>\n                          </Grid>\n                        </RadioGroup>\n                        {data.taxDeclaration[0]\n                          .employeeStatements_section3q1 === \"true\" ? (\n                          <>\n                            <RadioGroup\n                              className={clsx(classes.taxTextSpacingBottom)}\n                              name=\"employeeStatements_section3q2\"\n                              value={\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section3q2\n                              }\n                              onChange={(e) => onChange(e, 4)}\n                            >\n                              <Grid\n                                className={classes.taxAlign}\n                                xs={12}\n                                container\n                                spacing={3}\n                                alignItems={\"center\"}\n                              >\n                                <Grid item xs={12}>\n                                  <Typography variant=\"p\" weight=\"medium\">\n                                    <p>Question 2:</p>\n                                    <p>\n                                      Do you have a Student Loan which is not\n                                      fully repaid?\n                                    </p>\n                                  </Typography>\n                                  <FormHelperText>\n                                    {data.taxDeclaration[0].signed &&\n                                    data.taxDeclaration[0]\n                                      .employeeStatements_section3q2 === \"\"\n                                      ? \"Required\"\n                                      : \"\"}\n                                  </FormHelperText>\n                                </Grid>\n                                <Grid item xs={6}>\n                                  <FormControlLabel\n                                    value=\"true\"\n                                    control={<Radio />}\n                                    label=\"Yes\"\n                                  />\n                                  <Typography variant=\"p\" weight=\"medium\">\n                                    (Go to Question 3)\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                  <FormControlLabel\n                                    value=\"false\"\n                                    control={<Radio />}\n                                    label=\"No\"\n                                  />\n                                  <Typography variant=\"p\" weight=\"medium\">\n                                    (Sign the declaration below)\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </RadioGroup>\n                            {data.taxDeclaration[0]\n                              .employeeStatements_section3q2 === \"true\" ? (\n                              <>\n                                <RadioGroup\n                                  className={clsx(classes.taxTextSpacingBottom)}\n                                  name=\"employeeStatements_section3q3\"\n                                  value={\n                                    data.taxDeclaration[0]\n                                      .employeeStatements_section3q3\n                                  }\n                                  onChange={(e) => onChange(e, 4)}\n                                >\n                                  <Grid\n                                    className={classes.taxAlign}\n                                    xs={12}\n                                    container\n                                    spacing={3}\n                                    alignItems={\"center\"}\n                                  >\n                                    <Grid item xs={12}>\n                                      <Typography weight=\"medium\">\n                                        <p>Question 3:</p>\n                                        <p>\n                                          Are you repaying your Student Loan\n                                          direct to the Student Loan Company by\n                                          agreed monthly payments?\n                                        </p>\n                                      </Typography>\n                                      <FormHelperText>\n                                        {data.taxDeclaration[0].signed &&\n                                        data.taxDeclaration[0]\n                                          .employeeStatements_section3q3 === \"\"\n                                          ? \"Required\"\n                                          : \"\"}\n                                      </FormHelperText>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                      <FormControlLabel\n                                        value=\"true\"\n                                        control={<Radio />}\n                                        label=\"Yes\"\n                                      />\n                                      <Typography variant=\"p\" weight=\"medium\">\n                                        (Sign the declaration below)\n                                      </Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                      <FormControlLabel\n                                        value=\"false\"\n                                        control={<Radio />}\n                                        label=\"No\"\n                                      />\n                                      <Typography variant=\"p\" weight=\"medium\">\n                                        (Go to Question 4)\n                                      </Typography>\n                                    </Grid>\n                                  </Grid>\n                                </RadioGroup>\n                                {data.taxDeclaration[0]\n                                  .employeeStatements_section3q3 === \"false\" ? (\n                                  <>\n                                    <RadioGroup\n                                      className={clsx(\n                                        classes.taxTextSpacingBottom\n                                      )}\n                                      name=\"employeeStatements_section3q4\"\n                                      value={\n                                        data.taxDeclaration[0]\n                                          .employeeStatements_section3q4\n                                      }\n                                      onChange={(e) => onChange(e, 4)}\n                                    >\n                                      <Grid\n                                        className={classes.taxAlign}\n                                        xs={12}\n                                        container\n                                        spacing={3}\n                                        alignItems={\"center\"}\n                                      >\n                                        <Grid item xs={12}>\n                                          <Typography weight=\"medium\">\n                                            <p>Question 4:</p>\n                                            <p>\n                                              Student Load Plans - Please select\n                                              Plan 1 or Plan 2\n                                            </p>\n                                            <em>\n                                              <div\n                                                style={{\n                                                  paddingLeft: 30,\n                                                  paddingTop: 10,\n                                                }}\n                                              >\n                                                <p>\n                                                  Note: You will have a Plan 1\n                                                  student loan if:\n                                                </p>\n                                                <ol>\n                                                  <li>\n                                                    You lived in Scotland or\n                                                    Northern Ireland when you\n                                                    started your course, or\n                                                  </li>\n                                                  <li>\n                                                    You lived in England or\n                                                    Wales and started your\n                                                    course before 1st September\n                                                    2012\n                                                  </li>\n                                                </ol>\n                                              </div>\n                                            </em>\n                                            <FormHelperText>\n                                              {data.taxDeclaration[0].signed &&\n                                              data.taxDeclaration[0]\n                                                .employeeStatements_section3q4 ===\n                                                \"\"\n                                                ? \"Required\"\n                                                : \"\"}\n                                            </FormHelperText>\n                                          </Typography>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                          <FormControlLabel\n                                            value=\"1\"\n                                            control={<Radio />}\n                                            label=\"Plan 1\"\n                                          />\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                          <FormControlLabel\n                                            value=\"2\"\n                                            control={<Radio />}\n                                            label=\"Plan 2\"\n                                          />\n                                        </Grid>\n                                      </Grid>\n                                    </RadioGroup>\n                                    <RadioGroup\n                                      className={clsx(\n                                        classes.taxTextSpacingBottom\n                                      )}\n                                      name=\"employeeStatements_section3q5\"\n                                      checked={\n                                        data.taxDeclaration[0]\n                                          .employeeStatements_section3q5\n                                      }\n                                      onChange={(e) => onChange(e, 4)}\n                                    >\n                                      <Grid\n                                        className={classes.taxAlign}\n                                        xs={12}\n                                        container\n                                        spacing={3}\n                                        alignItems={\"center\"}\n                                      >\n                                        <Grid item xs={12}>\n                                          <Typography weight=\"medium\">\n                                            <p>Question 5:</p>\n                                            <p>\n                                              Post Graduate Student Loan - Have\n                                              you left full-time education\n                                              before the last 6th April and have\n                                              a Post Graduate Student Loan which\n                                              is not fully repaid which is not\n                                              being repaid via Direct Debit to\n                                              the Student Loan Company?\n                                            </p>\n                                            <FormHelperText>\n                                              {data.taxDeclaration[0].signed &&\n                                              data.taxDeclaration[0]\n                                                .employeeStatements_section3q5 ===\n                                                \"\"\n                                                ? \"Required\"\n                                                : \"\"}\n                                            </FormHelperText>\n                                          </Typography>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                          <FormControlLabel\n                                            value=\"Yes\"\n                                            control={<Radio />}\n                                            label=\"Yes\"\n                                          />\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                          <FormControlLabel\n                                            value=\"No\"\n                                            control={<Radio />}\n                                            label=\"No\"\n                                          />\n                                        </Grid>\n                                      </Grid>\n                                    </RadioGroup>\n                                  </>\n                                ) : (\n                                  \"\"\n                                )}\n                              </>\n                            ) : (\n                              \"\"\n                            )}\n                          </>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormControl>\n                      {isAdmin ? (\n                        <>\n                          <Box\n                            display={\"flex\"}\n                            mt={2}\n                            mb={2}\n                            alignItems={\"center\"}\n                          >\n                            <Typography weight={\"medium\"}>\n                              {\n                                \"I confirm the data provided is correct & hereby sign this declaration\"\n                              }\n                            </Typography>\n                            <Switch\n                              checked={data.taxDeclaration[0].signed}\n                              onChange={(e) => handleSwitchChange(e, 4)}\n                              name=\"signed\"\n                              color={\"secondary\"}\n                            />\n                          </Box>\n                          <Box>\n                            <Button\n                              disabled={\n                                !data.taxDeclaration[0].signed ||\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section1 === \"\" ||\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section2 === \"\" ||\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section3q1 === \"\" ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q1 === \"true\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q2 === \"\") ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q2 === \"true\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q3 === \"\") ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q3 === \"false\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q4 === \"\") ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q4 !== \"\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q5 === \"\")\n                              }\n                              size=\"large\"\n                              fullWidth={true}\n                              className={classes.button}\n                              onClick={(e) => onSubmit(e)}\n                              color=\"secondary\"\n                              variant=\"contained\"\n                            >\n                              Save\n                            </Button>\n                          </Box>\n                        </>\n                      ) : (\n                        <>\n                          <Box\n                            display={\"flex\"}\n                            mt={2}\n                            mb={2}\n                            alignItems={\"center\"}\n                          >\n                            <Typography weight={\"medium\"}>\n                              {\n                                \"I confirm the data provided is correct & hereby sign this declaration\"\n                              }\n                            </Typography>\n                            <Switch\n                              disabled={\n                                data.taxDeclaration[0].signed || !preSigned ? true : false\n                              }\n                              checked={data.taxDeclaration[0].signed}\n                              onChange={(e) => handleSwitchChange(e, 4)}\n                              name=\"signed\"\n                              color={\"secondary\"}\n                            />\n                          </Box>\n                          <Box>\n                            <Button\n                              disabled={\n                                !data.taxDeclaration[0].signed ||\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section1 === \"\" ||\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section2 === \"\" ||\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section3q1 === \"\" ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q1 === \"true\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q2 === \"\") ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q2 === \"true\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q3 === \"\") ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q3 === \"false\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q4 === \"\") ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q4 !== \"\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q5 === \"\")\n                              }\n                              size=\"large\"\n                              fullWidth={true}\n                              className={classes.button}\n                              onClick={(e) => onSubmit(e)}\n                              color=\"secondary\"\n                              variant=\"contained\"\n                            >\n                              Save\n                            </Button>\n                          </Box>\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    // ) : tab === 3 ? (\n                    //   <>\n                    //     <Typography\n                    //       variant=\"h5\"\n                    //       weight=\"medium\"\n                    //       className={classes.text}\n                    //     >\n                    //       Change your password\n                    //     </Typography>\n                    //     <TextField\n                    //       className={classes.textFieldFull}\n                    //       id=\"password-current\"\n                    //       type=\"password\"\n                    //       name=\"currentPassword\"\n                    //       placeholder=\"Current Password\"\n                    //       value={password.currentPassword || \"\"}\n                    //       onChange={handleChangePassword}\n                    //       label=\"Current Password\"\n                    //       variant=\"outlined\"\n                    //       helperText={\"Forgot Password?\"}\n                    //     />\n                    //     <TextField\n                    //       className={classes.textFieldFull}\n                    //       id=\"password-new\"\n                    //       type=\"password\"\n                    //       name=\"newPassword\"\n                    //       placeholder=\"New Password\"\n                    //       value={password.newPassword || \"\"}\n                    //       onChange={handleChangePassword}\n                    //       label=\"New Password\"\n                    //       variant=\"outlined\"\n                    //     />\n                    //     <TextField\n                    //       className={classes.textFieldFull}\n                    //       id=\"password-new1\"\n                    //       type=\"password\"\n                    //       name=\"confirmPassword\"\n                    //       placeholder=\"Confirm New Password\"\n                    //       value={password.confirmPassword || \"\"}\n                    //       onChange={handleChangePassword}\n                    //       label=\"Confirm New Password\"\n                    //       variant=\"outlined\"\n                    //     />\n                    //   </>\n                    // ) : (\n                    \"\"\n                    // <>\n                    //   <Typography\n                    //     variant={\"h5\"}\n                    //     weight={\"medium\"}\n                    //     style={{ marginBottom: 35 }}\n                    //   >\n                    //     Settings\n                    //   </Typography>\n                    //   <FormControl\n                    //     variant=\"outlined\"\n                    //     style={{ marginBottom: 35 }}\n                    //   >\n                    //     <Select\n                    //       labelId=\"demo-simple-select-outlined-label\"\n                    //       id=\"demo-simple-select-outlined\"\n                    //       value={10}\n                    //     >\n                    //       <MenuItem value={10}>English</MenuItem>\n                    //       <MenuItem value={20}>Admin</MenuItem>\n                    //       <MenuItem value={30}>Super Admin</MenuItem>\n                    //     </Select>\n                    //   </FormControl>\n                    //   <Typography weight={\"bold\"}>Communication:</Typography>\n                    //   <Box display={\"flex\"}>\n                    //     <FormControlLabel\n                    //       control={\n                    //         <Checkbox\n                    //           checked\n                    //           name=\"checkedB\"\n                    //           color=\"secondary\"\n                    //         />\n                    //       }\n                    //       label=\"Email\"\n                    //     />\n                    //     <FormControlLabel\n                    //       control={\n                    //         <Checkbox name=\"checkedB\" color=\"secondary\" />\n                    //       }\n                    //       label=\"Messages\"\n                    //     />\n                    //     <FormControlLabel\n                    //       control={\n                    //         <Checkbox name=\"checkedB\" color=\"secondary\" />\n                    //       }\n                    //       label=\"Phone\"\n                    //     />\n                    //   </Box>\n                    //   <Box display={\"flex\"} mt={2} alignItems={\"center\"}>\n                    //     <Typography weight={\"medium\"}>\n                    //       Email notification\n                    //     </Typography>\n                    //     <Switch color={\"primary\"} />\n                    //   </Box>\n                    //   <Box\n                    //     display={\"flex\"}\n                    //     mt={2}\n                    //     mb={2}\n                    //     alignItems={\"center\"}\n                    //   >\n                    //     <Typography weight={\"medium\"}>\n                    //       Send copy to personal email\n                    //     </Typography>\n                    //     <Switch color={\"primary\"} />\n                    //   </Box>\n                    // </>\n                  )}\n                </form>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default User;\n","import React, { useContext, useEffect } from \"react\";\n//State\nimport AuthContext from \"../../context/auth/authContext\";\n//Components\nimport NavButtonUserProfile from \"../layouts/NavButtonUserProfile\";\nimport UserProfile from \"../user/User\";\n\nconst User = (props) => {\n  const authContext = useContext(AuthContext);\n  const { loadUser, user, isAdmin } = authContext;\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div>\n      <NavButtonUserProfile isAdmin={isAdmin} />\n      <UserProfile activeUser={user} isAdmin={isAdmin} />\n    </div>\n  );\n};\n\nexport default User;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Import from \"@material-ui/icons/Publish\";\nimport Reports from \"@material-ui/icons/Assessment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst actions = [\n  {\n    id: 1,\n    icon: (\n      <Link to=\"/\">\n        <ArrowBackIcon />\n      </Link>\n    ),\n    name: \"Back\",\n  },\n  {\n    id: 2,\n    icon: (\n      <Link to=\"/import\">\n        <Import />\n      </Link>\n    ),\n    name: \"Import File\",\n  },\n  {\n    id: 3,\n    icon: (\n      <Link to=\"/payments/new\">\n        <AttachMoneyIcon />\n      </Link>\n    ),\n    name: \"Manually Add Payment\",\n  },\n  // {\n  //   id: 4,\n  //   icon: (\n  //     <Link to=\"#\">\n  //       <Reports />\n  //     </Link>\n  //   ),\n  //   name: \"Report Manager\",\n  // },\n];\n\nconst NavButtonPayments = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"Payments Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={handleClose}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n\nexport default NavButtonPayments;\n","import React, { useContext, useEffect } from \"react\";\n//Navigation\nimport NavButtonPayments from \"../layouts/NavButtonPayments\"\n//Components\nimport UserPayments from \"../payments/UserPayments\"\n//State\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst UserPaymentsHome = (props) => {\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    authContext.loadUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <NavButtonPayments />\n      <UserPayments/>\n    </>\n  );\n};\n\nexport default UserPaymentsHome;\n","import React, { useContext, Fragment, useEffect } from \"react\";\nimport { useLocation, useHistory, useParams, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n//Context\nimport UserContext from \"../../context/user/userContext\";\nimport PaymentContext from \"../../context/payment/paymentContext\";\nimport { monthWords } from \"../../utils/dropdowns\";\n\n//Components\nimport { Grid, Paper, Chip, Button, Typography } from \"@material-ui/core\";\nimport {\n  ThumbUp,\n  ThumbDown,\n  PauseCircleOutline,\n  PlayCircleOutline,\n  Pageview,\n  Receipt,\n} from \"@material-ui/icons\";\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport { useSnackbar } from \"notistack\";\nimport clsx from \"clsx\";\n// import CustomToolbar from \"../layouts/CustomToolbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"right\",\n    color: theme.palette.text.secondary,\n  },\n  right: {\n    textAlign: \"right\",\n  },\n  left: {\n    textAlign: \"left\",\n  },\n}));\n\nconst date = new Date().toUTCString();\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nconst Payments = (props) => {\n  const classes = useStyles();\n  const userContext = useContext(UserContext);\n  const paymentContext = useContext(PaymentContext);\n  const { user, payments } = props;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { id } = useParams();\n  const {\n    loading,\n    clearErrors,\n    deletePayment,\n    approvePayment,\n    rejectPayment,\n    holdPayment,\n    pendingPayment,\n    paidPayment,\n  } = paymentContext;\n\n  const history = useHistory();\n\n  function MonthWords(i) {\n    const arr = monthWords.map((value) => value.value);\n    return arr[i - 1];\n  }\n\n  if (payments !== null && payments.length === 0 && !loading) {\n    return <h4>You have no payments recorded</h4>; // if user list is empty\n  }\n\n  const onClickApprovePayment = (id) => {\n    approvePayment(id);\n  };\n\n  const onClickRejectPayment = (id) => {\n    rejectPayment(id);\n  };\n\n  const onClickHoldPayment = (id) => {\n    holdPayment(id);\n  };\n\n  const onClickPendingPayment = (id) => {\n    pendingPayment(id);\n  };\n\n  const onClickPaidPayment = (id) => {\n    paidPayment(id);\n  };\n\n  const viewPayment = (dataIndex) => {\n    let path = `/payments/${dataIndex}`;\n    history.push(path);\n  };\n\n  const CustomChip = ({ label, onDelete }) => {\n    return (\n      <Chip\n        variant=\"outlined\"\n        color=\"primary\"\n        label={label}\n        onDelete={onDelete}\n      />\n    );\n  };\n\n  const CustomFilterList = (props) => {\n    return <TableFilterList {...props} ItemComponent={CustomChip} />;\n  };\n\n  const options = {\n    filter: true,\n    filterType: \"dropdown\",\n    sortOrder: {\n      name: \"paymentPeriodNum\",\n      direction: \"asc\",\n    },\n    downloadOptions: {\n      filterOptions: {\n        useDisplayedColumnsOnly: false,\n        useDisplayedRowsOnly: true,\n      },\n      filename: `payments-${date}.csv`,\n    },\n    rowsPerPageOptions: [5, 10, 20, 50, 100],\n    rowsPerPage: 10,\n    draggableColumns: {\n      enabled: true,\n    },\n    selectableRowsHideCheckboxes: false,\n    // customToolbar: () => {\n    //   return <CustomToolbar />;\n    // },\n    onRowsDelete: (rows) => {\n      if (rows.data.length <= 10) {\n        const paymentsToDelete = rows.data.map((d) => payments[d.dataIndex]);\n        paymentsToDelete.forEach((a) => {\n          if (a.user === user._id) {\n            enqueueSnackbar(`You cannot delete your own record`, {\n              variant: \"error\",\n            });\n            clearErrors();\n          } else {\n            enqueueSnackbar(`Payment for QUBID ${a.QUBID} deleted`, {\n              variant: \"success\",\n            });\n            deletePayment(a._id);\n          }\n        });\n      } else {\n        paymentContext.loading = true;\n        const paymentsToDelete = rows.data.map((d) => payments[d.dataIndex]);\n        paymentsToDelete.forEach((a) => {\n          if (a._id === user._id) {\n            enqueueSnackbar(`You cannot delete your own record`, {\n              variant: \"error\",\n            });\n            clearErrors();\n          } else {\n            deletePayment(a._id);\n          }\n        });\n        paymentContext.loading = false;\n      }\n    },\n  };\n\n  // DO NOT change columns[0] to be anything other than ID\n  const columns = [\n    {\n      name: \"_id\",\n      label: \"UserId\",\n      options: {\n        filter: false,\n        display: false,\n        download: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"paymentPeriodNum\",\n      label: \"Month\",\n      options: {\n        filter: false,\n        display: false,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"paymentPeriod\",\n      label: \"Month\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n        customBodyRender: (value) => {\n          return MonthWords(value);\n        },\n      },\n    },\n    {\n      name: \"QUBID\",\n      label: \"QUBID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"academicYear\",\n      label: \"Year\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"account\",\n      label: \"Account\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n\n    {\n      name: \"deliveredBy\",\n      label: \"Role\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"amount\",\n      label: \"Amount\",\n      options: {\n        filter: true,\n        display: true,\n        download: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return new Intl.NumberFormat(\"en-GB\", {\n            style: \"currency\",\n            currency: \"GBP\",\n          }).format(value);\n        },\n      },\n    },\n    {\n      name: \"amount\",\n      label: \"amount\",\n      options: {\n        filter: true,\n        display: false,\n        download: true,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return new Intl.NumberFormat(\"en-GB\", {\n            style: \"decimal\",\n            minimumFractionDigits: \"2\",\n          }).format(value);\n        },\n      },\n    },\n    {\n      name: \"paymentStatus\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        // filterList: [\"Pending\",\"On Hold\"],\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"updatedByUserDate\",\n      label: \"Updated\",\n      options: {\n        filter: true,\n        display: false,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        sort: false,\n        empty: true,\n        download: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <>\n              <Grid container direction=\"row\" justify=\"space-between\">\n                {tableMeta.rowData.find((element) => element === \"Rejected\") ===\n                  \"Rejected\" ||\n                tableMeta.rowData.find((element) => element === \"Paid\") ===\n                  \"Paid\" ? (\n                  \"\"\n                ) : tableMeta.rowData.find(\n                    (element) => element === \"Pending\"\n                  ) === \"Pending\" ? (\n                  <>\n                    <Typography color=\"primary\" align=\"center\">\n                      <ThumbUp\n                        fontSize=\"small\"\n                        onClick={() =>\n                          onClickApprovePayment(tableMeta.rowData[0])\n                        }\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Approve\n                      </Typography>\n                    </Typography>\n                    <Typography color=\"secondary\" align=\"center\">\n                      <ThumbDown\n                        fontSize=\"small\"\n                        onClick={() => {\n                          onClickRejectPayment(tableMeta.rowData[0]);\n                        }}\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Reject\n                      </Typography>\n                    </Typography>\n                    <Typography color=\"textSecondary\" align=\"center\">\n                      <PauseCircleOutline\n                        fontSize=\"small\"\n                        onClick={(e) => {\n                          onClickHoldPayment(tableMeta.rowData[0]);\n                        }}\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Hold\n                      </Typography>\n                    </Typography>\n                  </>\n                ) : tableMeta.rowData.find(\n                    (element) => element === \"On Hold\"\n                  ) === \"On Hold\" ? (\n                  <>\n                    <Typography color=\"primary\" align=\"center\">\n                      <ThumbUp\n                        fontSize=\"small\"\n                        onClick={() =>\n                          onClickApprovePayment(tableMeta.rowData[0])\n                        }\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Approve\n                      </Typography>\n                    </Typography>\n                    <Typography color=\"secondary\" align=\"center\">\n                      <ThumbDown\n                        fontSize=\"small\"\n                        onClick={() => {\n                          onClickRejectPayment(tableMeta.rowData[0]);\n                        }}\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Reject\n                      </Typography>\n                    </Typography>\n                    <Typography color=\"textSecondary\" align=\"center\">\n                      <PlayCircleOutline\n                        fontSize=\"small\"\n                        onClick={() => {\n                          onClickPendingPayment(tableMeta.rowData[0]);\n                        }}\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Pending\n                      </Typography>\n                    </Typography>\n                  </>\n                ) : (\n                  <Typography\n                    style={{\n                      color: \"green\",\n                    }}\n                    align=\"center\"\n                  >\n                    <Receipt\n                      fontSize=\"small\"\n                      onClick={() => onClickPaidPayment(tableMeta.rowData[0])}\n                    />\n                    <Typography\n                      align=\"center\"\n                      display=\"block\"\n                      variant=\"caption\"\n                    >\n                      Paid\n                    </Typography>\n                  </Typography>\n                )}\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n    {\n      name: \"\",\n      options: {\n        filter: false,\n        sort: false,\n        empty: true,\n        download: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <>\n              <Grid\n                container\n                direction=\"row\"\n                alignContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Typography align=\"center\">\n                  <Pageview\n                    fontSize=\"small\"\n                    onClick={() => viewPayment(tableMeta.rowData[0])}\n                    userID={tableMeta.rowData[0]}\n                  />\n                  <Typography align=\"center\" display=\"block\" variant=\"caption\">\n                    View\n                  </Typography>\n                </Typography>\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <div>\n        <div>\n          {payments !== null && !loading ? (\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <MUIDataTable\n                  title={\n                    <div>\n                      <Typography variant=\"h5\">User Payments</Typography>\n                      <Typography variant=\"caption\">\n                        To approve payments individually, please select a row\n                      </Typography>\n                    </div>\n                  }\n                  data={payments}\n                  columns={columns}\n                  options={options}\n                  components={{\n                    TableFilterList: CustomFilterList,\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <ProgressIndicator />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Payments;\n","import React, {Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//Components\nimport { Grid, Paper, Button } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"right\",\n    color: theme.palette.text.secondary,\n  },\n  right: {\n    textAlign: \"right\",\n  },\n  left: {\n    textAlign: \"left\",\n  },\n}));\n\nconst PaymentsNav = (props) => {\n  const classes = useStyles();\n  const { onClickReject, onClickApprove, onClickPaid } = props;\n\n  const onClickRejectAll = () => {\n    onClickReject();\n  };\n    \n  const onClickApproveAll = () => {\n    onClickApprove();\n  };\n\n  const onClickPaidAll = () => {\n    onClickPaid();\n  }\n\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={1}>\n              <Grid item xs={4} className={clsx(classes.root, classes.left)}>\n                <Button\n                  onClick={onClickRejectAll}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Reject All Pending\n                </Button>\n              </Grid>\n              <Grid item xs={8} className={clsx(classes.root, classes.right)}>\n                <Button\n                  variant=\"contained\"\n                  component={Link}\n                  to=\"/payments/new\"\n                  color=\"default\"\n                >\n                  Add Payment\n                </Button>\n                <Button\n                  onClick={onClickApproveAll}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Approve All Pending\n                </Button>\n                <Button\n                  onClick={onClickPaidAll}\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"green\",\n                    color: \"white\"\n                }}\n                >\n                  Mark All As Paid\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default PaymentsNav;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst ResponsiveDialog = (props) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const {\n    hideForm,\n    stage,\n    finalisePayment,\n    invoiceTotal,\n    RejectAllPayments,\n    ApproveAllPayments,\n    PaidAllPayments\n  } = props;\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={stage === \"SubmitPaymentForm\"}\n        onClose={hideForm}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Confirmation Required\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You are about to finalise a payment to the value of £{invoiceTotal}.\n          </DialogContentText>\n          <DialogContentText>Do you want to continue?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={hideForm} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              finalisePayment();\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        fullScreen={fullScreen}\n        open={\n          stage === \"RejectAllPayments\" ||\n          stage === \"ApproveAllPayments\" ||\n          stage === \"PaidAllPayments\"\n        }\n        onClose={hideForm}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Confirmation Required\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You are about to\n            {stage === \"RejectAllPayments\"\n              ? \" REJECT ALL pending Payments!\"\n              : stage === \"ApproveAllPayments\"\n              ? \" APPROVE ALL pending Payments!\"\n              : stage === \"PaidAllPayments\"\n              ? \" set ALL APPROVED payments to Paid\"\n              : \"\"}\n          </DialogContentText>\n          <DialogContentText>Do you want to continue?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={hideForm} color=\"primary\">\n            Cancel\n          </Button>\n          {stage === \"RejectAllPayments\" ? (\n            <Button\n              onClick={() => {\n                RejectAllPayments();\n              }}\n              color=\"primary\"\n              autoFocus\n            >\n              Reject All\n            </Button>\n          ) : stage === \"ApproveAllPayments\" ? (\n            <Button\n            onClick={() => {\n              ApproveAllPayments();\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Approve All\n          </Button>\n          ) : stage === \"PaidAllPayments\" ? (\n            <Button\n            onClick={() => {\n              PaidAllPayments();\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Set All to Paid\n          </Button>\n          ) : (\n            \"Something Went Wrong\"\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ResponsiveDialog;\n","import React, { useContext, useEffect, useState } from \"react\";\n//Navigation\nimport NavButtonPayments from \"../../components/layouts/NavButtonPayments\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n//Components\nimport Payments from \"../../components/payments/Payments\";\nimport PaymentsNav from \"../../components/payments/PaymentsNav\";\nimport Dialog from \"../layouts/ConfirmationDialog\";\n//State\nimport AuthContext from \"../../context/auth/authContext\";\nimport PaymentContext from \"../../context/payment/paymentContext\";\nimport { useSnackbar } from \"notistack\";\n\nconst Payment = (props) => {\n  const authContext = useContext(AuthContext);\n  const paymentContext = useContext(PaymentContext);\n  const { loadUser, isAdmin, user } = authContext;\n  const {\n    getPayments,\n    payments,\n    loading,\n    setLoading,\n    error,\n    clearErrors,\n    rejectAllPayments,\n    approveAllPayments,\n    paidAllPayments,\n  } = paymentContext;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    loadUser();\n    getPayments();\n    if (!authContext.loading && !isAdmin) {\n      props.history.push(\"/\");\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n  }, [isAdmin, props.history, error, loading]);\n\n  const [formShowing, setFormShowing] = useState(false);\n  const [stage, setStage] = useState(\"\");\n\n  const showForm = () => {\n    setFormShowing(true);\n  };\n  \n  const hideForm = () => {\n    setFormShowing(false);\n  };\n\n  const onClickReject = () => {\n    showForm();\n    setStage(\"RejectAllPayments\");\n  };\n\n  const onClickApprove = () => {\n    showForm();\n    setStage(\"ApproveAllPayments\");\n  };\n\n  const onClickPaid = () => {\n    showForm();\n    setStage(\"PaidAllPayments\");\n  };\n\n  const onClickRejectConfirm = () => {\n    hideForm();\n    setStage(\"\");\n    setLoading();\n    rejectAllPayments();\n    getPayments();\n  };\n\n  const onClickApproveConfirm = () => {\n    hideForm();\n    setStage(\"\");\n    setLoading();\n    approveAllPayments();\n    getPayments();\n  };\n\n  const onClickPaidConfirm = () => {\n    hideForm();\n    setStage(\"\");\n    setLoading();\n    paidAllPayments();\n    getPayments();\n  };\n\n  return (\n    <>\n      {loading ? (\n        <ProgressIndicator />\n      ) : (\n        <>\n            <NavButtonPayments />\n            \n\n          <PaymentsNav\n            onClickReject={onClickReject}\n            onClickApprove={onClickApprove}\n            onClickPaid={onClickPaid}\n            />\n            \n          <Payments user={user} isAdmin={isAdmin} payments={payments} />\n          {formShowing && (\n            <Dialog\n              RejectAllPayments={onClickRejectConfirm}\n              ApproveAllPayments={onClickApproveConfirm}\n              PaidAllPayments={onClickPaidConfirm}\n              hideForm={hideForm}\n              stage={stage}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Payment;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Import from \"@material-ui/icons/Publish\";\nimport Reports from \"@material-ui/icons/Assessment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst actions = [\n  {\n    id: 1,\n    icon: (\n      <Link to=\"/\">\n        <ArrowBackIcon />\n      </Link>\n    ),\n    name: \"Back\",\n  },\n  {\n    id: 2,\n    icon: (\n      <Link to=\"/import\">\n        <Import />\n      </Link>\n    ),\n    name: \"Import File\",\n  },\n  // {\n  //   id: 3,\n  //   icon: (\n  //     <Link to=\"/payments\">\n  //       <AttachMoneyIcon />\n  //     </Link>\n  //   ),\n  //   name: \"Manually Add Payment\",\n  // },\n  // {\n  //   id: 4,\n  //   icon: (\n  //     <Link to=\"#\">\n  //       <Reports />\n  //     </Link>\n  //   ),\n  //   name: \"Report Manager\",\n  // },\n];\n\nconst NavButtonPayments = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"Payments Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={handleClose}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n\nexport default NavButtonPayments;\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    width: \"auto\",\n    tableLayout: \"auto\",\n    fontSize: [10, \"!important\"]\n  },\n}));\n\nconst MarkingRange = () => {\n  const classes = useStyles();\n  return (\n    <Grid>\n      <TableContainer component={Paper}>\n        <Table\n          className={clsx(classes.table)}\n          aria-label=\"spanning table\"\n          size=\"small\"\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Marking Range</TableCell>\n              <TableCell align=\"center\">Definition</TableCell>\n              <TableCell align=\"center\">Examples</TableCell>\n              <TableCell align=\"center\">Duration</TableCell>\n              <TableCell align=\"center\">Min Competence Level</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody className={clsx(classes.table)}>\n            <TableRow key={1}>\n              <TableCell align=\"center\">A</TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Very well-defined marking criteria; working to prepared/model answer(s); limited academic discretion/judgement required; high level of specialist knowledge not required\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Mathematical, technical and computational assessments, such as lab books and other assignments which map onto the criteria listed under Definition A\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">\n                {\"6 pieces per hour (10 mins per piece1)\"}\n              </TableCell>\n              <TableCell align=\"center\">{\"AC1/PGR A\"}</TableCell>\n            </TableRow>\n            <TableRow key={2}>\n              <TableCell align=\"center\">B</TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Well-defined criteria; some guidance provided on model answer, but requires interpretation of responses based on academic judgement/discretion; a level of specialist knowledge required as well as the ability to assess application and analysis of key principles in the discipline\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Shorter written pieces requiring significant correction/annotation eg language marking (AEL); tutorial package i.e. presentation & reflective reports (HAPP);  mathematical coursework, technical and computational assessments, such as lab books and other assignments which map onto the criteria listed under Definition B\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">\n                {\"3 pieces per hour (20 mins per piece)\"}\n              </TableCell>\n              <TableCell align=\"center\">{\"AC1/PGR A\"}</TableCell>\n            </TableRow>\n            <TableRow key={3}>\n              <TableCell align=\"center\">C</TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Broad criteria to be applied, requiring substantial academic judgement to assess evidence of students' higher-level skills (e.g.interpretation/application/ analysis/synthesis/evaluation of materials and concepts); ability to undertake independent assessment and good level of specialist knowledge required\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Essay/Substantial written piece;  mathematical coursework, technical and computational assessments, such as lab books and other assignments which map onto the criteria listed under Definition C\"\n                }\n              </TableCell>\n              <TableCell size=\"medium\" align=\"left\">\n                {\n                  <ul>\n                    <li>2-3000 = 20 mins (3 pieces per hour)</li>\n                    <li>3-4000 = 30 mins (2 pieces per hour)</li>\n                    <li>4-5000 = 40 mins (1.5 per hour)</li>\n                    <li>\n                      Greater than 5000 words = 45 mins (2 per 1.5 hours or 4\n                      per 3 hours)\n                    </li>\n                    <li>\n                      Lab books and other assignments within mathematical,\n                      technical and computational assessments in range C = 30\n                      mins (2 pieces per hour)\n                    </li>\n                  </ul>\n                }\n              </TableCell>\n              <TableCell align=\"center\">{\"AC2/PGR B\"}</TableCell>\n            </TableRow>\n            <TableRow key={4}>\n              <TableCell align=\"center\">D</TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Well-defined criteria, but requires interpretation of responses based on a level of specialist knowledge and the ability to assess application and analysis of key principles\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">{\"Oral Exam\"}</TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Duration of the exam, including examiner discussion, plus 0.5 hours per hour of exam\"\n                }\n              </TableCell>\n              <TableCell align=\"center\">{\"AC2/PGR B\"}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Grid>\n  );\n};\n\nexport default MarkingRange;\n","import React, { useContext, Fragment, useEffect, useState } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  deliveryCategory,\n  semester,\n  academicYear,\n  schoolMenu,\n  monthWords,\n  yearsDD,\n} from \"../../utils/dropdowns\";\n\n//Context\nimport PaymentContext from \"../../context/payment/paymentContext\";\n\n//Components\nimport {\n  Grid,\n  Paper,\n  Button,\n  Typography,\n  TextField,\n  MenuItem,\n  InputAdornment,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Input,\n  Tooltip,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport { useSnackbar } from \"notistack\";\nimport clsx from \"clsx\";\nimport MarkingRange from \"../layouts/MarkingRange\";\nimport Dialog from \"../layouts/ConfirmationDialog\";\nimport UserPayments from \"./UserPayments\";\n// import CustomToolbar from \"../layouts/CustomToolbar\";\n\nconst CUR = \"£\";\nconst TAX_RATE = -0.2;\nconst ACCOUNT_NUM = 6202;\nconst AC1_RATE = 14.73;\nconst AC2_RATE = 17.57;\nconst BANDA_RATE = 15.01;\nconst BANDB_RATE = 20.01;\nconst MHC_A = 0.1667;\nconst MHC_B = 0.3333;\nconst MHC_C1 = 0.3333;\nconst MHC_C2 = 0.5;\nconst MHC_C3 = 0.6667;\nconst MHC_C4 = 0.75;\nconst MHC_C5 = 0.5;\nconst MHC_D = 1.5;\nconst OFFR = 0.5;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"right\",\n    color: theme.palette.text.secondary,\n  },\n  right: {\n    textAlign: \"right\",\n  },\n  left: {\n    textAlign: \"left\",\n  },\n  table: {\n    width: \"100%\",\n    tableLayout: \"auto\",\n  },\n  spacer: {\n    marginTop: theme.spacing(2),\n  },\n  textField: {\n    \"& > *\": {},\n  },\n  footer: {\n    minHeight: 100,\n  },\n  inputField: {\n    textAlign: \"center\",\n  },\n  inputCenter: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: theme.typography.pxToRem(14),\n  },\n  inputEdit: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: theme.typography.pxToRem(14),\n    backgroundColor: \"#edfced\",\n  },\n  finalButton: {\n    margin: theme.spacing(2),\n  },\n  BandB: {\n    backgroundColor: \"white\",\n    color: \"white !important\",\n  },\n\n}));\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 1200,\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nfunction subtotal(totals) {\n  return totals.map(({ payment }) => payment).reduce((sum, i) => sum + i, 0);\n}\n\nfunction totalPaidHours(totals) {\n  return totals.reduce((sum, i) => sum + i.totalPaidHours, 0);\n}\n\nfunction totalGrade1Hours(totals) {\n  return totals\n    .filter((totals) => totals.grade === \"AC1\" || totals.grade === \"Band A\")\n    .reduce((sum, i) => sum + i.totalPaidHours, 0);\n}\n\nfunction totalGrade2Hours(totals) {\n  return totals\n    .filter((totals) => totals.grade === \"AC2\" || totals.grade === \"Band B\")\n    .reduce((sum, i) => sum + i.totalPaidHours, 0);\n}\n\nfunction totalOfficeHours(totals) {\n  return totals.reduce((sum, i) => sum * i.count, 1);\n}\n\nfunction pad(num, size) {\n  return (\"0\" + num).substr(-size);\n}\n\nconst CreatePayment = (props) => {\n  const classes = useStyles();\n  const paymentContext = useContext(PaymentContext);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { payments, addPayment, loading, error } = paymentContext;\n  const history = useHistory();\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (props.activeUsers !== null) {\n      setUserSelect(props.activeUsers);\n    } else {\n      setUserSelect([\n        {\n          _id: 0,\n          firstName: \"\",\n          lastName: \"\",\n          QUBID: \"\",\n        },\n      ]);\n    }\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n  }, [props.activeUsers]);\n\n  //State\n  let month = new Date().getMonth() + 1;\n  const [payment, setPayment] = useState({\n    user: \"\",\n    deliveredBy: \"TA\",\n    school: \"Electronics, Electrical Engineering and Computer Science\",\n    academicYear: \"2020/2021\",\n    paymentPeriod: month,\n    paymentPeriodYear: new Date().getFullYear(),\n    paymentPeriodNum: parseInt(\n      new Date().getFullYear().toString() + pad(month.toString(), 2)\n    ),\n    semester: \"1\",\n    QUBID: \"10000000\",\n    account: ACCOUNT_NUM,\n    projectCode: \"A2517EEC\",\n    projectName: \"\",\n    subAnalysis: \"\",\n    amount: 0.0,\n    student_cohort: true,\n    cohort_id: \"26\",\n    paymentStatus: \"Pending\",\n    grade1: \"AC1\",\n    grade2: \"AC2\",\n    rate1: AC1_RATE,\n    rate2: AC2_RATE,\n  });\n  const [markingCalc, setMarkingCalc] = useState([\n    {\n      range: \"A\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"B\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"C-1\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"C-2\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"C-3\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"C-4\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"C-5\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"D\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n  ]);\n  const [officeHoursCalc, setOfficeHoursCalc] = useState([\n    {\n      description: \"No of Seminar Groups per week\",\n      count: 0,\n    },\n    {\n      description: \"No of weeks\",\n      count: 0,\n    },\n  ]);\n  const [paymentCalc, setPaymentCalc] = useState({\n    lecture: [\n      {\n        activity: \"Prep - 1st delivery\",\n        paymentGrade: \"\",\n        paymentRate: 0.0,\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Prep - Repeat in same week (one repeat only)\",\n        paymentGrade: \"\",\n        paymentRate: 0.0,\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Delivery\",\n        paymentGrade: \"\",\n        paymentRate: 0.0,\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    seminar: [\n      {\n        activity: \"Prep - 1st delivery (1hr)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Prep - 1st delivery (2hrs)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Prep - Repeat in same week (one repeat only)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Delivery\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    lab: [\n      {\n        activity: \"Prep - 1st delivery (0.5hrs)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Prep - 1st delivery (1hr)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Prep - Repeat in same week (one repeat only)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Delivery\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    fieldTrip: [\n      {\n        activity: \"Number of contact hours\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    office: [\n      {\n        activity: \"0.5 hours per seminar group per week\",\n        paymentGrade: \"\",\n        time: 0.0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    marking: [\n      {\n        activity: \"Exam / Non Exam / Coursework\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Exam / Non Exam / Coursework\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Oral Exam\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    training: [\n      {\n        activity: \"Number of hours\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n  });\n  const [hourlyRates, setHourlyRates] = useState({\n    rate1: AC1_RATE,\n    rate2: AC2_RATE,\n  });\n  const [isDisabled, setIsDisabled] = useState({\n    panel1: false,\n    panel2: true,\n    panel3: true,\n    resetButton: true,\n    addPaymentButton: true,\n  });\n  const [isExpanded, setExpanded] = useState({\n    panel1: true,\n    panel2: false,\n    panel3: false,\n  });\n  const [userSelect, setUserSelect] = useState([]);\n  const [finalised, setFinalised] = useState(false);\n  const [grade, setGrade] = useState({\n    grade1: \"AC1\",\n    grade2: \"AC2\",\n  });\n  const [formShowing, setFormShowing] = useState(false);\n  const [stage, setStage] = useState(\"\");\n  \n  //Events\n  const onChange = (e, i, g, r, rng) => {\n    let rate = \"\";\n    switch (i) {\n      case 1:\n        if (e.target.value === \"TA\") {\n          setHourlyRates({\n            rate1: ccyFormat(AC1_RATE),\n            rate2: ccyFormat(AC2_RATE),\n          });\n          setGrade({\n            grade1: \"AC1\",\n            grade2: \"AC2\",\n          });\n        } else {\n          setHourlyRates({\n            rate1: ccyFormat(BANDA_RATE),\n            rate2: ccyFormat(BANDB_RATE),\n          });\n          setGrade({\n            grade1: \"Band A\",\n            grade2: \"Band B\",\n          });\n        }\n        setPayment({\n          ...payment,\n          [e.target.name]: e.target.value,\n          grade1: grade.grade1,\n          rate1: hourlyRates.rate1,\n          grade2: grade.grade2,\n          rate2: hourlyRates.rate2,\n        });\n        break;\n      case 2:\n        payment.paymentPeriodNum = parseInt(\n          payment.paymentPeriodYear.toString() +\n            pad(payment.paymentPeriod.toString(), 2)\n        );\n        if (e.target.name === \"user\") {\n          let userQUBID = userSelect.filter(function (val) {\n            return val._id === e.target.value;\n          });\n          payment.QUBID = userQUBID[0].QUBID;\n        }\n        setPayment({\n          ...payment,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case 3:\n        r[e.target.name] = parseFloat(e.target.value);\n        r.paymentGrade = g;\n        if (r.paymentGrade === grade.grade1) {\n          rate = hourlyRates.rate1;\n        } else {\n          rate = hourlyRates.rate2;\n        }\n        r.totalhrs = parseFloat(r.count * r.time);\n        r.payment = parseFloat(r.totalhrs * rate);\n        setPaymentCalc({ ...paymentCalc });\n        break;\n      case 4:\n        r[e.target.name] = parseFloat(e.target.value);\n        r.paymentGrade = g;\n        if (r.paymentGrade === grade.grade1) {\n          rate = hourlyRates.rate1;\n        } else {\n          rate = hourlyRates.rate2;\n        }\n        r.payment = parseFloat(r.totalhrs * rate);\n        setPaymentCalc({ ...paymentCalc });\n        break;\n      case 5:\n        switch (rng) {\n          case \"A\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_A)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[0].time = parseFloat(\n              ccyFormat(totalGrade1Hours(markingCalc))\n            );\n            paymentCalc.marking[0].totalhrs = parseFloat(\n              ccyFormat(totalGrade1Hours(markingCalc))\n            );\n            paymentCalc.marking[0].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[0].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[0].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"B\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_B)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[0].time = parseFloat(\n              ccyFormat(totalGrade1Hours(markingCalc))\n            );\n            paymentCalc.marking[0].totalhrs = parseFloat(\n              ccyFormat(totalGrade1Hours(markingCalc))\n            );\n            paymentCalc.marking[0].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[0].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[0].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"C-1\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_C1)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[1].time = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].totalhrs = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[1].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[1].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"C-2\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_C2)\n            );\n            setMarkingCalc([...markingCalc]);\n            break;\n          case \"C-3\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_C3)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[1].time = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].totalhrs = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[1].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[1].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"C-4\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_C4)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[1].time = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].totalhrs = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[1].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[1].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"C-5\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_C5)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[1].time = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].totalhrs = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[1].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[1].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"D\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseFloat(\n              markingCalc[r].OralExamHours * MHC_D\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total)\n            );\n            setMarkingCalc([...markingCalc]);\n\n            paymentCalc.marking[2].totalhrs = parseFloat(\n              markingCalc[r].OralExamHours * MHC_D\n            );\n            paymentCalc.marking[2].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[2].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[2].totalhrs * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          default:\n            break;\n        }\n        break;\n      case 6:\n        officeHoursCalc[r][e.target.name] = parseInt(e.target.value);\n        setOfficeHoursCalc([...officeHoursCalc]);\n        paymentCalc.office[0].paymentGrade = g;\n        paymentCalc.office[0].time = totalOfficeHours(officeHoursCalc);\n        paymentCalc.office[0].totalhrs = parseInt(\n          totalOfficeHours(officeHoursCalc) * OFFR\n        );\n        paymentCalc.office[0].payment = parseFloat(\n          paymentCalc.office[0].totalhrs * hourlyRates.rate1\n        );\n        setPaymentCalc({ ...paymentCalc });\n        break;\n      default:\n        setPayment({\n          ...payment,\n          [e.target.name]: e.target.value,\n        });\n    }\n  };\n  const reset = () => {\n    setOfficeHoursCalc([\n      {\n        description: \"No of Seminar Groups per week\",\n        count: 0,\n      },\n      {\n        description: \"No of weeks\",\n        count: 0,\n      },\n    ]);\n    setFinalised(false);\n    payment.user = \"\";\n    setPayment({\n      user: \"\",\n      deliveredBy: \"\",\n      school: \"\",\n      academicYear: \"\",\n      paymentPeriod: \"\",\n      paymentPeriodNum: \"\",\n      paymentPeriodYear: \"\",\n      semester: \"\",\n      QUBID: \"\",\n      account: \"\",\n      projectCode: \"\",\n      projectName: \"\",\n      subAnalysis: \"\",\n      amount: 0.0,\n      student_cohort: true,\n      cohort_id: \"00\",\n      paymentStatus: \"Pending\",\n    });\n    setHourlyRates({\n      rate1: 14.73,\n      rate2: 17.57,\n    });\n    setIsDisabled({\n      panel1: false,\n      panel2: true,\n      panel3: true,\n      resetButton: true,\n      addPaymentButton: true,\n    });\n    setExpanded({ panel1: true, panel2: false, panel3: false });\n    setPaymentCalc({\n      lecture: [\n        {\n          activity: \"Prep - 1st delivery\",\n          paymentGrade: \"\",\n          paymentRate: 0.0,\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Prep - Repeat in same week (one repeat only)\",\n          paymentGrade: \"\",\n          paymentRate: 0.0,\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Delivery\",\n          paymentGrade: \"\",\n          paymentRate: 0.0,\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      seminar: [\n        {\n          activity: \"Prep - 1st delivery (1hr)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Prep - 1st delivery (2hrs)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Prep - Repeat in same week (one repeat only)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Delivery\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      lab: [\n        {\n          activity: \"Prep - 1st delivery (0.5hrs)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Prep - 1st delivery (1hr)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Prep - Repeat in same week (one repeat only)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Delivery\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      fieldTrip: [\n        {\n          activity: \"Number of contact hours\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      office: [\n        {\n          activity: \"0.5 hours per seminar group per week\",\n          paymentGrade: \"\",\n          time: 0.0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      marking: [\n        {\n          activity: \"Exam / Non Exam / Coursework\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Exam / Non Exam / Coursework\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Oral Exam\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      training: [\n        {\n          activity: \"Number of hours\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n    });\n    setMarkingCalc([\n      {\n        range: \"A\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"B\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"C-1\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"C-2\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"C-3\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"C-4\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"C-5\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"D\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n    ]);\n  };\n  const showForm = () => {\n    setFormShowing(true);\n  };\n  const hideForm = () => {\n    setFormShowing(false);\n  };\n  const SubmitPayment = (e) => {\n    e.preventDefault();\n    const submitArray = [\n      { ...payment },\n      { ...paymentCalc },\n      [...markingCalc],\n      [...officeHoursCalc],\n    ];\n    addPayment(submitArray);\n    history.push(\"/payments\");\n  };\n  const continuePayment = (e) => {\n    e.preventDefault();\n    setIsDisabled({\n      panel1: true,\n      panel2: false,\n      panel3: true,\n      resetButton: false,\n      addPaymentButton: true,\n    });\n    setExpanded({ panel1: false, panel2: true, panel3: false });\n  };\n  const continueMarkingOfficeHours = (e) => {\n    e.preventDefault();\n    setIsDisabled({\n      panel1: true,\n      panel2: true,\n      panel3: false,\n      resetButton: false,\n      addPaymentButton: true,\n    });\n    setExpanded({ panel1: false, panel2: false, panel3: true });\n    setStage(\"SubmitPaymentForm\");\n  };\n  const finalisePayment = (e) => {\n    setStage(\"\");\n    hideForm();\n    setIsDisabled({\n      panel1: true,\n      panel2: true,\n      panel3: true,\n      resetButton: false,\n      addPaymentButton: false,\n    });\n    setExpanded({ panel1: false, panel2: false, panel3: false });\n    setFinalised(true);\n    setPayment({\n      ...payment,\n      amount: ccyFormat(invoiceTotal),\n    });\n  };\n\n  //declarations\n  const invoiceSubtotal =\n    subtotal(paymentCalc.training) +\n    subtotal(paymentCalc.marking) +\n    subtotal(paymentCalc.office) +\n    subtotal(paymentCalc.fieldTrip) +\n    subtotal(paymentCalc.lab) +\n    subtotal(paymentCalc.seminar) +\n    subtotal(paymentCalc.lecture);\n  const totPaidHours = totalPaidHours(markingCalc);\n  const totOfficeHours = totalOfficeHours(officeHoursCalc);\n  // const invoiceTaxes = TAX_RATE * 0;\n  const invoiceTotal = invoiceSubtotal;\n  return (\n    <Fragment>\n      <div>\n        <div>\n          {payments !== null && !loading ? (\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  <Grid container spacing={1}>\n                    <Grid\n                      item\n                      xs={8}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <div>\n                        <Typography variant=\"h5\">Add New Payment</Typography>\n                        <Typography variant=\"caption\">\n                          Teaching Support Framework - Contract and Payment\n                          Calculator\n                        </Typography>\n                      </div>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={4}\n                      className={clsx(classes.root, classes.right)}\n                    >\n                      <Button\n                        variant=\"contained\"\n                        component={Link}\n                        to=\"/payments/\"\n                        color=\"secondary\"\n                      >\n                        Back to Payments\n                      </Button>\n                      <Button\n                        disabled={isDisabled.resetButton}\n                        variant=\"contained\"\n                        onClick={reset}\n                        color=\"secondary\"\n                      >\n                        Reset\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n              <Grid item xs={12}>\n                <Accordion\n                  defaultExpanded\n                  expanded={isExpanded.panel1}\n                  disabled={isDisabled.panel1}\n                >\n                  <AccordionSummary\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Grid container spacing={1}>\n                      <Grid\n                        item\n                        xs={6}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <Typography variant=\"h5\">Set Payment</Typography>\n                      </Grid>\n                    </Grid>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Grid item xs={12}>\n                      <form onSubmit={(e) => continuePayment(e)}>\n                        <Grid container spacing={1}>\n                          <Grid\n                            item\n                            xs={2}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={\n                                payment.deliveredBy.length === 0 ? true : false\n                              }\n                              helperText={\n                                payment.deliveredBy.length === 0\n                                  ? \"Please select a value\"\n                                  : \"\"\n                              }\n                              required\n                              className={classes.textField}\n                              fullWidth\n                              select\n                              variant=\"outlined\"\n                              name=\"deliveredBy\"\n                              label=\"Delivered By\"\n                              value={payment.deliveredBy}\n                              onChange={(e) => onChange(e, 1)}\n                            >\n                              {deliveryCategory.map((option) => (\n                                <MenuItem key={option.id} value={option.value}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={2}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={\n                                payment.semester.length === 0 ? true : false\n                              }\n                              helperText={\n                                payment.semester.length === 0\n                                  ? \"Please select a semester\"\n                                  : \"\"\n                              }\n                              required\n                              className={classes.textField}\n                              fullWidth\n                              select\n                              variant=\"outlined\"\n                              name=\"semester\"\n                              label=\"Semester\"\n                              value={payment.semester}\n                              onChange={(e) => onChange(e)}\n                            >\n                              {semester.map((option) => (\n                                <MenuItem key={option.id} value={option.value}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={2}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={\n                                payment.academicYear.length === 0 ? true : false\n                              }\n                              helperText={\n                                payment.academicYear.length === 0\n                                  ? \"Please select an academic year\"\n                                  : \"\"\n                              }\n                              required\n                              className={classes.textField}\n                              fullWidth\n                              select\n                              variant=\"outlined\"\n                              name=\"academicYear\"\n                              label=\"Academic Year\"\n                              value={payment.academicYear}\n                              onChange={(e) => onChange(e)}\n                            >\n                              {academicYear.map((option) => (\n                                <MenuItem key={option.id} value={option.value}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={3}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={\n                                payment.paymentPeriod.length === 0\n                                  ? true\n                                  : false\n                              }\n                              helperText={\n                                payment.paymentPeriod.length === 0\n                                  ? \"Please select a month\"\n                                  : \"\"\n                              }\n                              required\n                              fullWidth\n                              className={classes.textField}\n                              select\n                              variant=\"outlined\"\n                              name=\"paymentPeriod\"\n                              label=\"Payment Month\"\n                              value={payment.paymentPeriod}\n                              onChange={(e) => onChange(e, 2)}\n                            >\n                              {monthWords.map((option) => (\n                                <MenuItem key={option.id} value={option.id}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={3}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={\n                                payment.paymentPeriodYear.length === 0\n                                  ? true\n                                  : false\n                              }\n                              helperText={\n                                payment.paymentPeriodYear.length === 0\n                                  ? \"Please select a payment year\"\n                                  : \"\"\n                              }\n                              required\n                              fullWidth\n                              className={classes.textField}\n                              select\n                              variant=\"outlined\"\n                              name=\"paymentPeriodYear\"\n                              label=\"Payment Year\"\n                              value={payment.paymentPeriodYear}\n                              onChange={(e) => onChange(e, 2)}\n                            >\n                              {yearsDD.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.value}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={6}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={payment.user.length === 0 ? true : false}\n                              helperText={\n                                payment.user.length === 0\n                                  ? \"Please select a user\"\n                                  : \"\"\n                              }\n                              required\n                              fullWidth\n                              className={classes.textField}\n                              select\n                              variant=\"outlined\"\n                              name=\"user\"\n                              label=\"Name\"\n                              value={payment.user}\n                              onChange={(e) => onChange(e, 2)}\n                            >\n                              {userSelect.map((option) => (\n                                <MenuItem key={option._id} value={option._id}>\n                                  {`${option.firstName} ${option.lastName} (${option.QUBID})`}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={6}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={payment.school.length === 0 ? true : false}\n                              helperText={\n                                payment.school.length === 0\n                                  ? \"Please select a school\"\n                                  : \"\"\n                              }\n                              required\n                              fullWidth\n                              className={classes.textField}\n                              select\n                              variant=\"outlined\"\n                              name=\"school\"\n                              label=\"School\"\n                              value={payment.school}\n                              onChange={(e) => onChange(e)}\n                            >\n                              {schoolMenu.map((option) => (\n                                <MenuItem key={option.id} value={option.value}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                          <Grid\n                            item\n                            xs={6}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              fullWidth\n                              className={classes.textField}\n                              variant=\"outlined\"\n                              name=\"projectName\"\n                              label=\"Module\"\n                              value={payment.projectName}\n                              onChange={(e) => onChange(e)}\n                            ></TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={6}\n                            className={clsx(classes.root, classes.right)}\n                          >\n                            <Button\n                              type=\"submit\"\n                              variant=\"contained\"\n                              color=\"primary\"\n                            >\n                              Continue\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </form>\n                    </Grid>\n                  </AccordionDetails>\n                </Accordion>\n                <Accordion\n                  expanded={isExpanded.panel2}\n                  disabled={isDisabled.panel2}\n                >\n                  <AccordionSummary\n                    aria-controls=\"panel2a-content\"\n                    id=\"panel2a-header\"\n                  >\n                    <Grid container spacing={1}>\n                      <Grid\n                        item\n                        xs={6}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <Typography variant=\"h5\">\n                          {\"Marking & Office Hours\"}\n                        </Typography>\n                      </Grid>\n                      <Grid\n                        item\n                        xs={6}\n                        className={clsx(classes.root, classes.right)}\n                      >\n                        <HtmlTooltip\n                          placement=\"bottom-end\"\n                          title={\n                            <React.Fragment >\n                              <MarkingRange />\n                            </React.Fragment>\n                          }\n                        >\n                          <InfoIcon></InfoIcon>\n                        </HtmlTooltip>\n                      </Grid>\n                    </Grid>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <form onSubmit={(e) => continueMarkingOfficeHours(e)}>\n                      <Grid item xs={12}>\n                        <TableContainer component={Paper}>\n                          <Table\n                            className={classes.table}\n                            aria-label=\"spanning table\"\n                            size=\"small\"\n                          >\n                            <TableHead>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\" colSpan={4}>\n                                  Marking hours Calculation (Exam / Non Exam /\n                                  Coursework)\n                                </TableCell>\n\n                                <TableCell />\n                                <TableCell />\n                                <TableCell />\n                              </TableRow>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\">Range</TableCell>\n                                <TableCell align=\"center\">\n                                  Payment Grade\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  No of Students\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  No of Pieces of Coursework per Student\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  Oral Exam Contact Hours\n                                </TableCell>\n                                <TableCell align=\"center\">Total</TableCell>\n                                <TableCell align=\"center\">\n                                  Total Paid hours\n                                </TableCell>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {markingCalc.map((row, i) => (\n                                <TableRow key={i}>\n                                  <TableCell align=\"left\">\n                                    {row.range}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    {row.range === \"A\" || row.range === \"B\"\n                                      ? grade.grade1\n                                      : grade.grade2}\n                                  </TableCell>\n                                  {row.range === \"D\" ? (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        disabled\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        disableUnderline={true}\n                                        variant=\"filled\"\n                                        name=\"time\"\n                                      />\n                                    </TableCell>\n                                  ) : (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        classes={{\n                                          input: classes.inputEdit,\n                                        }}\n                                        variant=\"filled\"\n                                        name=\"numOfStudents\"\n                                        value={row.numOfStudents}\n                                        onChange={(e) => {\n                                          row.range === \"A\" || row.range === \"B\"\n                                            ? onChange(\n                                                e,\n                                                5,\n                                                grade.grade1,\n                                                i,\n                                                row.range\n                                              )\n                                            : onChange(\n                                                e,\n                                                5,\n                                                grade.grade2,\n                                                i,\n                                                row.range\n                                              );\n                                        }}\n                                      />\n                                    </TableCell>\n                                  )}\n                                  {row.range === \"D\" ? (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        disabled\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        disableUnderline={true}\n                                        variant=\"filled\"\n                                        name=\"time\"\n                                      />\n                                    </TableCell>\n                                  ) : (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        classes={{\n                                          input: classes.inputEdit,\n                                        }}\n                                        variant=\"filled\"\n                                        name=\"numOfCWPcsPerStudent\"\n                                        value={row.numOfCWPcsPerStudent}\n                                        onChange={(e) => {\n                                          row.range === \"A\" || row.range === \"B\"\n                                            ? onChange(\n                                                e,\n                                                5,\n                                                grade.grade1,\n                                                i,\n                                                row.range\n                                              )\n                                            : onChange(\n                                                e,\n                                                5,\n                                                grade.grade2,\n                                                i,\n                                                row.range\n                                              );\n                                        }}\n                                      />\n                                    </TableCell>\n                                  )}\n                                  {row.range !== \"D\" ? (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        disabled\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        disableUnderline={true}\n                                        variant=\"filled\"\n                                        name=\"time\"\n                                      />\n                                    </TableCell>\n                                  ) : (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        classes={{\n                                          input: classes.inputEdit,\n                                        }}\n                                        variant=\"filled\"\n                                        name=\"OralExamHours\"\n                                        value={row.OralExamHours}\n                                        onChange={(e) => {\n                                          row.range === \"A\" || row.range === \"B\"\n                                            ? onChange(\n                                                e,\n                                                5,\n                                                grade.grade1,\n                                                i,\n                                                row.range\n                                              )\n                                            : onChange(\n                                                e,\n                                                5,\n                                                grade.grade2,\n                                                i,\n                                                row.range\n                                              );\n                                        }}\n                                      />\n                                    </TableCell>\n                                  )}\n                                  {row.range !== \"D\" ? (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        disabled\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        disableUnderline={true}\n                                        classes={{\n                                          input: classes.inputCenter,\n                                        }}\n                                        variant=\"filled\"\n                                        name=\"total\"\n                                        value={\n                                          row.numOfCWPcsPerStudent *\n                                          row.numOfStudents\n                                        }\n                                        onChange={(e) => {\n                                          row.range === \"A\" || row.range === \"B\"\n                                            ? onChange(\n                                                e,\n                                                5,\n                                                grade.grade1,\n                                                i,\n                                                row.range\n                                              )\n                                            : onChange(\n                                                e,\n                                                5,\n                                                grade.grade2,\n                                                i,\n                                                row.range\n                                              );\n                                        }}\n                                      />\n                                    </TableCell>\n                                  ) : (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        disabled\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        disableUnderline={true}\n                                        classes={{\n                                          input: classes.inputCenter,\n                                        }}\n                                        variant=\"filled\"\n                                        name=\"total\"\n                                        value={row.OralExamHours}\n                                        onChange={(e) => {\n                                          row.range === \"A\" || row.range === \"B\"\n                                            ? onChange(\n                                                e,\n                                                5,\n                                                grade.grade1,\n                                                i,\n                                                row.range\n                                              )\n                                            : onChange(\n                                                e,\n                                                5,\n                                                grade.grade2,\n                                                i,\n                                                row.range\n                                              );\n                                        }}\n                                      />\n                                    </TableCell>\n                                  )}\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"totalhrs\"\n                                      value={row.totalPaidHours}\n                                      onChange={(e) => {\n                                        row.range === \"A\" || row.range === \"B\"\n                                          ? onChange(\n                                              e,\n                                              5,\n                                              grade.grade1,\n                                              i,\n                                              row.range\n                                            )\n                                          : onChange(\n                                              e,\n                                              5,\n                                              grade.grade2,\n                                              i,\n                                              row.range\n                                            );\n                                      }}\n                                    />\n                                  </TableCell>\n                                </TableRow>\n                              ))}\n                              <TableRow key={uuidv4()} selected={true}>\n                                <TableCell colSpan={6} align=\"right\">\n                                  Total Paid Hours\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {parseFloat(ccyFormat(totPaidHours))}\n                                </TableCell>\n                              </TableRow>\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                        \n                        <TableContainer\n                          className={classes.spacer}\n                          component={Paper}\n                        >\n                          <Table\n                            className={classes.table}\n                            aria-label=\"spanning table\"\n                            size=\"small\"\n                          >\n                            <TableHead>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\" >\n                                  Office hours Calculation\n                                </TableCell>\n                                <TableCell />\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {officeHoursCalc.map((row, i) => (\n                                <TableRow key={i}>\n                                  <TableCell align=\"left\">\n                                    {row.description}\n                                  </TableCell>\n                                  <TableCell align=\"right\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"count\"\n                                      value={row.count}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          6,\n                                          grade.grade1,\n                                          i,\n                                          row.range\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                </TableRow>\n                              ))}\n                              <TableRow key={uuidv4()} selected={true}>\n                                <TableCell align=\"left\">Total Hours</TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    disabled\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    disableUnderline={true}\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"count\"\n                                    value={parseFloat(\n                                      ccyFormat(totOfficeHours)\n                                    )}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                        <TableContainer\n                          className={clsx(classes.spacer)}\n                          component={Paper}\n                        >\n                          <Table\n                            className={clsx(classes.table)}\n                            aria-label=\"spanning table\"\n                            size=\"small\"\n                          >\n                            <TableHead>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\">\n                                  Lab Supervision/Demonstrating\n                                </TableCell>\n                                <TableCell />\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\">\n                                  {paymentCalc.lab[3].activity}\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    classes={{\n                                      input: classes.inputEdit,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"totalhrs\"\n                                    value={paymentCalc.lab[3].totalhrs}\n                                    onChange={(e) =>\n                                      onChange(\n                                        e,\n                                        4,\n                                        grade.grade1,\n                                        paymentCalc.lab[3]\n                                      )\n                                    }\n                                  />\n                                </TableCell>\n                              </TableRow>\n                              <TableRow key={uuidv4()} selected={true}>\n                                <TableCell align=\"left\">Total Hours</TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    disabled\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    disableUnderline={true}\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"count\"\n                                    value={paymentCalc.lab[3].totalhrs}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                        <Grid container spacing={1}>\n                          <Grid\n                            item\n                            xs={12}\n                            className={clsx(classes.root, classes.right)}\n                          >\n                            <div>\n                              <Typography variant=\"caption\">\n                                All values entered here will be calculated on\n                                the next view\n                                <p>\n                                  Please check you have entered the correct\n                                  details before proceeding\n                                </p>\n                              </Typography>\n                            </div>\n                            <Button\n                              disabled={\n                                isDisabled.panel2 ||\n                                (totOfficeHours === 0 &&\n                                  totPaidHours === 0 &&\n                                  paymentCalc.lab[3].totalhrs === 0)\n                              }\n                              variant=\"contained\"\n                              type=\"submit\"\n                              color=\"primary\"\n                            >\n                              Continue\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </form>\n                  </AccordionDetails>\n                </Accordion>\n                <Accordion\n                  expanded={isExpanded.panel3}\n                  disabled={isDisabled.panel3}\n                >\n                  <AccordionSummary\n                    aria-controls=\"panel3a-content\"\n                    id=\"panel3a-header\"\n                  >\n                    <Grid container spacing={1}>\n                      <Grid\n                        item\n                        xs={6}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <Typography variant=\"h5\">\n                          Enter Payment Details\n                        </Typography>\n                      </Grid>\n                      <Grid\n                        item\n                        xs={3}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <TextField\n                          fullWidth\n                          disabled\n                          size=\"small\"\n                          className={classes.textField}\n                          variant=\"outlined\"\n                          name=\"rate1\"\n                          label={`${grade.grade1} Rate`}\n                          value={hourlyRates.rate1}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                £\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </Grid>\n                      <Grid\n                        item\n                        xs={3}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <TextField\n                          fullWidth\n                          disabled\n                          size=\"small\"\n                          className={classes.textField}\n                          variant=\"outlined\"\n                          name=\"rate2\"\n                          label={`${grade.grade2} Rate`}\n                          value={hourlyRates.rate2}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                £\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </Grid>\n                    </Grid>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Grid item xs={12}>\n                      <TableContainer component={Paper}>\n                        <Table\n                          className={classes.table}\n                          aria-label=\"spanning table\"\n                          size=\"small\"\n                        >\n                          <TableHead>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\" colSpan={2}>\n                                Activity\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                Payment Grade\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                Delivery/ Completion time (hrs)\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                No of lectures/ Seminars/ Tutorials\n                              </TableCell>\n                              <TableCell align=\"center\">Total hours</TableCell>\n                              <TableCell align=\"center\">Payment £</TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {grade.grade2 !== \"Band B\" ? (\n                              <>\n                                <TableRow key={uuidv4()}>\n                                  <TableCell rowSpan={3}>Lecture</TableCell>\n                                  <TableCell align=\"left\">\n                                    {paymentCalc.lecture[0].activity}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    {grade.grade2}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                      value={paymentCalc.lecture[0].time}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[0]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"count\"\n                                      value={paymentCalc.lecture[0].count}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[0]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"totalhrs\"\n                                      value={\n                                        paymentCalc.lecture[0].count *\n                                        paymentCalc.lecture[0].time\n                                      }\n                                      onChangeCapture={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[0]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                    paymentCalc.lecture[0].payment\n                                  )}`}</TableCell>\n                                </TableRow>\n                                <TableRow key={uuidv4()}>\n                                  <TableCell align=\"left\">\n                                    {paymentCalc.lecture[1].activity}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    {grade.grade2}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                      value={paymentCalc.lecture[1].time}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[1]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"count\"\n                                      value={paymentCalc.lecture[1].count}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[1]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"totalhrs\"\n                                      value={\n                                        paymentCalc.lecture[1].count *\n                                        paymentCalc.lecture[1].time\n                                      }\n                                      onChangeCapture={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[1]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                    paymentCalc.lecture[1].payment\n                                  )}`}</TableCell>\n                                </TableRow>\n                                <TableRow key={uuidv4()}>\n                                  <TableCell align=\"left\">\n                                    {paymentCalc.lecture[2].activity}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    {grade.grade2}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                      value={null}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[2]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"count\"\n                                      value={null}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[2]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"totalhrs\"\n                                      value={paymentCalc.lecture[2].totalhrs}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          4,\n                                          grade.grade2,\n                                          paymentCalc.lecture[2]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                    paymentCalc.lecture[2].payment\n                                  )}`}</TableCell>\n                                </TableRow>\n                                <TableRow key={uuidv4()} selected={true}>\n                                  <TableCell colSpan={6} align=\"left\">\n                                    Total Lectures\n                                  </TableCell>\n                                  <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                    subtotal(paymentCalc.lecture)\n                                  )}`}</TableCell>\n                                </TableRow>\n                              </>\n                            ) : (\n                              \"\"\n                            )}\n                            <TableRow key={uuidv4()}>\n                              <TableCell rowSpan={4}>\n                                Seminar / Tutorial / Oral Classes\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {paymentCalc.seminar[0].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.seminar[0].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.seminar[0].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.seminar[0].count *\n                                    paymentCalc.seminar[0].time\n                                  }\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.seminar[0].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.seminar[1].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.seminar[1].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.seminar[1].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.seminar[1].count *\n                                    paymentCalc.seminar[1].time\n                                  }\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.seminar[1].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.seminar[2].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.seminar[2].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.seminar[2].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.seminar[2].count *\n                                    paymentCalc.seminar[2].time\n                                  }\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.seminar[2].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.seminar[3].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.seminar[3].totalhrs}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      4,\n                                      grade.grade2,\n                                      paymentCalc.seminar[3]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.seminar[3].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"left\">\n                                Total Seminar/Tutorial/Oral Classes\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                subtotal(paymentCalc.seminar)\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell rowSpan={4}>\n                                Lab Supervision / Demonstrating\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {paymentCalc.lab[0].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.lab[0].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.lab[0].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.lab[0].count *\n                                    paymentCalc.lab[0].time\n                                  }\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.lab[0].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.lab[1].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.lab[1].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.lab[1].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.lab[1].count *\n                                    paymentCalc.lab[1].time\n                                  }\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.lab[1].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.lab[2].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.lab[2].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.lab[2].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.lab[2].count *\n                                    paymentCalc.lab[2].time\n                                  }\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.lab[2].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.lab[3].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.lab[3].totalhrs}\n                                  disableUnderline={true}\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.lab[3].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"left\">\n                                Total Lab Supervision/Demonstrating\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                subtotal(paymentCalc.lab)\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell>Field Trip Assistance</TableCell>\n                              <TableCell align=\"left\">\n                                {paymentCalc.fieldTrip[0].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell />\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.fieldTrip[0].totalhrs}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      4,\n                                      grade.grade1,\n                                      paymentCalc.fieldTrip[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.fieldTrip[0].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"left\">\n                                Total Field Trip Assistance\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                subtotal(paymentCalc.fieldTrip)\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell>Office Hours</TableCell>\n                              <TableCell align=\"left\">\n                                {paymentCalc.office[0].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.office[0].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.office[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.office[0].totalhrs}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.office[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.office[0].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"left\">\n                                Total Office Hours\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                subtotal(paymentCalc.office)\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell rowSpan={3}>Marking</TableCell>\n                              <TableCell align=\"left\">\n                                {paymentCalc.marking[0].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.marking[0].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.marking[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.marking[0].time}\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.marking[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.marking[0].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.marking[1].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.marking[1].time}\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.marking[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.marking[1].time}\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.marking[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.marking[1].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.marking[2].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell />\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.marking[2].totalhrs}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      4,\n                                      grade.grade2,\n                                      paymentCalc.marking[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.marking[2].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"left\">\n                                Total Marking\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                subtotal(paymentCalc.marking)\n                              )}`}</TableCell>\n                            </TableRow>\n                            {grade.grade2 !== \"Band B\" ? (\n                              <>\n                                <TableRow key={uuidv4()}>\n                                  <TableCell>Training</TableCell>\n                                  <TableCell align=\"left\">\n                                    {paymentCalc.training[0].activity}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    {grade.grade1}\n                                  </TableCell>\n                                  <TableCell />\n                                  <TableCell />\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"totalhrs\"\n                                      value={paymentCalc.training[0].totalhrs}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          4,\n                                          grade.grade1,\n                                          paymentCalc.training[0]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                    paymentCalc.training[0].payment\n                                  )}`}</TableCell>\n                                </TableRow>\n                                <TableRow key={uuidv4()} selected={true}>\n                                  <TableCell colSpan={6} align=\"left\">\n                                    Total Training\n                                  </TableCell>\n                                  <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                    subtotal(paymentCalc.training)\n                                  )}`}</TableCell>\n                                </TableRow>\n                              </>\n                            ) : (\n                              \"\"\n                            )}\n                            <TableRow key={uuidv4()}>\n                              <TableCell rowSpan={3} />\n                              <TableCell />\n                              <TableCell />\n                              <TableCell colSpan={3}></TableCell>\n                              <TableCell align=\"center\">\n                                {/* {`£${ccyFormat(invoiceSubtotal)}`} */}\n                              </TableCell>\n                            </TableRow>\n                            {/* <TableRow key={uuidv4()}>\n                              <TableCell />\n                              <TableCell />\n                              <TableCell>Tax</TableCell>\n                              <TableCell align=\"center\">{`${(\n                                -TAX_RATE * 100\n                              ).toFixed(0)} %`}</TableCell>\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                {`£${ccyFormat(invoiceTaxes)}`}\n                              </TableCell>\n                            </TableRow> */}\n                            <TableRow key={uuidv4()}>\n                              <TableCell />\n                              <TableCell />\n                              <TableCell colSpan={3}>Total</TableCell>\n                              <TableCell align=\"center\">\n                                {`£${ccyFormat(invoiceTotal)}`}\n                              </TableCell>\n                            </TableRow>\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                      <Grid container spacing={4}>\n                        <Grid item xs={12} className={classes.finalButton}>\n                          <Button\n                            fullWidth\n                            disabled={isDisabled.panel3 || invoiceTotal === 0}\n                            variant=\"contained\"\n                            onClick={showForm}\n                            color=\"primary\"\n                          >\n                            Finalise Payment\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n              {finalised ? (\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Grid container spacing={1}>\n                      <Grid\n                        item\n                        xs={8}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <div>\n                          <Typography variant=\"h5\">\n                            Submit New Payment\n                          </Typography>\n                          <Typography variant=\"caption\">\n                            A new Payment request to the value of{\" \"}\n                            {`${CUR}${ccyFormat(invoiceTotal)}`} will be\n                            submitted\n                          </Typography>\n                        </div>\n                      </Grid>\n                      <Grid\n                        item\n                        xs={4}\n                        className={clsx(classes.root, classes.right)}\n                      >\n                        <Button\n                          disabled={isDisabled.addPaymentButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={SubmitPayment}\n                        >\n                          Submit Payment\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                </Grid>\n              ) : (\n                \"\"\n              )}\n              <Grid container spacing={10}>\n                <Grid\n                  item\n                  xs={12}\n                  className={clsx(classes.footer, classes.left)}\n                >\n                  {\" \"}\n                </Grid>\n              </Grid>\n            </Grid>\n          ) : (\n            <ProgressIndicator />\n          )}\n        </div>\n      </div>\n      {formShowing && (\n        <Dialog\n          finalisePayment={finalisePayment}\n          hideForm={hideForm}\n          stage={stage}\n          invoiceTotal={ccyFormat(invoiceTotal)}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default CreatePayment;\n","import React, { useContext, useEffect } from \"react\";\n//Navigation\nimport NavButtonPaymentsAdd from \"../layouts/NavButtonPaymentsAdd\"\n//Components\nimport CreatePayments from \"../payments/CreatePayments\"\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n\n\nconst PaymentsCreate = () => {\n  const authContext = useContext(AuthContext);\n  const userAdminContext = useContext(UserAdminContext);\n  const { activeUsers, getActiveUsers } = userAdminContext;\n  const { loadUser } = authContext\n\n  useEffect(() => {\n    loadUser();\n    getActiveUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <NavButtonPaymentsAdd />\n      <CreatePayments activeUsers={activeUsers}/>\n    </>\n  );\n};\n\nexport default PaymentsCreate;\n","import React, { useContext, Fragment, useEffect, useState } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n//Context\nimport PaymentContext from \"../../context/payment/paymentContext\";\n//Components\nimport {\n  Grid,\n  Paper,\n  Button,\n  Typography,\n  TextField,\n  InputAdornment,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Input,\n  Tooltip,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\n\nimport { useSnackbar } from \"notistack\";\nimport clsx from \"clsx\";\n\nconst CUR = \"£\";\nconst AC1_RATE = 14.73;\nconst AC2_RATE = 17.57;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"right\",\n    color: theme.palette.text.secondary,\n  },\n  right: {\n    textAlign: \"right\",\n  },\n  left: {\n    textAlign: \"left\",\n  },\n  table: {\n    minWidth: 700,\n  },\n  spacer: {\n    marginTop: theme.spacing(2),\n  },\n  textField: {\n    \"& > *\": {},\n  },\n  footer: {\n    minHeight: 100,\n  },\n  inputField: {\n    textAlign: \"center\",\n  },\n  inputCenter: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: theme.typography.pxToRem(14),\n  },\n  finalButton: {\n    margin: theme.spacing(2),\n  },\n}));\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nfunction subtotal(totals) {\n  return totals.map(({ payment }) => payment).reduce((sum, i) => sum + i, 0);\n}\n\nfunction totalPaidHours(totals) {\n  return totals.reduce((sum, i) => sum + i.totalPaidHours, 0);\n}\n\nfunction totalOfficeHours(totals) {\n  return totals.reduce((sum, i) => sum * i.count, 1);\n}\n\nconst ViewPayment = (props) => {\n  const { current, isAdmin } = props;\n  const classes = useStyles();\n  //State\n  const [payment, setPayment] = useState(current);\n  const [markingCalc, setMarkingCalc] = useState([...current.paymentDetail.markingCalc]);\n  const [officeHoursCalc, setOfficeHoursCalc] = useState([...current.paymentDetail.officeHours]);\n  const [paymentCalc, setPaymentCalc] = useState(current.paymentDetail.paymentCalc);\n  const [hourlyRates, setHourlyRates] = useState({\n    rate1: AC1_RATE,\n    rate2: AC2_RATE,\n  });\n  const [grade, setGrade] = useState({\n    grade1: \"AC1\",\n    grade2: \"AC2\",\n  });\n\n  //declarations\n  const invoiceSubtotal =\n    subtotal(paymentCalc.training) +\n    subtotal(paymentCalc.marking) +\n    subtotal(paymentCalc.office) +\n    subtotal(paymentCalc.fieldTrip) +\n    subtotal(paymentCalc.lab) +\n    subtotal(paymentCalc.seminar) +\n    subtotal(paymentCalc.lecture);\n  const totPaidHours = totalPaidHours(markingCalc);\n  const totOfficeHours = totalOfficeHours(officeHoursCalc);\n  //   const invoiceTaxes = TAX_RATE * invoiceSubtotal;\n  const invoiceTotal = invoiceSubtotal;\n  return (\n    <Fragment>\n      <div>\n        <div>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Grid container spacing={1}>\n                  <Grid\n                    item\n                    xs={8}\n                    className={clsx(classes.root, classes.left)}\n                  >\n                    <div>\n                      <Typography variant=\"h5\">View Payment</Typography>\n                      <Typography variant=\"caption\">\n                        Teaching Support Framework - Contract and Payment\n                        Calculator\n                      </Typography>\n                    </div>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={4}\n                    className={clsx(classes.root, classes.right)}\n                  >\n                    {isAdmin && <Button\n                      variant=\"contained\"\n                      component={Link}\n                      to=\"/payments/\"\n                      color=\"secondary\"\n                    >\n                      Back to Payments\n                    </Button>}\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Accordion expanded>\n                {/* <AccordionSummary\n                    aria-controls=\"panel2a-content\"\n                    id=\"panel2a-header\"\n                  >\n                    <Grid container spacing={1}>\n                      <Grid\n                        item\n                        xs={6}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <Typography variant=\"h5\">\n                          {\"Marking & Office Hours\"}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </AccordionSummary> */}\n                <AccordionSummary\n                  aria-controls=\"panel3a-content\"\n                  id=\"panel3a-header\"\n                >\n                  <Grid container spacing={1}>\n                    <Grid\n                      item\n                      xs={6}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <Typography variant=\"h5\">\n                        {\"Marking & Office Hours\"}\n                      </Typography>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={3}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <TextField\n                        fullWidth\n                        disabled\n                        size=\"small\"\n                        className={classes.textField}\n                        variant=\"outlined\"\n                        name=\"rate1\"\n                        label={`${grade.grade1} Rate`}\n                        value={hourlyRates.rate1}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">£</InputAdornment>\n                          ),\n                        }}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      xs={3}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <TextField\n                        fullWidth\n                        disabled\n                        size=\"small\"\n                        className={classes.textField}\n                        variant=\"outlined\"\n                        name=\"rate2\"\n                        label={`${grade.grade2} Rate`}\n                        value={hourlyRates.rate2}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">£</InputAdornment>\n                          ),\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <form>\n                    <Grid item xs={12}>\n                      <TableContainer component={Paper}>\n                        <Table\n                          className={classes.table}\n                          aria-label=\"spanning table\"\n                          size=\"small\"\n                        >\n                          <TableHead>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\" colSpan={4}>\n                                Marking hours Calculation (Exam / Non Exam /\n                                Coursework)\n                              </TableCell>\n\n                              <TableCell />\n                              <TableCell />\n                              <TableCell />\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">Range</TableCell>\n                              <TableCell align=\"center\">\n                                Payment Grade\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                No of Students\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                No of Pieces of Coursework per Student\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                Oral Exam Contact Hours\n                              </TableCell>\n                              <TableCell align=\"center\">Total</TableCell>\n                              <TableCell align=\"center\">\n                                Total Paid hours\n                              </TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {payment.paymentDetail.markingCalc.map((row, i) => (\n                              <TableRow key={i}>\n                                <TableCell align=\"left\">{row.range}</TableCell>\n                                <TableCell align=\"center\">\n                                  {row.range === \"A\" || row.range === \"B\"\n                                    ? grade.grade1\n                                    : grade.grade2}\n                                </TableCell>\n                                {row.range === \"D\" ? (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      disableUnderline={true}\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                    />\n                                  </TableCell>\n                                ) : (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      disableUnderline={true}\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"numOfStudents\"\n                                      value={row.numOfStudents}\n                                    />\n                                  </TableCell>\n                                )}\n                                {row.range === \"D\" ? (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                    />\n                                  </TableCell>\n                                ) : (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      disableUnderline={true}\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"numOfCWPcsPerStudent\"\n                                      value={row.numOfCWPcsPerStudent}\n                                    />\n                                  </TableCell>\n                                )}\n                                {row.range !== \"D\" ? (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                    />\n                                  </TableCell>\n                                ) : (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      disableUnderline={true}\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"OralExamHours\"\n                                      value={row.OralExamHours}\n                                    />\n                                  </TableCell>\n                                )}\n                                {row.range !== \"D\" ? (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"total\"\n                                      value={\n                                        row.numOfCWPcsPerStudent *\n                                        row.numOfStudents\n                                      }\n                                    />\n                                  </TableCell>\n                                ) : (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"total\"\n                                      value={row.OralExamHours}\n                                    />\n                                  </TableCell>\n                                )}\n                                <TableCell align=\"center\">\n                                  <Input\n                                    disabled\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    disableUnderline={true}\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"totalhrs\"\n                                    value={row.totalPaidHours}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"right\">\n                                Total Paid Hours\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {parseFloat(ccyFormat(totPaidHours))}\n                              </TableCell>\n                            </TableRow>\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                      <TableContainer\n                        className={clsx(classes.spacer)}\n                        component={Paper}\n                      >\n                        <Table\n                          className={clsx(classes.table)}\n                          aria-label=\"spanning table\"\n                          size=\"small\"\n                        >\n                          <TableHead>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                Office hours Calculation\n                              </TableCell>\n                              <TableCell />\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {officeHoursCalc.map((row, i) => (\n                              <TableRow key={i}>\n                                <TableCell align=\"left\">\n                                  {row.description}\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    disabled\n                                    disableUnderline={true}\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"count\"\n                                    value={row.count}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell align=\"left\">Total Hours</TableCell>\n                              <TableCell align=\"right\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={parseFloat(ccyFormat(totOfficeHours))}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                      <TableContainer\n                          className={clsx(classes.spacer)}\n                          component={Paper}\n                        >\n                          <Table\n                            className={clsx(classes.table)}\n                            aria-label=\"spanning table\"\n                            size=\"small\"\n                          >\n                            <TableHead>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\">\n                                  Lab Supervision/Demonstrating\n                                </TableCell>\n                                <TableCell />\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\">\n                                  {paymentCalc.lab[3].activity}\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    disabled\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    disableUnderline={true}\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"totalhrs\"\n                                    value={paymentCalc.lab[3].totalhrs}\n                          \n                                  />\n                                </TableCell>\n                              </TableRow>\n                              <TableRow key={uuidv4()} selected={true}>\n                                <TableCell align=\"left\">Total Hours</TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    disabled\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    disableUnderline={true}\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"count\"\n                                    value={paymentCalc.lab[3].totalhrs}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                    </Grid>\n                  </form>\n                </AccordionDetails>\n              </Accordion>\n              <Accordion expanded>\n                <AccordionSummary\n                  aria-controls=\"panel3a-content\"\n                  id=\"panel3a-header\"\n                >\n                  <Grid container spacing={1}>\n                    <Grid\n                      item\n                      xs={6}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <Typography variant=\"h5\">\n                        Other Payment Details\n                      </Typography>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={3}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <TextField\n                        fullWidth\n                        disabled\n                        size=\"small\"\n                        className={classes.textField}\n                        variant=\"outlined\"\n                        name=\"rate1\"\n                        label={`${grade.grade1} Rate`}\n                        value={hourlyRates.rate1}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">£</InputAdornment>\n                          ),\n                        }}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      xs={3}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <TextField\n                        fullWidth\n                        disabled\n                        size=\"small\"\n                        className={classes.textField}\n                        variant=\"outlined\"\n                        name=\"rate2\"\n                        label={`${grade.grade2} Rate`}\n                        value={hourlyRates.rate2}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">£</InputAdornment>\n                          ),\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Grid item xs={12}>\n                    <TableContainer component={Paper}>\n                      <Table\n                        className={classes.table}\n                        aria-label=\"spanning table\"\n                        size=\"small\"\n                      >\n                        <TableHead>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\" colSpan={2}>\n                              Activity\n                            </TableCell>\n                            <TableCell align=\"center\">Payment Grade</TableCell>\n                            <TableCell align=\"center\">\n                              Delivery/ Completion time (hrs)\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              No of lectures/ Seminars/ Tutorials\n                            </TableCell>\n                            <TableCell align=\"center\">Total hours</TableCell>\n                            <TableCell align=\"center\">Payment £</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow key={uuidv4()}>\n                            <TableCell rowSpan={3}>Lecture</TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lecture[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.lecture[0].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.lecture[0].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.lecture[0].count *\n                                  paymentCalc.lecture[0].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lecture[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lecture[1].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.lecture[1].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.lecture[1].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.lecture[1].count *\n                                  paymentCalc.lecture[1].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lecture[1].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lecture[2].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={null}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={null}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.lecture[2].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lecture[2].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Lectures\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.lecture)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell rowSpan={4}>\n                              Seminar / Tutorial / Oral Classes\n                            </TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.seminar[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.seminar[0].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.seminar[0].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.seminar[0].count *\n                                  paymentCalc.seminar[0].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.seminar[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.seminar[1].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.seminar[1].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.seminar[1].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.seminar[1].count *\n                                  paymentCalc.seminar[1].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.seminar[1].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.seminar[2].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.seminar[2].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.seminar[2].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.seminar[2].count *\n                                  paymentCalc.seminar[2].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.seminar[2].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.seminar[3].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.seminar[3].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.seminar[3].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Seminar/Tutorial/Oral Classes\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.seminar)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell rowSpan={4}>\n                              Lab Supervision / Demonstrating\n                            </TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lab[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.lab[0].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.lab[0].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.lab[0].count *\n                                  paymentCalc.lab[0].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lab[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lab[1].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.lab[1].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.lab[1].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.lab[1].count *\n                                  paymentCalc.lab[1].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lab[1].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lab[2].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.lab[2].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.lab[2].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.lab[2].count *\n                                  paymentCalc.lab[2].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lab[2].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lab[3].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.lab[3].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lab[3].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Lab Supervision/Demonstrating\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.lab)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell>Field Trip Assistance</TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.fieldTrip[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell />\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.fieldTrip[0].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.fieldTrip[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Field Trip Assistance\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.fieldTrip)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell>Office Hours</TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.office[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.office[0].time}\n                              />\n                            </TableCell>\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.office[0].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.office[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Office Hours\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.office)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell rowSpan={3}>Marking</TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.marking[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.marking[0].time}\n                              />\n                            </TableCell>\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.marking[0].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.marking[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.marking[1].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.marking[1].time}\n                              />\n                            </TableCell>\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.marking[1].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.marking[1].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.marking[2].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell />\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.marking[2].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.marking[2].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Marking\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.marking)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell>Training</TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.training[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell />\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.training[0].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.training[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Training\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.training)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell rowSpan={3} />\n                            <TableCell />\n                            <TableCell />\n                            <TableCell colSpan={3}></TableCell>\n                            <TableCell align=\"center\">\n                              {/* {`£${ccyFormat(invoiceSubtotal)}`} */}\n                            </TableCell>\n                          </TableRow>\n                          {/* <TableRow key={uuidv4()}>\n                              <TableCell />\n                              <TableCell />\n                              <TableCell>Tax</TableCell>\n                              <TableCell align=\"center\">{`${(\n                                -TAX_RATE * 100\n                              ).toFixed(0)} %`}</TableCell>\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                {`£${ccyFormat(invoiceTaxes)}`}\n                              </TableCell>\n                            </TableRow> */}\n                          <TableRow key={uuidv4()}>\n                            <TableCell />\n                            <TableCell />\n                            <TableCell colSpan={3}>Total</TableCell>\n                            <TableCell align=\"center\">\n                              {`£${ccyFormat(invoiceTotal)}`}\n                            </TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </Grid>\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n            <Grid container spacing={30}>\n              <Grid item xs={12} className={clsx(classes.footer, classes.left)}>\n                {\" \"}\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ViewPayment;\n","import React, { useContext, useEffect } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\n//Navigation\nimport NavButtonPaymentsAdd from \"../layouts/NavButtonPaymentsAdd\";\n//Components\nimport ViewPayments from \"../payments/ViewPayments\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport PaymentContext from \"../../context/payment/paymentContext\";\n\nconst PaymentsView = () => {\n  const authContext = useContext(AuthContext);\n  const userAdminContext = useContext(UserAdminContext);\n  const paymentContext = useContext(PaymentContext);\n  const {\n    getPayment,\n    loading,\n    current,\n    clearCurrent\n  } = paymentContext;\n  const { getActiveUsers } = userAdminContext;\n  const { loadUser, isAdmin } = authContext;\n  const { id } = useParams();\n\n  useEffect(() => {\n    clearCurrent()\n    getPayment(id);\n  }, [id]);\n\n  useEffect(() => {\n    loadUser();\n    getActiveUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <NavButtonPaymentsAdd />\n      {!loading && current ? <ViewPayments current={current} isAdmin={isAdmin} /> : <ProgressIndicator />}\n    </>\n  );\n};\n\nexport default PaymentsView;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst NavButtonAbout = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const actions = [\n    {\n      id: 1,\n      icon: (\n        <Link to=\"/\">\n          <ArrowBackIcon />\n        </Link>\n      ),\n      name: \"Back\",\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"About Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={handleClose}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n\nexport default NavButtonAbout;\n","import React from \"react\";\n//Navigation\nimport NavButtonAbout from \"../../components/layouts/NavButtonAbout\";\n\nconst About = () => {\n  return (\n    <div>\n          <NavButtonAbout/>\n      <h1>About this app</h1>\n      <p>\n        This is a full stack react app created by Glenn Marshall-Adams\n      </p>\n      <p>This app has been designed as part of an MSc Project and is intended to manage the tracking of payments for Queens University Belfast</p>\n      <p>\n        <strong>Version: </strong> 1.0.0\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport CallMerge from \"@material-ui/icons/CallMerge\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\n// UI\nimport UserAdminAddModal from \"../userAdmin/UserAdminAddModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst NavButtonUserMgmtImport = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const userAdminContext = useContext(UserAdminContext);\n  const { setDialogOpen, setDialogClosed, toggleDialog } = userAdminContext;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const openDialog = () => {\n    setDialogOpen();\n  };\n\n  const closeDialog = () => {\n    setDialogClosed();\n  };\n\n  function handleClick(e, id) {\n    e.preventDefault();\n    if (id === 2) {\n      openDialog();\n    }\n  }\n  const actions = [\n    {\n      id: 1,\n      icon: (\n        <Link to=\"/UserAdmin\">\n          <ArrowBackIcon />\n        </Link>\n      ),\n      name: \"Back\",\n    },\n    // {\n    //   id: 2,\n    //   icon: (\n    //     <Link to=\"#\">\n    //       <PersonAddIcon />\n    //     </Link>\n    //   ),\n    //   name: \"Manually Add User\",\n    // },\n    {\n      id: 3,\n      icon: (\n        <Link to=\"/importNSP\">\n          <CallMerge />\n        </Link>\n      ),\n      name: \"Import NSP Data\",\n    },\n  ];\n\n\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"User Import Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={(e) => {\n              handleClick(e, action.id);\n            }}\n          />\n        ))}\n      </SpeedDial>\n      <>\n        <UserAdminAddModal open={toggleDialog} onClose={closeDialog} />\n      </>\n    </div>\n  );\n};\n\nexport default NavButtonUserMgmtImport;\n","import React, { useState, useRef, useContext, useEffect } from \"react\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n//UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Upload from \"@material-ui/icons/Backup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport { useSnackbar } from \"notistack\";\nimport * as XLSX from \"xlsx\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"54ch\",\n  },\n}));\n\nconst Import = () => {\n  const classes = useStyles();\n  const userAdminContext = useContext(UserAdminContext);\n  const { addUser, error, clearErrors } = userAdminContext;\n  const [filestate, setFilestate] = useState({\n    file: \"\",\n  });\n  const [jsonFile, setJsonFileState] = useState([]);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const fileUploader = useRef(null);\n\n  const handleClick = (e) => {\n    fileUploader.current.focus();\n  };\n\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  const onChange = (e) => {\n    try {\n      e.stopPropagation();\n      e.preventDefault();\n      var file = e.target.files[0];\n      readFile(file);\n      setFilestate({ file });\n      enqueueSnackbar(`File ${file.name} is ready to be imported`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      console.error(error.message);\n      enqueueSnackbar(`File ${file.name} cannot be imported`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  const readFile = (file) => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n      fileReader.onload = (e) => {\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n    promise.then((d) => {\n      setJsonFileState(d);\n    });\n  };\n\n  const makePassword = (length) => {\n    var result = \"\";\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n  \n  const onSubmit = (e) => {\n    e.preventDefault();\n    try {\n      jsonFile.map((d) => {\n        let makeRandomPassword = {\n          address: [\n            {\n              street: \"\",\n              city: \"\",\n              county: \"\",\n              country: \"\",\n              postcode: \"\",\n            },\n          ],\n          contact: [\n            {\n              mobile: \"\",\n              landline: \"\",\n            },\n          ],\n          bank: [\n            {\n              bankName: \"\",\n              branchName: \"\",\n              sortCode: \"\",\n              accNumber: \"\",\n              buildingSocietyNumber: \"\",\n            },\n          ],\n          status: \"Pending\",\n          password: makePassword(10),\n          taxDeclaration: [\n            {\n              employeeStatements_section1: \"\",\n              employeeStatements_section2: \"\",\n              employeeStatements_section3q1: \"\",\n              employeeStatements_section3q2: \"\",\n              employeeStatements_section3q3: \"\",\n              employeeStatements_section3q4: \"\",\n              employeeStatements_section3q5: \"\",\n              signed: false,\n              signedDate: \"\",\n            },\n          ],\n        };\n        let userWithAddedRandomPassword = Object.assign(d, makeRandomPassword);\n        addUser(userWithAddedRandomPassword);\n      });\n      setJsonFileState([]);\n    } catch (err) {\n      console.error(err.message);\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  const options = {\n    filter: true,\n    filterType: \"dropdown\",\n    sortOrder: {\n      name: \"QUBID\",\n      direction: \"asc\",\n    },\n    downloadOptions: {\n      filterOptions: {\n        useDisplayedColumnsOnly: false,\n        useDisplayedRowsOnly: true,\n      },\n      filename: \"userAdminDownload.csv\",\n    },\n    rowsPerPageOptions: [5, 10, 20, 50, 100],\n    rowsPerPage: 10,\n    draggableColumns: {\n      enabled: true,\n    },\n    onRowsDelete: (rows) => {\n      const usersToDelete = rows.data.map((d) => jsonFile[d.dataIndex]);\n      const newState = jsonFile.filter((item) => !usersToDelete.includes(item));\n      setJsonFileState(newState);\n    },\n  };\n\n  const columns = [\n    {\n      name: \"QUBID\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"firstName\",\n      label: \"First Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"lastName\",\n      label: \"Last Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"role\",\n      label: \"Role\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"status\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n        customBodyRenderLite: (value) => (value = \"Pending\"),\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item xs={12} spacing={1}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} className={clsx(classes.root, classes.left)}>\n                <div>\n                  <Typography variant=\"h5\">\n                    Multi User Account Import\n                  </Typography>\n                  <Typography variant=\"caption\">\n                    Please only use the excel template provided, do not attempt\n                    to amend this in anyway\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12} className={clsx(classes.root, classes.left)}>\n                <div>\n                  <input\n                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    className={classes.input}\n                    id=\"contained-button-file\"\n                    type=\"file\"\n                    ref={fileUploader}\n                    onChange={onChange}\n                  />\n                  <label htmlFor=\"contained-button-file\">\n                    <Button\n                      component=\"span\"\n                      size=\"large\"\n                      className={classes.button}\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      startIcon={<Upload />}\n                      onClick={handleClick}\n                    >\n                      Select File to Upload\n                    </Button>\n                  </label>\n                  <TextField\n                    className={classes.textField}\n                    component=\"span\"\n                    disabled\n                    id=\"filename\"\n                    type=\"text\"\n                    name=\"filename\"\n                    value={filestate.file.name}\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n\n        {jsonFile !== null ? (\n          <>\n            <Grid item xs={12} spacing={1}>\n              <MUIDataTable\n                data={jsonFile}\n                columns={columns}\n                options={options}\n              />\n              <Button\n                component=\"span\"\n                size=\"large\"\n                className={classes.button}\n                color=\"secondary\"\n                variant=\"contained\"\n                startIcon={<PublishIcon />}\n                onClick={onSubmit}\n              >\n                Publish File\n              </Button>\n            </Grid>\n          </>\n        ) : (\n          <ProgressIndicator />\n        )}\n      </Grid>\n    </>\n  );\n};\n\nexport default Import;\n","import React, { useContext, useEffect } from \"react\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport NavButtonUserMgmtImport from \"../layouts/NavButtonUserMgmtImport\"\nimport { useSnackbar } from \"notistack\";\nimport Import from \"../import/Import\"\n\n\nconst ImportUsers = (props) => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const authContext = useContext(AuthContext);\n  const { loadUser, isAdmin } = authContext;\n  const userAdminContext = useContext(UserAdminContext);\n  const {\n    importedUsersAdded,\n    error, \n    clearErrors\n  } = userAdminContext;\n\n  useEffect(() => {\n    loadUser();\n    if (!isAdmin) {\n      props.history.push(\"/\");\n    }\n    if (importedUsersAdded) {\n      props.history.push(\"/userAdmin\");\n      clearErrors();\n    } else if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importedUsersAdded, isAdmin, props.history]);\nconsole.log(isAdmin)\n  return (\n    <div>\n      <NavButtonUserMgmtImport />\n      <div className=\"grid-1\">\n        <Import isAdmin={isAdmin}/>\n      </div>\n    </div>\n  );\n};\n\nexport default ImportUsers;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\n\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\n// UI\nimport UserAdminAddModal from \"../userAdmin/UserAdminAddModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst NavButtonUserMgmtImport = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const userAdminContext = useContext(UserAdminContext);\n  const { setDialogOpen, setDialogClosed, toggleDialog } = userAdminContext;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const openDialog = () => {\n    setDialogOpen();\n  };\n\n  const closeDialog = () => {\n    setDialogClosed();\n  };\n\n  function handleClick(e, id) {\n    e.preventDefault();\n    if (id === 2) {\n      openDialog();\n    }\n  }\n\n  const actions = [\n    {\n      id: 1,\n      icon: (\n        <Link to=\"/UserAdmin\">\n          <ArrowBackIcon />\n        </Link>\n      ),\n      name: \"Back\",\n    },\n    // {\n    //   id: 2,\n    //   icon: (\n    //     <Link to=\"#\">\n    //       <PersonAddIcon />\n    //     </Link>\n    //   ),\n    //   name: \"Manually Add User\",\n    // },\n    {\n      id: 3,\n      icon: (\n        <Link to=\"/import\">\n          <GroupAddIcon />\n        </Link>\n      ),\n      name: \"Import Multi Users\",\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"User Import Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={(e) => {\n              handleClick(e, action.id);\n            }}\n          />\n        ))}\n      </SpeedDial>\n      <>\n        <UserAdminAddModal open={toggleDialog} onClose={closeDialog} />\n      </>\n    </div>\n  );\n};\n\nexport default NavButtonUserMgmtImport;\n","import React, { useState, useRef, useContext, useEffect } from \"react\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n//UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Card, CardHeader, Typography, Paper } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Upload from \"@material-ui/icons/Backup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport CheckCircleOutline from \"@material-ui/icons/CheckCircleOutline\"\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport { useSnackbar } from \"notistack\";\nimport * as XLSX from \"xlsx\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  input: {\n    display: \"none\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"54ch\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst mergeById = (a1, a2) =>\n  a1.map((itm) => ({\n    ...a2.find((item) => item.QUBID === itm.QUBID && item),\n    ...itm,\n  }));\n\nconst ImportNSP = (props) => {\n  const classes = useStyles();\n  const userAdminContext = useContext(UserAdminContext);\n  const {\n    getUsersNSP,\n    updateUserNSP,\n    usersNSP,\n    error,\n    clearErrors,\n    clearNSPUser,\n    loading,\n  } = userAdminContext;\n\n  const [filestate, setFilestate] = useState({\n    file: \"\",\n  });\n  const [jsonFile, setJsonFileState] = useState([]);\n  const [NSPUserState, setNSPUserState] = useState(usersNSP);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const fileUploader = useRef(null);\n  const [enable, setEnable] = useState(true)\n\n  const handleClick = (e) => {\n    fileUploader.current.focus();\n  };\n\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  useEffect(() => {\n    if (filestate.ile !== \"\") {\n      userAdminContext.loading = true;\n      try {\n        jsonFile.map((d) => {\n          NSPUserState[d.__rowNum__ - 1] = usersNSP[d.__rowNum__ - 1];\n          setNSPUserState([...NSPUserState]);\n        });\n        setJsonFileState(mergeById(NSPUserState, jsonFile));\n        userAdminContext.loading = false;\n      } catch (err) {\n        console.error(err.message);\n        enqueueSnackbar(error, {\n          variant: \"error\",\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onChange = (e) => {\n    try {\n      e.stopPropagation();\n      e.preventDefault();\n      var file = e.target.files[0];\n      readFile(file);\n      setFilestate({ file });\n      enqueueSnackbar(`File ${file.name} is ready to be imported`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      console.error(error.message);\n      enqueueSnackbar(`File ${file.name} cannot be imported`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  const readFile = (file) => {\n    userAdminContext.loading = true;\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n      fileReader.onload = (e) => {\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n    promise.then((d) => {\n      setJsonFileState(d);\n      d.map((a) => {\n        getUsersNSP(a.QUBID);\n      });\n    });\n    userAdminContext.loading = false;\n  };\n\n  const onLookup = (e) => {\n    userAdminContext.loading = true;\n    e.preventDefault();\n    try {\n      jsonFile.map((d) => {\n        NSPUserState[d.__rowNum__ - 1] = usersNSP[d.__rowNum__ - 1];\n        setNSPUserState([...NSPUserState]);\n      });\n      setJsonFileState(mergeById(NSPUserState, jsonFile));\n      userAdminContext.loading = false;\n      setEnable(false)\n    } catch (err) {\n      console.error(err.message);\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  const reset = () => {\n    setJsonFileState([]);\n    setNSPUserState([]);\n    setFilestate({\n      file: \"\",\n    });\n    clearNSPUser();\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    try {\n      jsonFile.map((d) => {\n        updateUserNSP(d);\n      });\n      setJsonFileState([]);\n    } catch (err) {\n      console.error(err.message);\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n  };\n  const options = {\n    filter: true,\n    filterType: \"dropdown\",\n    sortOrder: {\n      name: \"QUBID\",\n      direction: \"asc\",\n    },\n    downloadOptions: {\n      filterOptions: {\n        useDisplayedColumnsOnly: false,\n        useDisplayedRowsOnly: true,\n      },\n      filename: \"userAdminDownload.csv\",\n    },\n    rowsPerPageOptions: [5, 10, 20, 50, 100],\n    rowsPerPage: 10,\n    draggableColumns: {\n      enabled: true,\n    },\n    onRowsDelete: (rows) => {\n      const usersToDelete = rows.data.map((d) => jsonFile[d.dataIndex]);\n      const newState = jsonFile.filter((item) => !usersToDelete.includes(item));\n      setJsonFileState(newState);\n    },\n  };\n\n  const columns = [\n    {\n      name: \"QUBID\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"NSPID\",\n      label: \"NSPID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"firstName\",\n      label: \"First Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"lastName\",\n      label: \"Last Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"status\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n        customBodyRenderLite: (value) => (value = \"Pending Import\"),\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item xs={12} spacing={1}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} className={clsx(classes.root, classes.left)}>\n                <div>\n                  <Typography variant=\"h5\">NSP Data Import</Typography>\n                  <Typography variant=\"caption\">\n                    Please only use this tool, for locating and updating user\n                    accounts with their NSP ID\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12} className={clsx(classes.root, classes.left)}>\n                <div>\n                  <input\n                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    className={clsx(classes.input, classes.button)}\n                    id=\"contained-button-file\"\n                    type=\"file\"\n                    ref={fileUploader}\n                    onChange={onChange}\n                  />\n                  <label htmlFor=\"contained-button-file\">\n                    <Button\n                      component=\"span\"\n                      size=\"large\"\n                      className={classes.button}\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      startIcon={<Upload />}\n                      onClick={handleClick}\n                    >\n                      Select File to Upload\n                    </Button>\n                  </label>\n                  <TextField\n                    className={classes.textField}\n                    component=\"span\"\n                    disabled\n                    id=\"filename\"\n                    type=\"text\"\n                    name=\"filename\"\n                    value={filestate.file.name}\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        {jsonFile.length > 0 && !loading ? (\n          <>\n            <Grid item xs={12} spacing={1}>\n              <MUIDataTable\n                data={jsonFile}\n                columns={columns}\n                options={options}\n              />\n              <Grid container spacing={1}>\n                <Grid\n                  item\n                  xs={12}\n                  className={clsx(classes.button, classes.right)}\n                >\n                  <Button\n                    component=\"span\"\n                    size=\"large\"\n                    className={classes.button}\n                    style={{\n                      backgroundColor: \"green\",\n                      color: \"white\",\n                    }}\n                    variant=\"contained\"\n                    startIcon={<CheckCircleOutline />}\n                    onClick={onLookup}\n                  >\n                    Check Users\n                  </Button>\n                  <Button\n                    disabled={enable}\n                    component=\"span\"\n                    size=\"large\"\n                    className={classes.button}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    startIcon={<PublishIcon />}\n                    onClick={onSubmit}\n                  >\n                    Import NSP ID's\n                  </Button>\n                  <Button\n                    component=\"span\"\n                    size=\"large\"\n                    className={classes.button}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    startIcon={<PublishIcon />}\n                    onClick={reset}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </>\n        ) : (\n          <hr></hr>\n        )}\n      </Grid>\n      <Grid container spacing={10}>\n        <Grid\n          item\n          xs={12}\n          className={clsx(classes.footer, classes.left)}\n        ></Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ImportNSP;\n","import React, { useContext, useEffect } from \"react\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport NavButtonUserMgmtImportNSP from \"../layouts/NavButtonUserMgmtImportNSP\"\nimport { useSnackbar } from \"notistack\";\nimport ImportNSP from \"../import/ImportNSP\"\n\n\nconst ImportNSPData = (props) => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const authContext = useContext(AuthContext);\n  const { loadUser, isAdmin } = authContext;\n  const userAdminContext = useContext(UserAdminContext);\n  const {\n    importedUsersAdded,\n    error, \n    clearErrors\n  } = userAdminContext;\n\n  useEffect(() => {\n    loadUser();\n    if (!isAdmin) {\n      props.history.push(\"/\");\n    }\n    if (importedUsersAdded) {\n      props.history.push(\"/userAdmin\");\n      clearErrors();\n    } else if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importedUsersAdded, isAdmin, props.history]);\n\n  return (\n    <div>\n      <NavButtonUserMgmtImportNSP />\n      <div className=\"grid-1\">\n        <ImportNSP isAdmin={isAdmin}/>\n      </div>\n    </div>\n  );\n};\n\nexport default ImportNSPData;\n","import React, { useState, useContext, useEffect } from \"react\";\n//Components\nimport { useSnackbar } from \"notistack\";\n//Context\nimport AuthContext from \"../../context/auth/authContext\";\n//UI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textFieldFull: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst Register = (props) => {\n  const classes = useStyles();\n  const authContext = useContext(AuthContext);\n  const { register, error, clearErrors, isAuthenticated } = authContext;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n    if (error) {\n      enqueueSnackbar(\n        error,\n        {\n          variant: \"error\",\n        }\n      );\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    QUBID: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const { QUBID, email, password, password2 } = user;\n\n  const onChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (QUBID === \"\" || email === \"\" || password === \"\") {\n      enqueueSnackbar(`Please complete all fields`, {\n        variant: \"warning\",\n      });\n    } else if (password !== password2) {\n      enqueueSnackbar(`Passwords do not match`, {\n        variant: \"error\",\n      });\n    } else {\n      register({\n        QUBID,\n        email,\n        password,\n      });\n    }\n  };\n  return (\n    <div className=\"form-container\">\n      <h1>\n        Account <span className=\"text-primary\">Register</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div>\n        <div>\n            <TextField\n              className={classes.textFieldFull}\n              required\n              id=\"QUBID\"\n              type=\"text\"\n              name=\"QUBID\"\n              value={QUBID}\n              onChange={onChange}\n              placeholder=\"QUB ID Number\"\n              label=\"QUB ID\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div>\n            <TextField\n              className={classes.textFieldFull}\n              required\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={onChange}\n              label=\"Email\"\n              variant=\"outlined\"\n              autoComplete=\"username\"\n            />\n          </div>\n        </div>\n        <div>\n          <TextField\n            className={classes.textFieldFull}\n            required\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={onChange}\n            label=\"Password\"\n            variant=\"outlined\"\n            autoComplete=\"current-password\"\n            minLength=\"6\"\n          />\n        </div>\n        <div>\n          <TextField\n            className={classes.textFieldFull}\n            required\n            id=\"password2\"\n            type=\"password\"\n            name=\"password2\"\n            placeholder=\"password\"\n            value={password2}\n            onChange={onChange}\n            label=\"Confirm Password\"\n            variant=\"outlined\"\n            minLength=\"6\"\n          />\n        </div>\n        <Button\n          size=\"large\"\n          fullWidth={true}\n          className={classes.button}\n          onClick={onSubmit}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n//Components\nimport { useSnackbar } from \"notistack\";\n//Context\nimport AuthContext from \"../../context/auth/authContext\";\n//UI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textFieldFull: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const authContext = useContext(AuthContext);\n  const { login, error, clearErrors, isAuthenticated } = authContext;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const preventDefault = (event) => event.preventDefault();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = user;\n\n  const onChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    } else {\n      login({\n        email,\n        password,\n      });\n    }\n  };\n  return (\n    <div className=\"form-container\">\n      <h1>\n        Account <span className=\"text-primary\">Login</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div>\n          <TextField\n            className={classes.textFieldFull}\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={onChange}\n            label=\"Email\"\n            variant=\"outlined\"\n          />\n        </div>\n        <div>\n          <TextField\n            className={classes.textFieldFull}\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={onChange}\n            label=\"Password\"\n            variant=\"outlined\"\n          />\n        </div>\n        <Button\n          size=\"large\"\n          fullWidth={true}\n          className={classes.button}\n          onClick={onSubmit}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Login\n        </Button>\n      </form>\n      <Typography component={Link} to=\"/password-reset/\">\n        Password Reset\n      </Typography>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport AuthContext from \"../../context/auth/authContext\";\n//Components\nimport { useSnackbar } from \"notistack\";\n\nconst Verify = (props) => {\n  const {token} = useParams()\n  const authContext = useContext(AuthContext);\n  const { verifyEmail, logout } = authContext;\n\n  useEffect(() => {\n    verifyEmail(token)\n    logout()\n    props.history.push(\"/login\")\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.history]);\n  return (<>\n  <p>Thank you for verifying your email address</p>\n  </>);\n};\n\nexport default Verify;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\n//Components\nimport { useSnackbar } from \"notistack\";\nimport { Typography, TextField, Box, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    fontSize: \"1.2rem\",\n  },\n  textFieldFull: {\n    margin: theme.spacing(1),\n    width: \"97%\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    margin: theme.spacing(1),\n    width: \"97%\",\n  },\n  text: {\n    textAlign: \"center\",\n    marginBottom: 30,\n  },\n}));\n\nconst PasswordReset = (props) => {\n  const classes = useStyles();\n  const { token } = useParams();\n  const authContext = useContext(AuthContext);\n  const { passwordUpdateRequest, logout, error, clearErrors } = authContext;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    logout();\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n    clearErrors();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [password, setPassword] = useState({\n    newPassword: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleUpdatePassword = (e) => {\n    e.preventDefault();\n    if (password.confirmPassword === \"\" || password.newPassword === \"\") {\n      enqueueSnackbar(`Please complete all fields`, {\n        variant: \"warning\",\n      });\n    } else if (password.confirmPassword !== password.newPassword) {\n      enqueueSnackbar(`Passwords do not match`, {\n        variant: \"error\",\n      });\n    } else {\n      password.password = password.newPassword;\n      setPassword({\n        ...password,\n      });\n      passwordUpdateRequest(token, password);\n      logout();\n      props.history.push(\"/\");\n    }\n  };\n  const handleChangePassword = (e) => {\n    setPassword({\n      ...password,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <>\n      <div className=\"form-container\">\n        <h1>\n          Password <span className=\"text-primary\">Reset</span>\n        </h1>\n        <TextField\n          className={classes.textFieldFull}\n          id=\"password-new\"\n          type=\"password\"\n          name=\"newPassword\"\n          placeholder=\"New Password\"\n          value={password.newPassword || \"\"}\n          onChange={handleChangePassword}\n          label=\"New Password\"\n          variant=\"outlined\"\n        />\n        <TextField\n          className={classes.textFieldFull}\n          id=\"password-new1\"\n          type=\"password\"\n          name=\"confirmPassword\"\n          placeholder=\"Confirm New Password\"\n          value={password.confirmPassword || \"\"}\n          onChange={handleChangePassword}\n          label=\"Confirm New Password\"\n          variant=\"outlined\"\n        />\n        <Box>\n          <Button\n            size=\"large\"\n            fullWidth={true}\n            className={classes.button}\n            onClick={handleUpdatePassword}\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </div>\n    </>\n  );\n};\n\nexport default PasswordReset;\n","import React, { useState, useContext, useEffect } from \"react\";\n//Components\nimport { useSnackbar } from \"notistack\";\n//Context\nimport AuthContext from \"../../context/auth/authContext\";\n//UI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textFieldFull: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst PasswordResetRequest = (props) => {\n  const classes = useStyles();\n  const authContext = useContext(AuthContext);\n  const {\n    register,\n    error,\n    clearErrors,\n    isAuthenticated,\n    passwordResetRequestPublic,\n    logout\n  } = authContext;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    QUBID: \"\",\n    email: \"\",\n  });\n  const { QUBID, email } = user;\n\n  const onChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (QUBID === \"\" || email === \"\") {\n      enqueueSnackbar(`Please complete all fields`, {\n        variant: \"warning\",\n      });\n    } else {\n      passwordResetRequestPublic(user);\n      logout();\n      props.history.push(\"/\");\n      enqueueSnackbar(`Please check ${email} for reset instructions`, {\n        variant: \"success\",\n      });\n    }\n  };\n  return (\n    <div className=\"form-container\">\n      <h1>\n        Password Reset <span className=\"text-primary\">Request</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div>\n          <div>\n            <TextField\n              className={classes.textFieldFull}\n              required\n              id=\"QUBID\"\n              type=\"text\"\n              name=\"QUBID\"\n              value={QUBID}\n              onChange={onChange}\n              placeholder=\"QUB ID Number\"\n              label=\"QUB ID\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div>\n            <TextField\n              className={classes.textFieldFull}\n              required\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={onChange}\n              label=\"Email\"\n              variant=\"outlined\"\n              autoComplete=\"username\"\n            />\n          </div>\n        </div>\n        <Button\n          size=\"large\"\n          fullWidth={true}\n          className={classes.button}\n          onClick={onSubmit}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Request Reset\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordResetRequest;\n","import React, { Fragment, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport UserContext from \"../../context/user/userContext\";\n\n\nfunction NavigationBar({ title, icon }) {\n  const authContext = useContext(AuthContext);\n  const userAdminContext = useContext(UserAdminContext);\n  const userContext = useContext(UserContext);\n  const { isAuthenticated, logout } = authContext;\n  const { clearUserAccount } = userContext;\n  const { clearUserAdmin } = userAdminContext;\n\n  const onLogout = () => {\n    clearUserAdmin();\n    clearUserAccount()\n    logout();\n  };\n\n  const authLinks = (\n    <Fragment>\n      <li>\n        <a onClick={onLogout} href=\"#!\">\n          <i className=\"fas fa-sign-out-alt\"></i>{\" \"}\n          <span className=\"hide-sm\">Logout</span>\n        </a>\n      </li>\n    </Fragment>\n  );\n\n  const unAuthLinks = (\n    <Fragment>\n      <li>\n        <Link to=\"/users/register\">Register</Link>\n      </li>\n      <li>\n        <Link to=\"/login\">Login</Link>\n      </li>\n    </Fragment>\n  );\n\n  return (\n    <div className=\"navbar bg-primary\">\n      <h1>\n        <Link to=\"/\">\n        <i className={icon} />\n        {title}\n        </Link>\n      </h1>\n      <ul>\n        {isAuthenticated ? authLinks : unAuthLinks}\n      </ul>\n    </div>\n  );\n}\nNavigationBar.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n};\nNavigationBar.defaultProps = {\n  title: \" DemPay\",\n  icon: \"fas fa-handshake\",\n};\nexport default NavigationBar;","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, loading } = authContext;\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isAuthenticated && !loading ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","//Payments Framework Reducer\nexport const GET_PAYMENTS = \"GET_PAYMENTS\";\nexport const GET_PAYMENT = \"GET_PAYMENT\";\nexport const GET_USER_PAYMENTS = \"GET_USER_PAYMENTS\";\nexport const ADD_PAYMENT = \"ADD_PAYMENT\";\nexport const ADD_USER_PAYMENT = \"ADD_USER_PAYMENT\";\nexport const DELETE_PAYMENT = \"DELETE_PAYMENT\";\nexport const UPDATE_PAYMENT = \"UPDATE_PAYMENT\";\nexport const FILTER_PAYMENTS = \"FILTER_PAYMENTS\";\nexport const CLEAR_PAYMENTS = \"CLEAR_PAYMENTS\";\nexport const PAYMENT_ERROR = \"PAYMENT_ERROR\";\nexport const APPROVE_ALL_PAYMENTS = \"APPROVE_ALL_PAYMENTS\";\nexport const REJECT_ALL_PAYMENTS = \"REJECT_ALL_PAYMENTS\";\nexport const PAID_ALL_PAYMENTS = \"PAID_ALL_PAYMENTS\";\nexport const APPROVE_PAYMENT = \"APPROVE_PAYMENT\";\nexport const REJECT_PAYMENT = \"REJECT_PAYMENT\";\nexport const HOLD_PAYMENT = \"HOLD_PAYMENT\";\nexport const PENDING_PAYMENT = \"PENDING_PAYMENT\";\nexport const PAID_PAYMENT = \"PAID_PAYMENT\";\n//userAdmin Framework Reducer\nexport const GET_USERS = \"GET_USERS\";\nexport const GET_USERS_NSP = \"GET_USERS_NSP\";\nexport const GET_ACTIVE_USERS = \"GET_ACTIVE_USERS\";\nexport const ADD_USER = \"ADD_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const FILTER_USERS = \"FILTER_USERS\";\nexport const CLEAR_USERS = \"CLEAR_USERS\";\nexport const CLEAR_USER = \"CLEAR_USER\";\nexport const USER_ERROR = \"USER_ERROR\";\n//user Framework Reducer\nexport const GET_USER = \"GET_USERS\";\n//KPI & Charts Framework Reducer\nexport const GET_STATS = \"GET_STATS\";\nexport const STATS_ERROR = \"STATS_ERROR\";\n//Alerts Framework Reducer\nexport const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n//Authentication Reducer\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const RESEND_VERIFY = \"RESEND_VERIFY\";\nexport const PASSWORD_RESET = \"PASSWORD_RESET\"\nexport const PASSWORD_RESET_REQUEST = \"PASSWORD_RESET_REQUEST\";\nexport const PASSWORD_RESET_EMAIL_FAIL = \"PASSWORD_RESET_EMAIL_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n//General Reducer\nexport const SET_CURRENT = \"SET_CURRENT\";\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\nexport const OPEN_DIALOG = \"OPEN_DIALOG\";\nexport const CLOSE_DIALOG = \"CLOSE_DIALOG\";\nexport const SET_LOADING = \"SET_LOADING\";\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  GET_USER,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_USER,\n  CLEAR_ERRORS,\n  CLEAR_USER,\n  USER_ERROR,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_USER: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n    case UPDATE_USER: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n    case CLEAR_USER: {\n      return {\n        ...state,\n        user: null,\n        error: null,\n        current: null,\n      };\n    }\n    case SET_CURRENT: {\n      return {\n        ...state,\n        current: action.payload,\n      };\n    }\n    case CLEAR_CURRENT: {\n      return {\n        ...state,\n        current: null,\n      };\n    }\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    case USER_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"./userContext.js\";\nimport userReducer from \"./UserReducer\";\n\nimport {\n  GET_USER,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_USER,\n  CLEAR_ERRORS,\n  USER_ERROR,\n  CLEAR_USER\n} from \"../types\";\n\nconst UserState = (props) => {\n  const initialState = {\n    loading: true,\n    user: null,\n    current: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  //Get User\n  const getUser = async (id) => {\n    try {\n      const res = await axios.get(`/api/user/${id}`);\n      dispatch({ type: GET_USER, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error\n      });\n    }\n  };\n\n  //Update User Record\n  const updateUser = async (user) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.put(`/api/user/${user._id}`, user, config);\n      dispatch({ type: UPDATE_USER, payload: res.data });\n      setCurrent(user)\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error\n      });\n    }\n  };\n\n  const clearUserAccount = () => {\n    dispatch({ type: CLEAR_USER });\n  };\n\n  //Set Current User\n  const setCurrent = (user) => {\n    dispatch({ type: SET_CURRENT, payload: user });\n  };\n\n  //Clear Current User\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  //Clear Errors User\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  return (\n    <UserContext.Provider\n      value={{\n        user: state.user,\n        loading: state.loading,\n        current: state.current,\n        error: state.error,\n        getUser,\n        setCurrent,\n        clearCurrent,\n        updateUser,\n        clearErrors,\n        clearUserAccount\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserState;\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  GET_USERS,\n  GET_USERS_NSP,\n  GET_ACTIVE_USERS,\n  ADD_USER,\n  DELETE_USER,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_USER,\n  CLEAR_ERRORS,\n  USER_ERROR,\n  CLEAR_USERS,\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_USERS: {\n      return {\n        ...state,\n        users: action.payload,\n        importedUsersAdded: false,\n        loading: false,\n      };\n    }\n    case GET_USERS_NSP: {\n      return {\n        ...state,\n        usersNSP: [...state.usersNSP, action.payload],\n        importedUsersAdded: false,\n        loading: false,\n      };\n    }\n    case GET_ACTIVE_USERS: {\n      return {\n        ...state,\n        activeUsers: action.payload,\n        loading: false,\n      };\n    }\n    case ADD_USER: {\n      return {\n        ...state,\n        users: [action.payload, ...state.users],\n        importedUsersAdded: true,\n        loading: false,\n      };\n    }\n    case DELETE_USER: {\n      return {\n        ...state,\n        users: state.users.filter((user) => user._id !== action.payload),\n        loading: false,\n      };\n    }\n    case UPDATE_USER: {\n      return {\n        ...state,\n        users: state.users.map((user) =>\n          user._id === action.payload._id ? action.payload : user\n        ),\n        loading: false,\n      };\n    }\n    case CLEAR_USERS: {\n      return {\n        ...state,\n        users: null,\n        error: null,\n        current: null,\n        activeUsers: null,\n        usersNSP: [],\n      };\n    }\n    case SET_CURRENT: {\n      return {\n        ...state,\n        current: action.payload,\n      };\n    }\n    case CLEAR_CURRENT: {\n      return {\n        ...state,\n        current: null,\n      };\n    }\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    case USER_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case OPEN_DIALOG: {\n      return {\n        ...state,\n        toggleDialog: true,\n      };\n    }\n    case CLOSE_DIALOG: {\n      return {\n        ...state,\n        current: null,\n        toggleDialog: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport UserAdminContext from \"./userAdminContext.js\";\nimport userReducer from \"./UserAdminReducer\";\n\nimport {\n  GET_USERS,\n  GET_USERS_NSP,\n  GET_ACTIVE_USERS,\n  ADD_USER,\n  DELETE_USER,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_USER,\n  USER_ERROR,\n  CLEAR_ERRORS,\n  CLEAR_USERS,\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n} from \"../types\";\n\nconst UserAdminState = (props) => {\n  const initialState = {\n    usersNSP: [],\n    importedUsersAdded: false,\n    loading: true,\n    users: null,\n    activeUsers: null,\n    current: null,\n    error: null,\n    toggleDialog: false,\n  };\n\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  //Get All Users\n  const getUsers = async () => {\n    try {\n      const res = await axios.get(\"/api/userAdmin\");\n      dispatch({ type: GET_USERS, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Get All Users\n  const getUsersNSP = async (QUBID) => {\n    try {\n      const res = await axios.get(`/api/userAdmin/${QUBID}`);\n      dispatch({ type: GET_USERS_NSP, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Get Active Users\n  const getActiveUsers = async () => {\n    try {\n      const res = await axios.get(\"/api/userAdmin/active\");\n      dispatch({ type: GET_ACTIVE_USERS, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Add new User\n  const addUser = async (user) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"/api/userAdmin\", user, config);\n      dispatch({ type: ADD_USER, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Delete User\n  const deleteUser = async (id) => {\n    try {\n      await axios.delete(`/api/userAdmin/${id}`);\n      dispatch({ type: DELETE_USER, payload: id });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Update User Record\n  const updateUser = async (user) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.put(`/api/userAdmin/${user._id}`, user, config);\n      dispatch({ type: UPDATE_USER, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Update User Record\n  const updateUserNSP = async (usersNSP) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.put(\n        `/api/userAdmin/NSP/${usersNSP._id}`,\n        usersNSP,\n        config\n      );\n      dispatch({ type: ADD_USER, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Set Current User\n  const setCurrent = (user) => {\n    dispatch({ type: SET_CURRENT, payload: user });\n  };\n\n  //Clear Current User\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  //Clear Errors User\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  const clearUserAdmin = () => {\n    dispatch({ type: CLEAR_USERS });\n  };\n  const clearNSPUser = () => {\n    dispatch({ type: CLEAR_USERS });\n  };\n\n  const clearActiveUsers = () => {\n    dispatch({ type: CLEAR_USERS });\n  };\n\n  //Set Dialog Open\n  const setDialogOpen = () => {\n    dispatch({ type: OPEN_DIALOG });\n  };\n\n  //Set Dialog Open\n  const setDialogClosed = () => {\n    dispatch({ type: CLOSE_DIALOG });\n  };\n\n  return (\n    <UserAdminContext.Provider\n      value={{\n        usersNSP: state.usersNSP,\n        importedUsersAdded: state.importedUsersAdded,\n        users: state.users,\n        activeUsers: state.activeUsers,\n        toggleDialog: state.toggleDialog,\n        loading: state.loading,\n        current: state.current,\n        error: state.error,\n        getUsers,\n        getUsersNSP,\n        getActiveUsers,\n        addUser,\n        deleteUser,\n        setCurrent,\n        clearCurrent,\n        updateUser,\n        updateUserNSP,\n        clearErrors,\n        setDialogOpen,\n        setDialogClosed,\n        clearUserAdmin,\n        clearActiveUsers,\n        clearNSPUser\n      }}\n    >\n      {props.children}\n    </UserAdminContext.Provider>\n  );\n};\n\nexport default UserAdminState;\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  GET_PAYMENTS,\n  GET_PAYMENT,\n  GET_USER_PAYMENTS,\n  ADD_PAYMENT,\n  ADD_USER_PAYMENT,\n  DELETE_PAYMENT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_PAYMENT,\n  PAYMENT_ERROR,\n  CLEAR_PAYMENTS,\n  APPROVE_ALL_PAYMENTS,\n  REJECT_ALL_PAYMENTS,\n  PAID_ALL_PAYMENTS,\n  APPROVE_PAYMENT,\n  REJECT_PAYMENT,\n  HOLD_PAYMENT,\n  PENDING_PAYMENT,\n  PAID_PAYMENT,\n  SET_LOADING,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_PAYMENTS: {\n      return {\n        ...state,\n        payments: action.payload,\n        loading: false,\n      };\n    }\n    case GET_USER_PAYMENTS: {\n      return {\n        ...state,\n        userPayments: action.payload,\n        loading: false,\n      };\n    }\n    case GET_PAYMENT: {\n      return {\n        ...state,\n        current: action.payload,\n        loading: false,\n      };\n    }\n    case ADD_USER_PAYMENT:\n    case ADD_PAYMENT: {\n      return {\n        ...state,\n        payments: [action.payload, ...state.payments],\n        loading: false,\n      };\n    }\n    case DELETE_PAYMENT: {\n      return {\n        ...state,\n        payments: state.payments.filter(\n          (payment) => payment._id !== action.payload\n        ),\n        loading: false,\n      };\n    }\n    case UPDATE_PAYMENT: {\n      return {\n        ...state,\n        payments: action.payload,\n        loading: false,\n      };\n    }\n    case REJECT_PAYMENT:\n    case APPROVE_PAYMENT:\n    case HOLD_PAYMENT:\n    case PENDING_PAYMENT:\n    case PAID_PAYMENT:\n    case PAID_ALL_PAYMENTS:\n    case REJECT_ALL_PAYMENTS:\n    case APPROVE_ALL_PAYMENTS: {\n      return {\n        ...state,\n        payments: action.payload,\n        loading: false,\n      };\n    }\n    case CLEAR_PAYMENTS: {\n      return {\n        ...state,\n        payments: null,\n        filtered: null,\n        error: null,\n        current: null,\n      };\n    }\n    case SET_CURRENT: {\n      return {\n        ...state,\n        current: action.payload,\n        loading: false,\n      };\n    }\n    case CLEAR_CURRENT: {\n      return {\n        ...state,\n        current: null,\n        userPayments: null,\n        loading: false,\n      };\n    }\n    case PAYMENT_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case CLEAR_ERRORS: {\n      return {\n        ...state,\n        error: null,\n      };\n    }\n    case SET_LOADING: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport paymentContext from \"./paymentContext\";\nimport paymentReducer from \"./PaymentReducer\";\nimport {\n  GET_PAYMENTS,\n  GET_PAYMENT,\n  GET_USER_PAYMENTS,\n  ADD_PAYMENT,\n  ADD_USER_PAYMENT,\n  DELETE_PAYMENT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_PAYMENT,\n  FILTER_PAYMENTS,\n  PAYMENT_ERROR,\n  CLEAR_PAYMENTS,\n  APPROVE_ALL_PAYMENTS,\n  REJECT_ALL_PAYMENTS,\n  PAID_ALL_PAYMENTS,\n  APPROVE_PAYMENT,\n  REJECT_PAYMENT,\n  HOLD_PAYMENT,\n  PENDING_PAYMENT,\n  PAID_PAYMENT,\n  SET_LOADING,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nconst PaymentState = (props) => {\n  const initialState = {\n    payments: null,\n    userPayments: null,\n    current: null,\n    filtered: null,\n    error: null,\n    loading: true,\n  };\n\n  const [state, dispatch] = useReducer(paymentReducer, initialState);\n\n  //Get User Payments\n  const getUserPayments = async (id) => {\n    try {\n      const res = await axios.get(`/api/user/${id}/payments`);\n      dispatch({ type: GET_USER_PAYMENTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Get Payments\n  const getPayments = async () => {\n    try {\n      const res = await axios.get(\"/api/payments\");\n      dispatch({ type: GET_PAYMENTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n    //Get Payment\n    const getPayment = async (id) => {\n      try {\n        const res = await axios.get(`/api/payments/${id}`);\n        dispatch({ type: GET_PAYMENT, payload: res.data });\n      } catch (error) {\n        dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n      }\n    };\n\n  //Add Payment\n  const addPayment = async (payment) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(`/api/payments/new`, payment, config);\n      dispatch({ type: ADD_PAYMENT, payload: res.data });\n      getPayments();\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Add User Payment\n\n  const addUserPayment = async (id, payment) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(`/api/user/${id}/payments`, payment, config);\n      dispatch({ type: ADD_USER_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Delete Payment\n  const deletePayment = async (pid) => {\n    try {\n      await axios.delete(`/api/payments/${pid}`);\n      dispatch({ type: DELETE_PAYMENT, payload: pid });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Update Payment\n\n  const updatePayment = async (payment) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.put(\n        `/api/payments/${payment._id}`,\n        payment,\n        config\n      );\n      dispatch({ type: UPDATE_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Approve Payment\n  const approvePayment = async (id) => {\n    try {\n      const res = await axios.put(`/api/payments/${id}/approve`);\n      dispatch({ type: APPROVE_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Reject Payment\n  const rejectPayment = async (id) => {\n    try {\n      const res = await axios.put(`/api/payments/${id}/reject`);\n      dispatch({ type: REJECT_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Hold Payment\n  const holdPayment = async (id) => {\n    try {\n      const res = await axios.put(`/api/payments/${id}/onhold`);\n      dispatch({ type: HOLD_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Pending Payment\n  const pendingPayment = async (id) => {\n    try {\n      const res = await axios.put(`/api/payments/${id}/pending`);\n      dispatch({ type: PENDING_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Hold Payment\n  const paidPayment = async (id) => {\n    try {\n      const res = await axios.put(`/api/payments/${id}/paid`);\n      dispatch({ type: PAID_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Approve All Pending Payments\n  const approveAllPayments = async () => {\n    try {\n      const res = await axios.put(`/api/payments/approve`);\n      dispatch({ type: APPROVE_ALL_PAYMENTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Reject All Pending Payments\n  const paidAllPayments = async () => {\n    try {\n      const res = await axios.put(`/api/payments/paid`);\n      dispatch({ type: PAID_ALL_PAYMENTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Reject All Pending Payments\n  const rejectAllPayments = async () => {\n    try {\n      const res = await axios.put(`/api/payments/reject`);\n      dispatch({ type: REJECT_ALL_PAYMENTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Set Current Payment\n  const setCurrent = (payment) => {\n    dispatch({ type: SET_CURRENT, payload: payment });\n  };\n\n  //Clear Current Payment\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n\n  //Clear Payments\n\n  const clearPayments = () => {\n    dispatch({ type: CLEAR_PAYMENTS });\n  };\n\n  //Clear Payments\n\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n  const setLoading = () => {\n    return {\n      type: SET_LOADING,\n    };\n  };\n\n  return (\n    <paymentContext.Provider\n      value={{\n        payments: state.payments,\n        userPayments: state.userPayments,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        loading: state.loading,\n        getPayments,\n        getPayment,\n        getUserPayments,\n        addPayment,\n        addUserPayment,\n        deletePayment,\n        setCurrent,\n        clearCurrent,\n        updatePayment,\n        clearPayments,\n        approvePayment,\n        rejectPayment,\n        holdPayment,\n        pendingPayment,\n        paidPayment,\n        approveAllPayments,\n        rejectAllPayments,\n        paidAllPayments,\n        setLoading,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </paymentContext.Provider>\n  );\n};\n\nexport default PaymentState;\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\nGET_STATS,\nSTATS_ERROR\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_STATS: {\n      return {\n        ...state,\n        stats: action.payload,\n        loading: false,\n        error: null\n      };\n    }\n    case STATS_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport StatsContext from \"./statsContext.js\";\nimport StatsReducer from \"./StatsReducer\";\n\nimport { GET_STATS, STATS_ERROR } from \"../types\";\n\nconst StatsState = (props) => {\n  const initialState = {\n    loading: true,\n    stats: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(StatsReducer, initialState);\n\n  //Return Stats\n  const getStatData = async () => {\n    try {\n      let res = await axios.get(\"/api/stats\");\n      dispatch({ type: GET_STATS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: STATS_ERROR, payload: error.response.data.error });\n    }\n  };\n  return (\n    <StatsContext.Provider\n      value={{\n        stats: state.stats,\n        error: state.error,\n        loading: state.loading,\n        getStatData,\n      }}\n    >\n      {props.children}\n    </StatsContext.Provider>\n  );\n};\n\nexport default StatsState;\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  PASSWORD_RESET_REQUEST,\n  PASSWORD_RESET_EMAIL_FAIL,\n  PASSWORD_RESET,\n  RESEND_VERIFY,\n  USER_LOADED,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  AUTH_ERROR,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isAdmin: action.payload.role === \"Admin\" ? true : false,\n        loading: false,\n        user: action.payload,\n      };\n    case PASSWORD_RESET_REQUEST:\n    case PASSWORD_RESET:\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case AUTH_ERROR:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        isAdmin: null,\n        loading: false,\n        user: null,\n        error: action.payload,\n      };\n    case RESEND_VERIFY:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    case PASSWORD_RESET_EMAIL_FAIL:\n      return {\n        ...state,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  PASSWORD_RESET_REQUEST,\n  PASSWORD_RESET_EMAIL_FAIL,\n  PASSWORD_RESET,\n  RESEND_VERIFY,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\nimport React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport AuthReducer from \"./AuthReducer\";\nimport SetAuthToken from \"../../utils/SetAuthToken\";\nimport { useSnackbar } from \"notistack\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    isAdmin: null,\n    loading: true,\n    user: null,\n    error: null,\n  };\n  const { enqueueSnackbar } = useSnackbar();\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //LOGIN USER\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"/api/auth\", formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //LOAD USER\n  const loadUser = async () => {\n    if (localStorage.token) {\n      SetAuthToken(localStorage.token);\n    }\n    try {\n      const res = await axios.get(\"/api/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //REGISTER USER\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"/api/users/register\", formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n      enqueueSnackbar(`New User Registered`, {\n        variant: \"success\",\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Verify Email\n  const verifyEmail = async (token) => {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    try {\n      const res = await axios.put(\n        `/api/users/confirm-email/${token}`,\n        null,\n        config\n      );\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n      enqueueSnackbar(\"Email address confirmed, please log in\", {\n        variant: \"success\",\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Password Reset Request Email\n  const passwordUpdateRequest = async (token, formData) => {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    try {\n      const res = await axios.put(\n        `/api/users/password-reset/${token}`,\n        formData,\n        config\n      );\n      dispatch({ type: PASSWORD_RESET, payload: res.data });\n      enqueueSnackbar(\"Password reset, please login\", {\n        variant: \"success\",\n      });\n      logout();\n    } catch (error) {\n      dispatch({\n        type: PASSWORD_RESET_EMAIL_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Password Reset Request Email\n  const passwordResetRequest = async (id) => {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    try {\n      const res = await axios.post(\n        `/api/users/password-reset-request/${id}`,\n        null,\n        config\n      );\n      dispatch({ type: PASSWORD_RESET_REQUEST, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: PASSWORD_RESET_EMAIL_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Password Reset Request Email\n  const passwordResetRequestPublic = async (formData) => {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    try {\n      const res = await axios.post(\n        `/api/users/password-reset-request-public`,\n        formData,\n        config\n      );\n      let ID = res.data;\n      await passwordResetRequest(ID);\n    } catch (error) {\n      dispatch({\n        type: PASSWORD_RESET_EMAIL_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Verify Email\n  const resendVerifyEmail = async (id) => {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    try {\n      const res = await axios.post(`/api/user/resend/${id}`, null, config);\n      dispatch({ type: RESEND_VERIFY, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //LOGOUT\n  const logout = () => {\n    dispatch({ type: LOGOUT });\n  };\n\n  //CLEAR ERRORS\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        isAdmin: state.isAdmin,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors,\n        verifyEmail,\n        resendVerifyEmail,\n        passwordResetRequest,\n        passwordUpdateRequest,\n        passwordResetRequestPublic,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n","import React, { Fragment } from \"react\";\n\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n//Authentication\nimport SetAuthToken from \"./utils/SetAuthToken\";\n//Authenticated Pages\nimport Home from \"./components/pages/Home\";\nimport UserAdmin from \"./components/pages/UserAdmin\";\nimport User from \"./components/pages/User\";\nimport UserPayments from \"./components/pages/UserPayments\";\nimport Payments from \"./components/pages/Payments\";\nimport PaymentsCreate from \"./components/pages/PaymentsCreate\";\nimport ViewPayments from \"./components/pages/PaymentsView\";\nimport About from \"./components/pages/About\";\nimport Import from \"./components/pages/Import\";\nimport ImportNSP from \"./components/pages/ImportNSP\";\n\n//Public Pages\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Verify from \"./components/auth/Verify\";\nimport PasswordReset from \"./components/auth/PasswordReset\";\nimport PasswordResetRequest from \"./components/auth/PasswordResetRequest\";\n\n//Components\nimport NavigationBar from \"./components/layouts/NavigationBar\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport { SnackbarProvider } from \"notistack\";\n//State\nimport UserState from \"./context/user/UserState\";\nimport UserAdminState from \"./context/userAdmin/UserAdminState\";\nimport PaymentState from \"./context/payment/PaymentState\";\nimport StatsState from \"./context/stats/StatsState\";\nimport AuthState from \"./context/auth/AuthState\";\n\nif (localStorage.token) {\n  SetAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  return (\n    <SnackbarProvider maxSnack={10}>\n      <AuthState>\n        <UserState>\n          <StatsState>\n            <UserAdminState>\n              <PaymentState>\n                <Router>\n                  <Fragment>\n                    <NavigationBar />\n                    <div className=\"container\">\n                      <Switch>\n                        <PrivateRoute exact path=\"/\" component={Home} />\n                        <PrivateRoute exact path=\"/userAdmin\" component={UserAdmin} />\n                        <PrivateRoute exact path=\"/import\" component={Import} />\n                        <PrivateRoute exact path=\"/importNSP\" component={ImportNSP} />\n                        <PrivateRoute exact path=\"/payments\" component={Payments} />\n                        <PrivateRoute exact path=\"/payments/new\" component={PaymentsCreate} />\n                        <PrivateRoute exact path=\"/payments/:id\" component={ViewPayments} />\n                        <PrivateRoute exact path=\"/user/:id/payments\" component={UserPayments}/>\n                        <PrivateRoute exact path=\"/user/:id\" component={User} />\n                        <Route exact path=\"/users/confirm-email/:token\" component={Verify} />\n                        <Route exact path=\"/users/password-reset/:token\" component={PasswordReset} />\n                        <Route exact path=\"/about\" component={About} />\n                        <Route exact path=\"/users/register\" component={Register} />\n                        <Route exact path=\"/password-reset\" component={PasswordResetRequest} />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Redirect from=\"*\" to=\"/\" />\n                      </Switch>\n                    </div>\n                  </Fragment>\n                </Router>\n              </PaymentState>\n            </UserAdminState>\n          </StatsState>\n        </UserState>\n      </AuthState>\n    </SnackbarProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}