{"version":3,"sources":["utils/SetAuthToken.js","context/stats/statsContext.js","components/layouts/Spinner.js","components/charts/UserCountKPI.js","components/layouts/VertIconMenu.js","components/charts/PaymentPendingAuthCountKPI.js","components/charts/PaymentPendingAuthValueKPI.js","components/charts/PaymentsAuthValueKPI.js","components/charts/PaymentsAuthValueYTDKPI.js","context/user/userContext.js","context/payment/paymentContext.js","utils/dropdowns.js","components/payments/UserPayments.js","context/auth/authContext.js","components/layouts/NavButtonHome.js","components/pages/Home.js","context/userAdmin/userAdminContext.js","components/userAdmin/UserAdminAddModal.js","components/layouts/NavButtonUserMgmt.js","components/userAdmin/UserAdmin.js","components/pages/UserAdmin.js","components/layouts/NavButtonUserProfile.js","components/user/User.js","components/pages/User.js","components/layouts/NavButtonPayments.js","components/pages/UserPayments.js","components/payments/Payments.js","components/payments/PaymentsNav.js","components/layouts/ConfirmationDialog.js","components/pages/Payments.js","components/layouts/NavButtonPaymentsAdd.js","components/layouts/MarkingRange.js","components/payments/CreatePayments.js","components/pages/PaymentsCreate.js","components/payments/ViewPayments.js","components/pages/PaymentsView.js","components/layouts/NavButtonAbout.js","components/pages/About.js","components/layouts/NavButtonUserMgmtImport.js","components/import/Import.js","components/pages/Import.js","components/layouts/NavButtonUserMgmtImportNSP.js","components/import/ImportNSP.js","components/pages/ImportNSP.js","components/auth/Register.js","components/auth/Login.js","components/auth/Verify.js","components/auth/PasswordReset.js","components/auth/PasswordResetRequest.js","components/layouts/NavigationBar.js","components/routing/PrivateRoute.js","context/types.js","context/user/UserReducer.js","context/user/UserState.js","context/userAdmin/UserAdminReducer.js","context/userAdmin/UserAdminState.js","context/payment/PaymentReducer.js","context/payment/PaymentState.js","context/stats/StatsReducer.js","context/stats/StatsState.js","context/auth/AuthReducer.js","context/auth/AuthState.js","App.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","statsContext","createContext","useStyles","makeStyles","theme","root","display","marginLeft","spacing","flexDirection","justifyContent","ProgressIndicator","classes","className","CircularProgress","color","height","whiteSpace","UserCountKPI","useContext","StatsContext","stats","getStatData","loading","useEffect","Card","CardHeader","title","statsActive","subheader","options","id","icon","to","name","LongMenu","useState","anchorEl","setAnchorEl","open","Boolean","handleClose","IconButton","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","Menu","keepMounted","onClose","Grid","container","direction","justify","alignItems","map","option","MenuItem","item","Typography","PaymentPendingAuthCountKPI","action","VertIconMenu","statsPending","PaymentPendingAuthValueKPI","num","statsPaymentPendingAuth","length","total","toFixed","currentMonth","Date","PaymentsAuthValueKPI","statsPaymentAuthMTD","format","PaymentsAuthValueYTDKPI","statsPaymentAuthYTD","CurrentAcaYear","userContext","paymentContext","schoolMenu","value","label","statusMenu","roleMenu","titlesMenu","pronounMenu","countryMenu","Counties","country","semester","deliveryCategory","academicYear","monthWords","yearsDD","margin","flexGrow","paper","padding","textAlign","palette","text","secondary","right","left","date","toUTCString","UserPayments","props","UserContext","user","userPayments","userPaymentsLoading","useSnackbar","history","enqueueSnackbar","closeSnackbar","useParams","useHistory","CustomChip","onDelete","Chip","variant","filter","filterType","sortOrder","downloadOptions","filterOptions","useDisplayedColumnsOnly","useDisplayedRowsOnly","filename","QUBID","selectableRowsHideCheckboxes","rowsPerPageOptions","rowsPerPage","draggableColumns","enabled","columns","download","sort","customBodyRender","i","tableMeta","updateValue","Intl","NumberFormat","style","currency","empty","alignContent","align","Pageview","fontSize","dataIndex","path","push","viewPayment","rowData","userID","xs","data","components","TableFilterList","ItemComponent","authContext","speedDial","position","bottom","NavButtonHome","React","setOpen","AuthContext","isAdmin","setUserID","_id","actions","SpeedDial","ariaLabel","onOpen","FabProps","SpeedDialAction","tooltipTitle","MuiAlert","Alert","elevation","table","minWidth","spacer","marginTop","textField","footer","minHeight","inputField","inputCenter","typography","pxToRem","finalButton","Home","loadUser","resendVerifyEmail","PaymentContext","getUserPayments","timeOfDayWords","getHours","getGreeting","firstName","role","md","sm","clsx","emailVerified","marginBottom","severity","Button","size","AlertTitle","email","payments","userAdminContext","flexWrap","width","textLabel","marginRight","textFieldFull","UserAdminAddModal","passwordResetRequest","UserAdminContext","addUser","clearCurrent","current","updateUser","setDialogClosed","toggleDialog","error","setUser","address","street","city","county","postcode","contact","mobile","landline","bank","bankName","branchName","sortCode","accNumber","buildingSocietyNumber","dob","emailTokenIssued","emailTokenExpiry","emailVerifiedDate","lastName","nino","password","password1","passwordResetToken","passwordResetTokenExpiresAt","pronoun","payment","payment1","NSPID","qubSchool","status","taxDeclaration","employeeStatements_section1","employeeStatements_section2","employeeStatements_section3q1","employeeStatements_section3q2","employeeStatements_section3q3","employeeStatements_section3q4","employeeStatements_section3q5","signed","emailVerificationToken","emailVerificationTokenExpiresAt","userImg","onChange","e","target","onCloseDialog","clearAll","onSubmit","preventDefault","Dialog","aria-labelledby","DialogTitle","DialogContent","DialogContentText","noValidate","autoComplete","TextField","required","type","placeholder","select","disabled","FormLabel","component","DialogActions","NavButtonUserMgmt","setDialogOpen","handleClick","UserAdmin","users","getUsers","deleteUser","clearErrors","setCurrent","onRowsDelete","rows","d","forEach","a","customBodyRenderLite","openDialog","editProfile","NavButtonUserProfile","button","backgroundColor","taxText","fontWeight","taxTextSpacingTop","taxTextSpacingBottom","Subtext","User","getUser","setData","newPassword","confirmPassword","currentPassword","tab","setTab","handleSwitchChange","checked","Box","Tabs","indicatorColor","textColor","newValue","Tab","weight","Tooltip","moment","arrow","helperText","fullWidth","FormControl","RadioGroup","taxAlign","FormControlLabel","control","Radio","FormHelperText","paddingLeft","paddingTop","mt","mb","Switch","activeUser","NavButtonPayments","Payments","deletePayment","approvePayment","rejectPayment","holdPayment","pendingPayment","paidPayment","onClickApprovePayment","onClickRejectPayment","minimumFractionDigits","find","element","ThumbUp","ThumbDown","PauseCircleOutline","onClickHoldPayment","PlayCircleOutline","onClickPendingPayment","Receipt","onClickPaidPayment","PaymentsNav","onClickReject","onClickApprove","onClickPaid","Paper","Link","ResponsiveDialog","useTheme","fullScreen","useMediaQuery","breakpoints","down","hideForm","stage","finalisePayment","invoiceTotal","RejectAllPayments","ApproveAllPayments","PaidAllPayments","autoFocus","Payment","getPayments","setLoading","rejectAllPayments","approveAllPayments","paidAllPayments","formShowing","setFormShowing","setStage","showForm","MarkingRange","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","CUR","AC1_RATE","AC2_RATE","inputEdit","BandB","HtmlTooltip","withStyles","tooltip","maxWidth","border","ccyFormat","subtotal","totals","reduce","sum","totalGrade1Hours","grade","totalPaidHours","totalGrade2Hours","totalOfficeHours","count","pad","substr","CreatePayment","addPayment","activeUsers","setUserSelect","month","getMonth","deliveredBy","school","paymentPeriod","paymentPeriodYear","getFullYear","paymentPeriodNum","parseInt","toString","account","projectCode","projectName","subAnalysis","amount","student_cohort","cohort_id","paymentStatus","grade1","grade2","rate1","rate2","setPayment","range","numOfStudents","numOfCWPcsPerStudent","OralExamHours","markingCalc","setMarkingCalc","description","officeHoursCalc","setOfficeHoursCalc","lecture","activity","paymentGrade","paymentRate","time","totalhrs","seminar","lab","fieldTrip","office","marking","training","paymentCalc","setPaymentCalc","hourlyRates","setHourlyRates","panel1","panel2","panel3","resetButton","addPaymentButton","isDisabled","setIsDisabled","isExpanded","setExpanded","userSelect","finalised","setFinalised","setGrade","g","r","rng","rate","userQUBID","val","parseFloat","invoiceSubtotal","totPaidHours","totOfficeHours","Accordion","defaultExpanded","expanded","AccordionSummary","AccordionDetails","continuePayment","placement","Fragment","continueMarkingOfficeHours","colSpan","uuidv4","row","Input","disableUnderline","input","selected","InputProps","startAdornment","InputAdornment","rowSpan","onChangeCapture","submitArray","PaymentsCreate","getActiveUsers","NavButtonPaymentsAdd","CreatePayments","ViewPayment","paymentDetail","officeHours","PaymentsView","getPayment","ViewPayments","NavButtonAbout","About","NavButtonUserMgmtImport","Import","file","filestate","setFilestate","jsonFile","setJsonFileState","fileUploader","useRef","readFile","Promise","resolve","reject","fileReader","FileReader","readAsArrayBuffer","onload","bufferArray","result","wb","XLSX","wsname","SheetNames","ws","Sheets","sheet_to_json","onerror","then","makePassword","characters","charactersLength","charAt","Math","floor","random","usersToDelete","newState","includes","accept","ref","stopPropagation","files","console","message","htmlFor","startIcon","focus","makeRandomPassword","signedDate","userWithAddedRandomPassword","Object","assign","err","ImportUsers","importedUsersAdded","log","mergeById","a1","a2","itm","ImportNSP","getUsersNSP","updateUserNSP","usersNSP","clearNSPUser","NSPUserState","setNSPUserState","enable","setEnable","ile","__rowNum__","ImportNSPData","NavButtonUserMgmtImportNSP","Register","register","isAuthenticated","password2","minLength","Login","login","Verify","verifyEmail","logout","PasswordReset","passwordUpdateRequest","setPassword","handleChangePassword","PasswordResetRequest","passwordResetRequestPublic","NavigationBar","clearUserAccount","clearUserAdmin","authLinks","href","unAuthLinks","defaultProps","PrivateRoute","Component","rest","render","GET_PAYMENTS","GET_PAYMENT","GET_USER_PAYMENTS","ADD_PAYMENT","ADD_USER_PAYMENT","DELETE_PAYMENT","UPDATE_PAYMENT","CLEAR_PAYMENTS","PAYMENT_ERROR","APPROVE_ALL_PAYMENTS","REJECT_ALL_PAYMENTS","PAID_ALL_PAYMENTS","APPROVE_PAYMENT","REJECT_PAYMENT","HOLD_PAYMENT","PENDING_PAYMENT","PAID_PAYMENT","GET_USERS","GET_USERS_NSP","GET_ACTIVE_USERS","ADD_USER","DELETE_USER","UPDATE_USER","CLEAR_USERS","CLEAR_USER","USER_ERROR","GET_USER","GET_STATS","STATS_ERROR","CLEAR_ERRORS","REGISTER_SUCCESS","REGISTER_FAIL","RESEND_VERIFY","PASSWORD_RESET","PASSWORD_RESET_REQUEST","PASSWORD_RESET_EMAIL_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SET_CURRENT","CLEAR_CURRENT","OPEN_DIALOG","CLOSE_DIALOG","SET_LOADING","state","payload","UserState","useReducer","userReducer","dispatch","get","res","response","config","put","Provider","children","UserAdminState","post","delete","clearActiveUsers","filtered","PaymentState","paymentReducer","addUserPayment","pid","updatePayment","clearPayments","StatsState","StatsReducer","localStorage","setItem","removeItem","AuthState","initialState","getItem","AuthReducer","SetAuthToken","formData","ID","App","maxSnack","exact","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d72d99f1.chunk.js","sourcesContent":["import axios from \"axios\"\n\nconst setAuthToken = (token) => {\n    if(token){\n        axios.defaults.headers.common[\"x-auth-token\"] = token\n    } else {\n        delete axios.defaults.headers.common[\"x-auth-token\"] \n    }\n}\n\nexport default setAuthToken","import { createContext } from \"react\";\n\nconst statsContext = createContext();\n\nexport default statsContext;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    '& > * + *': {\n      marginLeft: theme.spacing(2),\n    },\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst ProgressIndicator = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}> \n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n}\nexport default ProgressIndicator;\n","import React, { useContext, useEffect } from \"react\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    whiteSpace: \"pre-line\",\n  },\n}));\n\nconst UserCountKPI = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData, loading } = statsContext;\n\n  useEffect(() => {\n    getStatData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      {stats !== null && !loading ? (\n        <Card className={classes.root}>\n          <CardHeader\n            title={stats[0].statsActive}\n            subheader={\"Active Users\"}\n          />\n        </Card>\n      ) : (\n        <ProgressIndicator />\n      )}\n    </>\n  );\n};\nexport default UserCountKPI;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport ThumbUpIcon from \"@material-ui/icons/ThumbUp\";\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\nimport { Typography, Grid } from \"@material-ui/core\";\n\nconst options = [\n  {\n    id: 1,\n    icon: (\n      <Link to=\"/payments\">\n        <ViewListIcon />\n      </Link>\n    ),\n    name: <Link to=\"/payments\">View</Link>,\n  },\n  // {\n  //   id: 2,\n  //   icon: (\n  //     <Link to=\"/payments/approve\">\n  //       <ThumbUpIcon />\n  //     </Link>\n  //   ),\n  //   name:<Link to=\"/payments/approve\">Approve All</Link>\n  // },\n  // {\n  //   id: 3,\n  //   icon: (\n  //     <Link to=\"/payments\">\n  //       <ThumbDownIcon />\n  //     </Link>\n  //   ),\n  //   name: <Link to=\"/payments\">\n  //   Reject All\n  // </Link>,\n  // },\n  // { icon: <Admin />, name: \"Admin\" },\n];\n\nconst LongMenu = () => {\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-label=\"more\"\n        aria-controls=\"long-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id=\"long-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={open}\n        onClose={handleClose}\n      >\n        <Grid\n          container\n          spacing={1}\n          direction=\"column\"\n          justify=\"flex-start\"\n          alignItems=\"center\"\n        >\n          {options.map((option) => (\n            <MenuItem key={option.id} onClick={handleClose}>\n              <Grid item>{option.icon}</Grid>\n              <Grid item>\n                <Typography>{option.name}</Typography>\n              </Grid>\n            </MenuItem>\n          ))}\n        </Grid>\n      </Menu>\n    </div>\n  );\n};\nexport default LongMenu;\n","import React, {useContext, useEffect} from \"react\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport VertIconMenu from \"../../components/layouts/VertIconMenu\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    whiteSpace: 'pre-line'\n  },\n}));\n\nconst PaymentPendingAuthCountKPI = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData, loading } = statsContext;\n \n  useEffect(() => {\n    getStatData();\n   // eslint-disable-next-line react-hooks/exhaustive-deps\n   }, [])\n\n  return (\n    <>\n    {stats !== null && !loading ? (\n     <Card className={classes.root}>\n     <CardHeader\n     action={<VertIconMenu />}\n       title={stats[1].statsPending}\n       subheader={\"Payments Pending\"}\n     />\n   </Card>\n    ) : (\n      <ProgressIndicator />\n    )}\n  </>\n  );\n};\nexport default PaymentPendingAuthCountKPI;\n\n","import React, { useContext, useEffect } from \"react\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    whiteSpace: \"pre-line\",\n  },\n}));\nconst PaymentPendingAuthValueKPI = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData, loading } = statsContext;\n\n  useEffect(() => {\n    getStatData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <ProgressIndicator />\n      ) : stats && stats[3].statsPaymentPendingAuth.length ? (\n        <Card className={classes.root}>\n          <CardHeader\n            title={`£${ccyFormat(stats[3].statsPaymentPendingAuth[0].total)}`}\n            subheader={\"Pending\\n Approval\"}\n          />\n        </Card>\n      ) : (\n        <Card className={classes.root}>\n          <CardHeader title={`£0.00`} subheader={\"Pending Authorisation\"} />\n        </Card>\n      )}\n    </>\n  );\n};\n\nexport default PaymentPendingAuthValueKPI;\n","import React, { useContext, useEffect } from \"react\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Moment from \"react-moment\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100%\",\n    whiteSpace: \"pre-line\",\n  },\n}));\n\nlet currentMonth = new Date();\nconst PaymentsAuthValueKPI = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData, loading } = statsContext;\n\n  useEffect(() => {\n    getStatData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <ProgressIndicator />\n      ) : stats && stats[4].statsPaymentAuthMTD.length ? (\n        <Card className={classes.root}>\n          <CardHeader\n              title={`£${ccyFormat(stats[4].statsPaymentAuthMTD[0].total)}`}\n              subheader={\n                <>\n                {\"Approved for \\n\"}\n                <Moment format=\"MMMM YY\">{currentMonth}</Moment>\n              </>\n            }\n          />\n        </Card>\n      ) : (\n        <Card className={classes.root}>\n          <CardHeader\n            title={`£0.00`}\n            subheader={\n              <>\n                  {\"Approved for \\n\"}<Moment format=\"MMMM YY\">{currentMonth}</Moment>\n              </>\n            }\n          />\n        </Card>\n      )}\n    </>\n  );\n};\nexport default PaymentsAuthValueKPI;\n","import React, { useContext, useEffect } from \"react\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport ProgressIndicator from \"../layouts/Spinner\";\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    whiteSpace: 'pre-line',\n  },\n}));\n\nconst PaymentsAuthValueYTDKPI = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData, loading } = statsContext;\n\n  useEffect(() => {\n    getStatData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      {loading ? (\n        <ProgressIndicator />\n      ) : stats && stats[5].statsPaymentAuthYTD.length ? (\n        <Card className={classes.root}>\n          <CardHeader\n              title={`£${ccyFormat(stats[5].statsPaymentAuthYTD[0].total)}`}\n              subheader={\n                <>\n                {\"Approved for \\n\"}{stats[6].CurrentAcaYear}\n              </>\n            }\n          />\n        </Card>\n      ) : (\n        <Card className={classes.root}>\n          <CardHeader\n            title={`£0.00`}\n            subheader={\n              <>\n                  {\"Approved for \\n\"}{stats[6].CurrentAcaYear}\n              </>\n            }\n          />\n        </Card>\n      )}\n    </>\n  );\n}\nexport default PaymentsAuthValueYTDKPI","import { createContext } from \"react\";\n\nconst userContext = createContext();\n\nexport default userContext;\n","import { createContext } from \"react\";\n\nconst paymentContext = createContext();\n\nexport default paymentContext;\n","export const schoolMenu = [\n  {\n    id: 1,\n    value: \"Arts, English and Languages\",\n    label: \"Arts, English and Languages\",\n  },\n  { id: 2, value: \"Biological Sciences\", label: \"Biological Sciences\" },\n  {\n    id: 3,\n    value: \"Chemistry and Chemical Engineering\",\n    label: \"Chemistry and Chemical Engineering\",\n\n  },\n  {\n    id: 4,\n    value: \"Electronics, Electrical Engineering and Computer Science\",\n    label: \"Electronics, Electrical Engineering and Computer Science\",\n\n  },\n  { id: 5, value: \"EPS Budget Management\", label: \"EPS Budget Management\" },\n  { id: 6, value: \"Faculty Office - AHSS\", label: \"Faculty Office - AHSS\" },\n  { id: 7, value: \"Faculty Office (E&PS)\", label: \"Faculty Office (E&PS)\" },\n  { id: 8, value: \"Faculty Office (MH&LS)\", label: \"Faculty Office (MH&LS)\" },\n  {\n    id: 9,\n    value: \"History, Anthropology, Philosophy and Politics\",\n    label: \"History, Anthropology, Philosophy and Politics\",\n  },\n  {\n    id: 10,\n    value: \"Institute of Professional Legal Studies\",\n    label: \"Institute of Professional Legal Studies\",\n  },\n  { id: 11, value: \"Institute of Theology\", label: \"Institute of Theology\" },\n  { id: 12, value: \"Law\", label: \"Law\" },\n  {\n    id: 13,\n    value: \"Mathematics and Physics\",\n    label: \"Mathematics and Physics\",\n  },\n  {\n    id: 14,\n    value: \"Mechanical and Aerospace Engineering\",\n    label: \"Mechanical and Aerospace Engineering\",\n  },\n  {\n    id: 15,\n    value: \"Medicine, Dentistry and Biomedical Sciences\",\n    label: \"Medicine, Dentistry and Biomedical Sciences\",\n  },\n  {\n    id: 16,\n    value: \"Natural and Built Environment\",\n    label: \"Natural and Built Environment\",\n  },\n  { id: 17, value: \"Nursing and Midwifery\", label: \"Nursing and Midwifery\" },\n  { id: 18, value: \"Pharmacy\", label: \"Pharmacy\" },\n  { id: 19, value: \"Psychology\", label: \"Psychology\" },\n  {\n    id: 20,\n    value: \"Queen's University Management School\",\n    label: \"Queen's University Management School\",\n  },\n  {\n    id: 21,\n    value:\n      \"Senator George J Mitchell Institute for Global Peace, Security and Justice\",\n    label:\n      \"Senator George J Mitchell Institute for Global Peace, Security and Justice\",\n  },\n  {\n    id: 22,\n    value: \"Social Sciences, Education and Social Work\",\n    label: \"Social Sciences, Education and Social Work\",\n  },\n];\n\nexport const statusMenu = [\n  { id: 1, value: \"Pending\", label: \"Pending\" },\n  { id: 2, value: \"Active\", label: \"Active\" },\n  { id: 3, value: \"Disabled\", label: \"Disabled\" },\n  { id: 4, value: \"Expired\", label: \"Expired\" },\n];\n\nexport const roleMenu = [\n  { id: 1, value: \"User\", label: \"User\" },\n  { id: 2, value: \"Admin\", label: \"Admin\" },\n  { id: 3, value: \"Module Owner\", label: \"Module Owner\" },\n  { id: 4, value: \"School Management\", label: \"School Management\" },\n  { id: 5, value: \"Clerical\", label: \"Clerical\" },\n  { id: 6, value: \"Adhoc\", label: \"Adhoc\" },\n];\n\nexport const titlesMenu = [\n  { id: 1, value: \"Mr\", label: \"Mr\" },\n  { id: 2, value: \"Mrs\", label: \"Mrs\" },\n  { id: 3, value: \"Miss\", label: \"Miss\" },\n  { id: 4, value: \"Dr\", label: \"Dr\" },\n  { id: 5, value: \"Ms\", label: \"Ms\" },\n  { id: 6, value: \"Prof\", label: \"Prof\" },\n  { id: 7, value: \"Other\", label: \"Other\" },\n];\n\nexport const pronounMenu = [\n  { id: 1, value: \"He/Him\", label: \"He/Him\" },\n  { id: 2, value: \"She/Her\", label: \"She/Her\" },\n  { id: 3, value: \"They/Them\", label: \"They/Them\" },\n  { id: 4, value: \"Other\", label: \"Other\" },\n];\n\nexport const countryMenu = [\n  { id: 1, value: \"England\", label: \"England\" },\n  { id: 2, value: \"Scotland\", label: \"Scotland\" },\n  { id: 3, value: \"Wales\", label: \"Wales\" },\n  { id: 4, value: \"Northern Ireland\", label: \"Northern Ireland\" },\n];\n\nexport const Counties = [\n  { id: 1, name: \"Avon\", country: \"England\" },\n  { id: 2, name: \"Bedfordshire\", country: \"England\" },\n  { id: 3, name: \"Berkshire\", country: \"England\" },\n  { id: 4, name: \"Buckinghamshire\", country: \"England\" },\n  { id: 5, name: \"Cambridgeshire\", country: \"England\" },\n  { id: 6, name: \"Cheshire\", country: \"England\" },\n  { id: 7, name: \"Cleveland\", country: \"England\" },\n  { id: 8, name: \"Cornwall\", country: \"England\" },\n  { id: 9, name: \"Cumbria\", country: \"England\" },\n  { id: 10, name: \"Derbyshire\", country: \"England\" },\n  { id: 11, name: \"Devon\", country: \"England\" },\n  { id: 12, name: \"Dorset\", country: \"England\" },\n  { id: 13, name: \"Durham\", country: \"England\" },\n  { id: 14, name: \"East Sussex\", country: \"England\" },\n  { id: 15, name: \"Essex\", country: \"England\" },\n  { id: 16, name: \"Gloucestershire\", country: \"England\" },\n  { id: 17, name: \"Hampshire\", country: \"England\" },\n  { id: 18, name: \"Herefordshire\", country: \"England\" },\n  { id: 19, name: \"Hertfordshire\", country: \"England\" },\n  { id: 20, name: \"Isle of Wight\", country: \"England\" },\n  { id: 21, name: \"Kent\", country: \"England\" },\n  { id: 22, name: \"Lancashire\", country: \"England\" },\n  { id: 23, name: \"Leicestershire\", country: \"England\" },\n  { id: 24, name: \"Lincolnshire\", country: \"England\" },\n  { id: 25, name: \"London\", country: \"England\" },\n  { id: 26, name: \"Merseyside\", country: \"England\" },\n  { id: 27, name: \"Norfolk\", country: \"England\" },\n  { id: 28, name: \"Northamptonshire\", country: \"England\" },\n  { id: 29, name: \"Northumberland\", country: \"England\" },\n  { id: 30, name: \"North Yorkshire\", country: \"England\" },\n  { id: 31, name: \"Nottinghamshire\", country: \"England\" },\n  { id: 32, name: \"Oxfordshire\", country: \"England\" },\n  { id: 33, name: \"Rutland\", country: \"England\" },\n  { id: 34, name: \"Shropshire\", country: \"England\" },\n  { id: 35, name: \"Somerset\", country: \"England\" },\n  { id: 36, name: \"South Yorkshire\", country: \"England\" },\n  { id: 37, name: \"Staffordshire\", country: \"England\" },\n  { id: 38, name: \"Suffolk\", country: \"England\" },\n  { id: 39, name: \"Surrey\", country: \"England\" },\n  { id: 40, name: \"Tyne and Wear\", country: \"England\" },\n  { id: 41, name: \"Warwickshire\", country: \"England\" },\n  { id: 42, name: \"West Midlands\", country: \"England\" },\n  { id: 43, name: \"West Sussex\", country: \"England\" },\n  { id: 44, name: \"West Yorkshire\", country: \"England\" },\n  { id: 45, name: \"Wiltshire\", country: \"England\" },\n  { id: 46, name: \"Worcestershire\", country: \"England\" },\n  { id: 47, name: \"Clwyd\", country: \"Wales\" },\n  { id: 48, name: \"Dyfed\", country: \"Wales\" },\n  { id: 49, name: \"Gwent\", country: \"Wales\" },\n  { id: 50, name: \"Gwynedd\", country: \"Wales\" },\n  { id: 51, name: \"Mid Glamorgan\", country: \"Wales\" },\n  { id: 52, name: \"Powys\", country: \"Wales\" },\n  { id: 53, name: \"South Glamorgan\", country: \"Wales\" },\n  { id: 54, name: \"West Glamorgan\", country: \"Wales\" },\n  { id: 55, name: \"Aberdeenshire\", country: \"Scotland\" },\n  { id: 56, name: \"Angus\", country: \"Scotland\" },\n  { id: 57, name: \"Argyll\", country: \"Scotland\" },\n  { id: 58, name: \"Ayrshire\", country: \"Scotland\" },\n  { id: 59, name: \"Banffshire\", country: \"Scotland\" },\n  { id: 60, name: \"Berwickshire\", country: \"Scotland\" },\n  { id: 61, name: \"Bute\", country: \"Scotland\" },\n  { id: 62, name: \"Caithness\", country: \"Scotland\" },\n  { id: 63, name: \"Clackmannanshire\", country: \"Scotland\" },\n  { id: 64, name: \"Dumfriesshire\", country: \"Scotland\" },\n  { id: 65, name: \"Dunbartonshire\", country: \"Scotland\" },\n  { id: 66, name: \"East Lothian\", country: \"Scotland\" },\n  { id: 67, name: \"Fife\", country: \"Scotland\" },\n  { id: 68, name: \"Inverness-shire\", country: \"Scotland\" },\n  { id: 69, name: \"Kincardineshire\", country: \"Scotland\" },\n  { id: 70, name: \"Kinross-shire\", country: \"Scotland\" },\n  { id: 71, name: \"Kirkcudbrightshire\", country: \"Scotland\" },\n  { id: 72, name: \"Lanarkshire\", country: \"Scotland\" },\n  { id: 73, name: \"Midlothian\", country: \"Scotland\" },\n  { id: 74, name: \"Moray\", country: \"Scotland\" },\n  { id: 75, name: \"Nairnshire\", country: \"Scotland\" },\n  { id: 76, name: \"Orkney\", country: \"Scotland\" },\n  { id: 77, name: \"Peeblesshire\", country: \"Scotland\" },\n  { id: 78, name: \"Perthshire\", country: \"Scotland\" },\n  { id: 79, name: \"Renfrewshire\", country: \"Scotland\" },\n  { id: 80, name: \"Ross-shire\", country: \"Scotland\" },\n  { id: 81, name: \"Roxburghshire\", country: \"Scotland\" },\n  { id: 82, name: \"Selkirkshire\", country: \"Scotland\" },\n  { id: 83, name: \"Shetland\", country: \"Scotland\" },\n  { id: 84, name: \"Stirlingshire\", country: \"Scotland\" },\n  { id: 85, name: \"Sutherland\", country: \"Scotland\" },\n  { id: 86, name: \"West Lothian\", country: \"Scotland\" },\n  { id: 87, name: \"Wigtownshire\", country: \"Scotland\" },\n  { id: 88, name: \"Antrim\", country: \"Northern Ireland\" },\n  { id: 89, name: \"Armagh\", country: \"Northern Ireland\" },\n  { id: 90, name: \"Down\", country: \"Northern Ireland\" },\n  { id: 91, name: \"Fermanagh\", country: \"Northern Ireland\" },\n  { id: 92, name: \"Londonderry\", country: \"Northern Ireland\" },\n  { id: 93, name: \"Tyrone\", country: \"Northern Ireland\" },\n];\n\nexport const deliveryCode = [\n  { id: 1, value: \"TA (Non-PGR)\", label: \"TA (Non-PGR)\" },\n  { id: 2, value: \"PGTA (PGR)\", label: \"PGTA (PGR)\" },\n];\n\nexport const semester = [\n  { id: 1, value: \"1\", label: \"Semester 1\" },\n  { id: 2, value: \"2\", label: \"Semester 2\" },\n  { id: 3, value: \"3\", label: \"Semester 3\" },\n];\n\nexport const deliveryCategory = [\n  { id: 1, value: \"TA\", label: \"TA (Non-PGR)\" },\n  { id: 2, value: \"PGTA\", label: \"PGTA (PGR)\" },\n];\n\nexport const academicYear = [\n  { id: 1, value: \"2020/2021\", label: \"2020/2021\" },\n  { id: 2, value: \"2021/2022\", label: \"2021/2022\" },\n  { id: 3, value: \"2022/2023\", label: \"2022/2023\" },\n];\n\nexport const monthWords = [\n  { id: 1, value: \"January\", label: \"January\" },\n  { id: 2, value: \"February\", label: \"February\" },\n  { id: 3, value: \"March\", label: \"March\" },\n  { id: 4, value: \"April\", label: \"April\" },\n  { id: 5, value: \"May\", label: \"May\" },\n  { id: 6, value: \"June\", label: \"June\" },\n  { id: 7, value: \"July\", label: \"July\" },\n  { id: 8, value: \"August\", label: \"August\" },\n  { id: 9, value: \"September\", label: \"September\" },\n  { id: 10, value: \"October\", label: \"October\" },\n  { id: 11, value: \"November\", label: \"November\" },\n  { id: 12, value: \"December\", label: \"December\" },\n];\n\nexport const yearsDD = [\n  { value: 2020 },\n  { value: 2021 },\n  { value: 2022 },\n  { value: 2023 },\n  { value: 2024 },\n  { value: 2025 },\n];\n\n","import React, { useContext, Fragment, useEffect } from \"react\";\nimport { useLocation, useHistory, useParams, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//Context\nimport UserContext from \"../../context/user/userContext\";\nimport PaymentContext from \"../../context/payment/paymentContext\";\nimport { monthWords } from \"../../utils/dropdowns\";\n\n//Components\nimport { Grid, Paper, Chip, Button, Typography } from \"@material-ui/core\";\nimport { ThumbUp, ThumbDown, Pause, Pageview } from \"@material-ui/icons\";\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport { useSnackbar } from \"notistack\";\nimport clsx from \"clsx\";\n// import CustomToolbar from \"../layouts/CustomToolbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"right\",\n    color: theme.palette.text.secondary,\n  },\n  right: {\n    textAlign: \"right\",\n  },\n  left: {\n    textAlign: \"left\",\n  },\n}));\n\nconst date = new Date().toUTCString();\n\nconst UserPayments = (props) => {\n  const classes = useStyles();\n  const userContext = useContext(UserContext);\n  const { user, userPayments, userPaymentsLoading } = props;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { id } = useParams();\n\n  const history = useHistory();\n\n  function MonthWords(i) {\n    const arr = monthWords.map((value) => value.value);\n    return arr[i - 1];\n  }\n\n  if (userPayments !== null && !userPayments.length && !userPaymentsLoading) {\n    return <h4>You have no userPayments recorded</h4>; // if user list is empty\n  }\n\n  const viewPayment = (dataIndex) => {\n    let path = `/payments/${dataIndex}`;\n    history.push(path);\n  };\n\n\n  const CustomChip = ({ label, onDelete }) => {\n    return (\n      <Chip\n        variant=\"outlined\"\n        color=\"primary\"\n        label={label}\n        onDelete={onDelete}\n      />\n    );\n  };\n\n  const CustomFilterList = (props) => {\n    return <TableFilterList {...props} ItemComponent={CustomChip} />;\n  };\n\n  const options = {\n    filter: true,\n    filterType: \"dropdown\",\n    sortOrder: {\n      name: \"paymentPeriodNum\",\n      direction: \"asc\",\n    },\n    downloadOptions: {\n      filterOptions: {\n        useDisplayedColumnsOnly: false,\n        useDisplayedRowsOnly: true,\n      },\n      filename: `${user.QUBID}Payments-${date}.csv`,\n    },\n    selectableRowsHideCheckboxes: false,\n    rowsPerPageOptions: [5, 10, 20, 50, 100],\n    rowsPerPage: 10,\n    draggableColumns: {\n      enabled: false,\n    },\n    selectableRowsHideCheckboxes: true,\n    // customToolbar: () => {\n    //   return <CustomToolbar />;\n    // },\n  };\n\n  const columns = [\n    {\n      name: \"_id\",\n      label: \"UserId\",\n      options: {\n        filter: false,\n        display: false,\n        download: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"paymentPeriodNum\",\n      label: \"Month\",\n      options: {\n        filter: false,\n        display: false,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"paymentPeriod\",\n      label: \"Month\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n        customBodyRender: (value) => {\n          return MonthWords(value);\n        },\n      },\n    },\n    {\n      name: \"QUBID\",\n      label: \"QUBID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"academicYear\",\n      label: \"Year\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"deliveredBy\",\n      label: \"Role\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"amount\",\n      label: \"Amount\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return new Intl.NumberFormat('en-GB', { style: 'currency', currency: 'GBP' }).format(value)\n        },\n      },\n    },\n    {\n      name: \"paymentStatus\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"\",\n      options: {\n        filter: false,\n        sort: false,\n        empty: true,\n        download: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <>\n              <Grid\n                container\n                direction=\"row\"\n                alignContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Typography align=\"center\">\n                <Pageview\n                    fontSize=\"small\"\n                    onClick={() => viewPayment(tableMeta.rowData[0])}\n                    userID={tableMeta.rowData[0]}\n                  />\n                  <Typography align=\"center\" display=\"block\" variant=\"caption\">\n                    View\n                  </Typography>\n                </Typography>\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <div>\n        <div>\n          {userPayments !== null && !userPaymentsLoading ? (\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <MUIDataTable\n                  title={\n                    <div>\n                      <Typography variant=\"h5\">My Payments</Typography>\n                    </div>\n                  }\n                  data={userPayments}\n                  columns={columns}\n                  options={options}\n                  components={{\n                    TableFilterList: CustomFilterList,\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <ProgressIndicator />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UserPayments;\n","import { createContext } from \"react\";\n\nconst authContext = createContext();\n\nexport default authContext;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Payments from \"@material-ui/icons/AccountBalanceWallet\";\nimport Reports from \"@material-ui/icons/Assessment\";\nimport Admin from \"@material-ui/icons/Settings\";\nimport InfoIcon from \"@material-ui/icons/Info\";\n\n//State\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst NavButtonHome = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const authContext = useContext(AuthContext);\n  const { user } = authContext;\n  const { isAdmin } = props;\n\n  useEffect(() => {\n    if (user !== null) {\n      setUserID(user._id);\n    } else {\n      setUserID({\n        _id: \"\",\n      });\n    }\n  }, [authContext, user]);\n\n  const [userID, setUserID] = useState({\n    _id: \"\",\n  });\n\n  let actions;\n\n  // eslint-disable-next-line no-lone-blocks\n  {\n    isAdmin\n      ? (actions = [\n          {\n            id: 1,\n            icon: (\n              <Link to=\"/userAdmin\">\n                <GroupIcon />\n              </Link>\n            ),\n            name: \"User Management\",\n          },\n          {\n            id: 2,\n            icon: (\n              <Link to=\"/payments\">\n                <Payments />\n              </Link>\n            ),\n            name: \"Payments\",\n          },\n          // {\n          //   id: 3,\n          //   icon: (\n          //     <Link to=\"#\">\n          //       <Reports />\n          //     </Link>\n          //   ),\n          //   name: \"Report Manager\",\n          // },\n          // {\n          //   id: 4,\n          //   icon: (\n          //     <Link to=\"#\">\n          //       <Admin />\n          //     </Link>\n          //   ),\n          //   name: \"Admin\",\n          // },\n          {\n            id: 5,\n            icon: (\n              <Link to=\"/about\">\n                <InfoIcon />\n              </Link>\n            ),\n            name: \"About\",\n          },\n        ])\n      : (actions = [\n          {\n            id: 6,\n            icon: (\n              <Link to={`/user/${userID}`}>\n                <PersonIcon />\n              </Link>\n            ),\n            name: \"My Profile\",\n          },\n          {\n            id: 5,\n            icon: (\n              <Link to=\"/about\">\n                <InfoIcon />\n              </Link>\n            ),\n            name: \"About\",\n          },\n        ]);\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"Home Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={handleClose}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n\nexport default NavButtonHome;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { Grid } from \"@material-ui/core\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport clsx from \"clsx\";\n//ScoreCards\nimport UserCountKPI from \"../../components/charts/UserCountKPI\";\nimport PaymentPendingAuthCountKPI from \"../../components/charts/PaymentPendingAuthCountKPI\";\nimport PaymentPendingAuthValueKPI from \"../../components/charts/PaymentPendingAuthValueKPI\";\nimport PaymentsAuthValueKPI from \"../../components/charts/PaymentsAuthValueKPI\";\nimport PaymentsAuthValueYTDKPI from \"../../components/charts/PaymentsAuthValueYTDKPI\";\nimport UserPayments from \"../../components/payments/UserPayments\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n\n//Navigation\nimport NavButtonHome from \"../../components/layouts/NavButtonHome\";\n//State\nimport AuthContext from \"../../context/auth/authContext\";\nimport StatsContext from \"../../context/stats/statsContext\";\nimport PaymentContext from \"../../context/payment/paymentContext\";\n\nfunction MuiAlert(props) {\n  return <Alert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"right\",\n    color: theme.palette.text.secondary,\n  },\n  right: {\n    textAlign: \"right\",\n  },\n  left: {\n    textAlign: \"left\",\n  },\n  table: {\n    minWidth: 700,\n  },\n  spacer: {\n    marginTop: theme.spacing(2),\n  },\n  textField: {\n    \"& > *\": {},\n  },\n  footer: {\n    minHeight: 100,\n  },\n  inputField: {\n    textAlign: \"center\",\n  },\n  inputCenter: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: theme.typography.pxToRem(14),\n  },\n  finalButton: {\n    margin: theme.spacing(2),\n  },\n}));\n\nconst Home = () => {\n  const classes = useStyles();\n  const statsContext = useContext(StatsContext);\n  const { stats, getStatData } = statsContext;\n  const authContext = useContext(AuthContext);\n  const { user, loadUser, resendVerifyEmail, isAdmin } = authContext;\n  const paymentContext = useContext(PaymentContext);\n  const { loading, getUserPayments, userPayments } = paymentContext;\n\n  const getGreeting = () => {\n    const timeOfDayWords = new Date();\n    if (timeOfDayWords.getHours() >= 4 && timeOfDayWords.getHours() < 12) {\n      return \"Good Morning\";\n    } else if (\n      timeOfDayWords.getHours() >= 12 &&\n      timeOfDayWords.getHours() <= 16\n    ) {\n      return \"Good Day\";\n    } else if (\n      timeOfDayWords.getHours() >= 17 &&\n      timeOfDayWords.getHours() <= 23\n    ) {\n      return \"Good Evening\";\n    } else {\n      return \"Good Night\";\n    }\n  };\n\n  const [userID, setUserID] = useState({\n    id: \"\",\n  });\n\n  useEffect(() => {\n    loadUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    getStatData();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  useEffect(() => {\n    if (user && user._id) {\n      getUserPayments(user._id);\n      setUserID({ id: user._id });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [user, userPayments]);\n\n  const resendEmail = () => {\n    resendVerifyEmail(userID.id);\n  };\n\n  return (\n    <>\n      <h1 className=\"HomeGreeting\">\n        {getGreeting()}, {user && user.firstName}\n      </h1>\n\n      {loading && authContext.loading ? (\n        <ProgressIndicator />\n      ) : (\n        <>\n          {isAdmin ? (\n            <>\n              <NavButtonHome isAdmin={isAdmin} />\n              {stats && stats[1].statsPending !== 0 ? (\n                <h3 className=\"HomeGreetingSubtitle\">You have pending tasks</h3>\n              ) : (\n                <h3 className=\"HomeGreetingSubtitle\">You are all caught up</h3>\n              )}\n              <Grid container direction=\"row\" spacing={4} alignItems=\"stretch\">\n                <Grid item md={6} xs={12} sm={6}>\n                  <UserCountKPI key={1} />\n                </Grid>\n                <Grid item xs={12} md={6} sm={6}>\n                  <PaymentPendingAuthCountKPI key={2} />\n                </Grid>\n              </Grid>\n              <Grid container direction=\"row\" spacing={4} alignItems=\"stretch\">\n                <Grid item xs={12} md sm={6}>\n                  <PaymentPendingAuthValueKPI key={3} />\n                </Grid>\n                <Grid item xs={12} md sm={6}>\n                  <PaymentsAuthValueKPI />\n                </Grid>\n                <Grid item xs={12} md sm={6}>\n                  <PaymentsAuthValueYTDKPI />\n                </Grid>\n              </Grid>\n              <Grid container spacing={10}>\n                <Grid\n                  item\n                  xs={12}\n                  className={clsx(classes.footer, classes.left)}\n                ></Grid>\n              </Grid>\n            </>\n          ) : user && user.role === \"Module Owner\" ? (\n            <>\n              <NavButtonHome isAdmin={isAdmin} />\n              {stats && stats[1].statsPending !== 0 ? (\n                <h3 className=\"HomeGreetingSubtitle\">You have pending tasks</h3>\n              ) : (\n                <h3 className=\"HomeGreetingSubtitle\">You are all caught up</h3>\n              )}\n              <Grid container direction=\"row\" spacing={4} alignItems=\"stretch\">\n                <Grid item md={6} xs={12} sm={6}>\n                  <UserCountKPI key={1} />\n                </Grid>\n                <Grid item xs={12} md={6} sm={6}>\n                  <PaymentPendingAuthCountKPI key={2} />\n                </Grid>\n              </Grid>\n              <Grid container direction=\"row\" spacing={4} alignItems=\"stretch\">\n                <Grid item xs={12} md sm={6}>\n                  <PaymentPendingAuthValueKPI key={3} />\n                </Grid>\n                <Grid item xs={12} md sm={6}>\n                  <PaymentsAuthValueKPI />\n                </Grid>\n                <Grid item xs={12} md sm={6}>\n                  <PaymentsAuthValueYTDKPI />\n                </Grid>\n              </Grid>\n              <Grid container spacing={10}>\n                <Grid\n                  item\n                  xs={12}\n                  className={clsx(classes.footer, classes.left)}\n                ></Grid>\n              </Grid>\n            </>) : (\n            <>\n              {user && !user.emailVerified ? (\n                <MuiAlert\n                  style={{ marginBottom: \"20px\" }}\n                  severity=\"warning\"\n                  action={\n                    <Button onClick={resendEmail} color=\"inherit\" size=\"small\">\n                      Resend Email\n                    </Button>\n                  }\n                >\n                  <AlertTitle>Email Address Pending Validation</AlertTitle>\n                  Please click the verify link issued to {user.email} or click\n                  the resend email button\n                </MuiAlert>\n              ) : (\n                <NavButtonHome isAdmin={isAdmin} />\n              )}\n              {!loading && user && userPayments.payments.length ? (\n                <Grid container spacing={10}>\n                  <Grid item xs={12}>\n                    <UserPayments\n                      user={user}\n                      userPayments={userPayments.payments}\n                      userPaymentsLoading={loading}\n                    />\n                  </Grid>\n                </Grid>\n              ) : (\n                \"\"\n              )}\n              <Grid container spacing={10}>\n                <Grid\n                  item\n                  xs={12}\n                  className={clsx(classes.footer, classes.left)}\n                ></Grid>\n              </Grid>\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Home;\n","import { createContext } from \"react\";\n\nconst userAdminContext = createContext();\n\nexport default userAdminContext;\n","import React, { useState, useContext, useEffect } from \"react\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport { schoolMenu, statusMenu, roleMenu } from \"../../utils/dropdowns\";\nimport { useSnackbar } from \"notistack\";\n//UI\nimport Button from \"@material-ui/core/Button\";\nimport {\n  TextField,\n  Tooltip,\n  MenuItem,\n  FormLabel,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"47%\",\n  },\n  textLabel: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    width: \"26ch\",\n  },\n  textFieldFull: {\n    margin: theme.spacing(1),\n    width: \"97%\",\n  },\n  text: {\n    textAlign: \"center\",\n  },\n}));\n\nconst UserAdminAddModal = () => {\n  const classes = useStyles();\n  const authContext = useContext(AuthContext);\n  const { passwordResetRequest } = authContext;\n  const userAdminContext = useContext(UserAdminContext);\n  const {\n    addUser,\n    clearCurrent,\n    current,\n    updateUser,\n    setDialogClosed,\n    toggleDialog,\n    error,\n  } = userAdminContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setUser(current);\n    } else {\n      setUser({\n        address: [\n          {\n            street: \"\",\n            city: \"\",\n            county: \"\",\n            country: \"\",\n            postcode: \"\",\n          },\n        ],\n        contact: [\n          {\n            mobile: \"\",\n            landline: \"\",\n          },\n        ],\n        bank: [\n          {\n            bankName: \"\",\n            branchName: \"\",\n            sortCode: \"\",\n            accNumber: \"\",\n            buildingSocietyNumber: \"\",\n          },\n        ],\n        dob: \"\",\n        email: \"\",\n        emailTokenIssued: \"\",\n        emailTokenExpiry: \"\",\n        emailVerified: false,\n        emailVerifiedDate: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        nino: \"\",\n        password: \"\",\n        password1: \"\",\n        passwordResetToken: \"\",\n        passwordResetTokenExpiresAt: \"\",\n        pronoun: \"\",\n        payment: \"\",\n        payment1: \"\",\n        QUBID: \"\",\n        NSPID: \"\",\n        qubSchool: \"\",\n        role: \"\",\n        status: \"Pending\",\n        title: \"\",\n        taxDeclaration: [\n          {\n            employeeStatements_section1: \"A\",\n            employeeStatements_section2: \"1\",\n            employeeStatements_section3q1: \"false\",\n            employeeStatements_section3q2: \"false\",\n            employeeStatements_section3q3: \"false\",\n            employeeStatements_section3q4: \"1\",\n            employeeStatements_section3q5: \"false\",\n            signed: false,\n          },\n        ],\n      });\n    }\n  }, [userAdminContext, current]);\n\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const [user, setUser] = useState({\n    dob: \"\",\n    email: \"\",\n    emailVerificationToken: \"\",\n    emailVerificationTokenExpiresAt: \"\",\n    emailVerified: false,\n    userImg: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    password: \"\",\n    password1: \"\",\n    passwordResetToken: \"\",\n    passwordResetTokenExpiresAt: \"\",\n    payment: \"\",\n    payment1: \"\",\n    QUBID: \"\",\n    NSPID: \"\",\n    role: \"User\",\n    status: \"Pending\",\n    qubSchool: \"\",\n  });\n\n  const {\n    dob,\n    email,\n    firstName,\n    lastName,\n    password,\n    password1,\n    QUBID,\n    NSPID,\n    role,\n    status,\n    qubSchool,\n  } = user;\n\n  const onChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onCloseDialog = () => {\n    clearCurrent();\n    clearAll();\n    setDialogClosed();\n  };\n\n  const passwordReset = () => {\n    passwordResetRequest(current._id);\n    onCloseDialog();\n    enqueueSnackbar(`Password Reset Sent`, {\n      variant: \"success\",\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (!error) {\n      if (current === null) {\n        if (password !== password1) {\n          enqueueSnackbar(`Password Error! Check Passwords Match`, {\n            variant: \"error\",\n          });\n        } else {\n          addUser(user);\n          onCloseDialog();\n        }\n      } else {\n        updateUser(user);\n        onCloseDialog();\n        enqueueSnackbar(`User Updated`, {\n          variant: \"success\",\n        });\n      }\n      clearAll();\n    } else {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  const clearAll = () => {\n    clearCurrent();\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={toggleDialog}\n        onClose={onCloseDialog}\n        aria-labelledby=\"form-dialog-title\"\n      >\n        {current ? (\n          <DialogTitle id=\"form-dialog-title\">Edit a user</DialogTitle>\n        ) : (\n          <DialogTitle id=\"form-dialog-title\">Add a user</DialogTitle>\n        )}\n\n        <DialogContent>\n          {current ? (\n            <DialogContentText className={classes.text}>\n              To edit a new user please update the fields fields below\n            </DialogContentText>\n          ) : (\n            <DialogContentText className={classes.text}>\n              To add a new user please complete all fields below\n            </DialogContentText>\n          )}\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <div>\n              <TextField\n                className={classes.textField}\n                required\n                id=\"firstName\"\n                type=\"text\"\n                name=\"firstName\"\n                placeholder=\"First Name\"\n                value={firstName}\n                onChange={onChange}\n                label=\"First Name\"\n                variant=\"outlined\"\n              />\n              <TextField\n                className={classes.textField}\n                required\n                id=\"lastName\"\n                type=\"text\"\n                name=\"lastName\"\n                placeholder=\"Last Name\"\n                value={lastName}\n                onChange={onChange}\n                label=\"Last Name\"\n                variant=\"outlined\"\n              />\n              <TextField\n                required\n                className={classes.textFieldFull}\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Email Address\"\n                value={email}\n                onChange={onChange}\n                label=\"Email Address\"\n                variant=\"outlined\"\n              />\n              <TextField\n                required\n                className={classes.textField}\n                id=\"dob\"\n                type=\"date\"\n                name=\"dob\"\n                value={dob}\n                onChange={onChange}\n                label=\"Date Of Birth\"\n                variant=\"outlined\"\n              />\n              <div>\n                  <TextField\n                    className={classes.textField}\n                    required\n                    id=\"QUBID\"\n                    type=\"text\"\n                    name=\"QUBID\"\n                    placeholder=\"QUB ID\"\n                    value={QUBID}\n                    onChange={onChange}\n                    label=\"QUB ID\"\n                    variant=\"outlined\"\n                  />\n                <TextField\n                  className={classes.textField}\n                  required\n                  id=\"NSPID\"\n                  type=\"text\"\n                  name=\"NSPID\"\n                  placeholder=\"NSP ID\"\n                  value={NSPID}\n                  onChange={onChange}\n                  label=\"NSP ID\"\n                  variant=\"outlined\"\n                />\n              </div>\n              {current ? (\n                <TextField\n                  className={classes.textField}\n                  select\n                  variant=\"outlined\"\n                  id=\"status\"\n                  name=\"status\"\n                  label=\"Select Status\"\n                  value={status}\n                  onChange={onChange}\n                >\n                  {statusMenu.map((option) => (\n                    <MenuItem key={option.id} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              ) : (\n                <TextField\n                  className={classes.textField}\n                  disabled\n                  variant=\"outlined\"\n                  id=\"status\"\n                  name=\"status\"\n                  label=\"Select Status\"\n                  value=\"Pending\"\n                  onChange={onChange}\n                />\n              )}\n              <TextField\n                className={classes.textField}\n                select\n                variant=\"outlined\"\n                id=\"role\"\n                name=\"role\"\n                label=\"Select Role\"\n                value={role}\n                onChange={onChange}\n              >\n                {roleMenu.map((option) => (\n                  <MenuItem key={option.id} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n              <div>\n                <TextField\n                  className={classes.textFieldFull}\n                  select\n                  variant=\"outlined\"\n                  id=\"qubSchool\"\n                  name=\"qubSchool\"\n                  label=\"Select A School\"\n                  value={qubSchool}\n                  onChange={onChange}\n                >\n                  {schoolMenu.map((option) => (\n                    <MenuItem key={option.id} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n\n                {current ? (\n                  \"\"\n                ) : (\n                  <>\n                    <FormLabel className={classes.textLabel} component=\"legend\">\n                      Set Password\n                    </FormLabel>\n                    <TextField\n                      className={classes.textField}\n                      required\n                      id=\"password\"\n                      label=\"Password\"\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Set Password\"\n                      value={password}\n                      onChange={onChange}\n                      variant=\"outlined\"\n                    />\n                    <TextField\n                      className={classes.textField}\n                      required\n                      id=\"password1\"\n                      label=\"Password\"\n                      type=\"password\"\n                      name=\"password1\"\n                      placeholder=\"Repeat Password\"\n                      value={password1}\n                      onChange={onChange}\n                      variant=\"outlined\"\n                    />\n                  </>\n                )}\n              </div>\n            </div>\n            {current ? (\n              <>\n                <DialogActions>\n                  <Button\n                    onClick={passwordReset}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    Password Reset\n                  </Button>\n                  <Button\n                    onClick={onCloseDialog}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button onClick={onSubmit} variant=\"outlined\" color=\"primary\">\n                    Update\n                  </Button>\n                </DialogActions>\n              </>\n            ) : (\n              <>\n                <DialogActions>\n                  <Button\n                    onClick={onCloseDialog}\n                    variant=\"outlined\"\n                    color=\"primary\"\n                  >\n                    Cancel\n                  </Button>\n                  <Button onClick={onSubmit} variant=\"outlined\" color=\"primary\">\n                    Submit\n                  </Button>\n                </DialogActions>\n              </>\n            )}\n          </form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default UserAdminAddModal;\n","import React, {useState, useContext} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport CallMerge from '@material-ui/icons/CallMerge';\n\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\n// UI\nimport UserAdminAddModal from \"../userAdmin/UserAdminAddModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\n\nconst NavButtonUserMgmt = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false)\n  const userAdminContext = useContext(UserAdminContext);\n  const {\n    setDialogOpen,\n    setDialogClosed,\n    toggleDialog,\n  } = userAdminContext;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const openDialog = () => {\n    setDialogOpen()\n  }\n\n  const closeDialog = () => {\n    setDialogClosed()\n  }\n\n\n  function handleClick (e,id){\n    e.preventDefault();\n    if(id === 2){\n      openDialog()\n    }\n  };\n\n  const actions = [\n    { id: 1, icon: (<Link to=\"/\"><ArrowBackIcon /></Link>), name: \"Back\", },\n    { id: 2, icon: (<Link to=\"#\"><PersonAddIcon /></Link>), name: \"Manually Add User\" },\n    { id: 3, icon: (<Link to=\"/import\"><GroupAddIcon /></Link>), name: \"Import User File\" },\n    { id: 3, icon: (<Link to=\"/importNSP\"><CallMerge /></Link>), name: \"Import NSP Data File\" },\n  ];\n  \n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"User Management Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\"}}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={(e) => {\n              handleClick(e, action.id)\n         }}\n          />\n        ))}\n      </SpeedDial>\n      <>\n      <UserAdminAddModal open={toggleDialog} onClose={closeDialog}/>\n      </>\n    </div>\n  );\n};\n\nexport default NavButtonUserMgmt;\n","import React, { useContext, Fragment, useEffect } from \"react\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport UserContext from \"../../context/user/userContext\";\n//Components\nimport { Grid, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router-dom\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport Chip from \"@material-ui/core/Chip\";\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport { useSnackbar } from \"notistack\";\n// import CustomToolbar from \"../layouts/CustomToolbar\";\n\nconst UserAdmin = (props) => {\n  const userAdminContext = useContext(UserAdminContext);\n  const userContext = useContext(UserContext);\n  const { user } = props;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const {\n    users,\n    getUsers,\n    deleteUser,\n    loading,\n    error,\n    clearErrors,\n    setDialogOpen,\n    setCurrent,\n  } = userAdminContext;\n\n  const history = useHistory();\n\n  useEffect(() => {\n    getUsers();\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  if (users !== null && users.length === 0 && !loading) {\n    return <h4>Please add a user</h4>; // if user list is empty\n  }\n\n  const openDialog = (e, dataIndex) => {\n    e.preventDefault();\n    setCurrent(users[dataIndex]);\n    setDialogOpen();\n  };\n\n  const editProfile = (e, dataIndex) => {\n    userContext.setCurrent(users[dataIndex]);\n    let path = `/user/${users[dataIndex]._id}`;\n    history.push(path);\n  };\n\n  const CustomChip = ({ label, onDelete }) => {\n    return (\n      <Chip\n        variant=\"outlined\"\n        color=\"primary\"\n        label={label}\n        onDelete={onDelete}\n      />\n    );\n  };\n\n  const CustomFilterList = (props) => {\n    return <TableFilterList {...props} ItemComponent={CustomChip} />;\n  };\n\n  const options = {\n    filter: true,\n    filterType: \"dropdown\",\n    sortOrder: {\n      name: \"QUBID\",\n      direction: \"asc\",\n    },\n    downloadOptions: {\n      filterOptions: {\n        useDisplayedColumnsOnly: false,\n        useDisplayedRowsOnly: true,\n      },\n      filename: \"userAdminDownload.csv\",\n    },\n    rowsPerPageOptions: [5, 10, 20, 50, 100],\n    rowsPerPage: 10,\n    draggableColumns: {\n      enabled: true,\n    },\n    // customToolbar: () => {\n    //   return <CustomToolbar />;\n    // },\n    onRowsDelete: (rows) => {\n      if (rows.data.length <= 10) {\n        const usersToDelete = rows.data.map((d) => users[d.dataIndex]);\n        usersToDelete.forEach((a) => {\n          if (a._id === user._id) {\n            enqueueSnackbar(`You cannot delete your own record`, {\n              variant: \"error\",\n            });\n            clearErrors();\n          } else {\n            enqueueSnackbar(\n              `User ${a.firstName} ${a.lastName} (${a.QUBID}) deleted`,\n              {\n                variant: \"success\",\n              }\n            );\n            deleteUser(a._id);\n          }\n        });\n      } else {\n        userAdminContext.loading = true;\n        const usersToDelete = rows.data.map((d) => users[d.dataIndex]);\n        usersToDelete.forEach((a) => {\n          if (a._id === user._id) {\n            enqueueSnackbar(`You cannot delete your own record`, {\n              variant: \"error\",\n            });\n            clearErrors();\n          } else {\n            deleteUser(a._id);\n          }\n        });\n        userAdminContext.loading = false;\n      }\n    },\n  };\n\n  const columns = [\n    {\n      name: \"_id\",\n      label: \"UserId\",\n      options: {\n        filter: false,\n        display: false,\n        download: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"QUBID\",\n      label: \"QUBID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"firstName\",\n      label: \"First Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"lastName\",\n      label: \"Last Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"role\",\n      label: \"Role\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"status\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        sort: false,\n        empty: true,\n        download: false,\n        customBodyRenderLite: (dataIndex) => {\n          return (\n            <>\n              <Grid container direction=\"row\" alignContent=\"center\" alignItems=\"center\" justify=\"space-around\">\n                <Grid item align=\"center\">\n                  <EditIcon\n                    onClick={(e) => {\n                      openDialog(e, dataIndex);\n                    }}\n                  />\n                  <Typography align=\"center\" display=\"block\" variant=\"caption\">\n                    Edit\n                  </Typography>\n                </Grid>\n                <Typography align=\"center\">\n                  <PersonIcon\n                    onClick={(e) => {\n                      editProfile(e, dataIndex);\n                    }}\n                  />\n                  <Typography align=\"center\" display=\"block\" variant=\"caption\">\n                    View\n                  </Typography>\n                </Typography>\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <div>\n        <div>\n          {users !== null && !loading ? (\n            <Grid container spacing={4}>\n              <Grid item xs={12}>\n                <MUIDataTable\n                  title={\n                    <div>\n                      <Typography variant=\"h5\">User Account Admin</Typography>\n                      <Typography variant=\"caption\">\n                        Update basic user account information\n                      </Typography>\n                    </div>\n                  }\n                  data={users}\n                  columns={columns}\n                  options={options}\n                  components={{\n                    TableFilterList: CustomFilterList,\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <ProgressIndicator />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default UserAdmin;\n","import React, { useContext, useEffect } from \"react\";\n//Navigation\nimport NavButtonUserMgmt from \"../../components/layouts/NavButtonUserMgmt\";\n//Components\nimport UsersAdminTable from \"../userAdmin/UserAdmin\";\n//State\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst UserAdmin = (props) => {\n  const authContext = useContext(AuthContext);\n  const { loadUser, isAdmin, user, loading } = authContext;\n\n  useEffect(() => {\n    loadUser();\n    if (!loading && !isAdmin) {\n      props.history.push(\"/\");\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isAdmin, props.history]);\n  return (\n    <>\n      <NavButtonUserMgmt />\n      <div className=\"grid-1\">\n        <UsersAdminTable user={user} isAdmin={isAdmin}/>\n      </div>\n    </>\n  );\n};\n\nexport default UserAdmin;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Payments from \"@material-ui/icons/AccountBalanceWallet\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\nimport Reports from \"@material-ui/icons/Assessment\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\n// UI\nimport UserAdminAddModal from \"../userAdmin/UserAdminAddModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst NavButtonUserProfile = (props) => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const { isAdmin } = props;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  let actions;\n\n  // eslint-disable-next-line no-lone-blocks\n  {\n    isAdmin\n      ? (actions = [\n          {\n            id: 1,\n            icon: (\n              <Link to=\"/userAdmin\">\n                <ArrowBackIcon />\n              </Link>\n            ),\n            name: \"Back\",\n          },\n          {\n            id: 2,\n            icon: (\n              <Link to=\"/payments\">\n                <Payments />\n              </Link>\n            ),\n            name: \"Payments\",\n          },\n        ])\n      : (actions = [\n          {\n            id: 1,\n            icon: (\n              <Link to={\"/\"}>\n                <ArrowBackIcon />\n              </Link>\n            ),\n            name: \"Back\",\n          },\n        ]);\n  }\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"User Profile Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={handleClose}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n\nexport default NavButtonUserProfile;\n","import React, { useContext, useEffect, useState, Fragment } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport moment from \"moment\";\n//State\nimport UserContext from \"../../context/user/userContext\";\nimport {\n  titlesMenu,\n  pronounMenu,\n  countryMenu,\n  Counties,\n} from \"../../utils/dropdowns\";\n//Components\nimport {\n  Radio,\n  FormHelperText,\n  RadioGroup,\n  FormControlLabel,\n  FormControl,\n  Typography,\n  Tooltip,\n  Button,\n  Grid,\n  Box,\n  TextField,\n  Tabs,\n  Tab,\n  Checkbox,\n  Switch,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport BusinessCenterIcon from \"@material-ui/icons/BusinessCenter\";\nimport clsx from \"clsx\";\nimport { useSnackbar } from \"notistack\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    fontSize: \"1.2rem\",\n  },\n  textFieldFull: {\n    margin: theme.spacing(1),\n    width: \"97%\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    margin: theme.spacing(1),\n    width: \"97%\",\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"47%\",\n  },\n  textLabel: {\n    marginLeft: theme.spacing(1),\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(1),\n    width: \"26ch\",\n  },\n  text: {\n    textAlign: \"center\",\n    marginBottom: 30,\n  },\n  taxText: {\n    textAlign: \"center\",\n    fontWeight: \"bold\",\n  },\n  taxTextSpacingTop: {\n    marginTop: 30,\n  },\n  taxTextSpacingBottom: {\n    marginBottom: 30,\n  },\n  Subtext: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst User = (props) => {\n  const classes = useStyles();\n  const { id } = useParams();\n  const userContext = useContext(UserContext);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { isAdmin } = props;\n  const {\n    user,\n    current,\n    getUser,\n    setCurrent,\n    updateUser,\n  } = userContext;\n\n  useEffect(() => {\n    if (current !== null) {\n      setData(current);\n    } else {\n      getUser(id);\n      setCurrent(user);\n    }\n  }, [userContext, current]);\n\n  const [password, setPassword] = useState({\n    newPassword: \"\",\n    confirmPassword: \"\",\n    currentPassword: \"\",\n  });\n\n  const [data, setData] = useState({\n    address: [\n      {\n        street: \"\",\n        city: \"\",\n        county: \"\",\n        country: \"\",\n        postcode: \"\",\n      },\n    ],\n    contact: [\n      {\n        mobile: \"\",\n        landline: \"\",\n      },\n    ],\n    bank: [\n      {\n        bankName: \"\",\n        branchName: \"\",\n        sortCode: \"\",\n        accNumber: \"\",\n        buildingSocietyNumber: \"\",\n      },\n    ],\n    dob: \"\",\n    email: \"\",\n    emailTokenIssued: \"\",\n    emailTokenExpiry: \"\",\n    emailVerified: false,\n    emailVerifiedDate: \"\",\n    firstName: \"\",\n    lastName: \"\",\n    nino: \"\",\n    password: \"\",\n    password1: \"\",\n    passwordResetToken: \"\",\n    passwordResetTokenExpiresAt: \"\",\n    pronoun: \"\",\n    payment: \"\",\n    payment1: \"\",\n    QUBID: \"\",\n    qubSchool: \"\",\n    role: \"\",\n    status: \"\",\n    title: \"\",\n    taxDeclaration: [\n      {\n        employeeStatements_section1: \"A\",\n        employeeStatements_section2: 1,\n        employeeStatements_section3q1: false,\n        employeeStatements_section3q2: false,\n        employeeStatements_section3q3: false,\n        employeeStatements_section3q4: 1,\n        employeeStatements_section3q5: false,\n        signed: false,\n      },\n    ],\n  });\n\n  const [tab, setTab] = useState(0);\n  const handleChangeTab = (event, newValue) => {\n    setTab(newValue);\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    updateUser(data);\n    enqueueSnackbar(\"User Profile Updated\", {\n      variant: \"success\",\n    });\n  };\n  const handleUpdatePassword = () => {\n    console.log(\"Update Password Test\");\n  };\n  const handleChangePassword = (e) => {\n    setPassword({\n      ...password,\n      [e.target.name]: e.target.value,\n    });\n  };\n  const onChange = (e, i) => {\n    switch (i) {\n      case 1:\n        data.address[0][e.target.name] = e.target.value;\n        setData({ ...data });\n        break;\n      case 2:\n        data.bank[0][e.target.name] = e.target.value;\n        setData({ ...data });\n        break;\n      case 3:\n        data.contact[0][e.target.name] = e.target.value;\n        setData({ ...data });\n        break;\n      case 4:\n        data.taxDeclaration[0][e.target.name] = e.target.value;\n        setData({ ...data });\n        break;\n      default:\n        setData({\n          ...data,\n          [e.target.name]: e.target.value,\n        });\n    }\n  };\n  const handleSwitchChange = (e) => {\n    data.taxDeclaration[0][e.target.name] = e.target.checked;\n    setData({ ...data });\n  };\n\n  return (\n    <Fragment>\n      <div>\n        <Grid container spacing={3}>\n          <Grid item xs={12}>\n            <Box display={\"flex\"} justifyContent={\"center\"}>\n              <Tabs\n                indicatorColor=\"primary\"\n                textColor=\"primary\"\n                value={tab}\n                onChange={handleChangeTab}\n              >\n                <Tab label=\"ACCOUNT\" icon={<AccountBoxIcon />} />\n                <Tab label=\"PROFILE\" icon={<PersonIcon />} />\n                <Tab label=\"TAX\" icon={<BusinessCenterIcon />} />\n                {/* <Tab label=\"CHANGE PASSWORD\" icon={<LockIcon />} /> */}\n                {/* <Tab label=\"SETTINGS\" icon={<SettingsIcon />} /> */}\n              </Tabs>\n            </Box>\n          </Grid>\n          <Grid item xs={12}>\n            <Grid item justify={\"center\"} container>\n              <Box display={\"flex\"} flexDirection={\"column\"} width={600}>\n                <form>\n                  {tab === 0 ? (\n                    <>\n                      <Typography\n                        variant=\"h5\"\n                        weight=\"medium\"\n                        className={classes.text}\n                      >\n                        Edit your DemPay account details\n                      </Typography>\n                      <div>\n                        <TextField\n                          className={classes.textField}\n                          disabled\n                          id=\"QUBID\"\n                          type=\"text\"\n                          name=\"QUBID\"\n                          value={data.QUBID}\n                          onChange={onChange}\n                          label=\"QUB ID\"\n                          variant=\"outlined\"\n                        />\n                        {current && current.status !== \"Pending\" ? (\n                          <Tooltip\n                            title={`Verified on: ${moment(\n                              data.emailVerifiedDate\n                            ).format(\"DD/MM/YYYY h:mm A\")}`}\n                            arrow\n                          >\n                            <TextField\n                              className={classes.textField}\n                              disabled\n                              variant=\"outlined\"\n                              id=\"status\"\n                              name=\"status\"\n                              label=\"Status\"\n                              value={data.status}\n                              onChange={onChange}\n                            />\n                          </Tooltip>\n                        ) : (\n                          <TextField\n                            error\n                            className={classes.textField}\n                            disabled\n                            variant=\"outlined\"\n                            id=\"status\"\n                            name=\"status\"\n                            label=\"Status\"\n                            value={data.status}\n                            onChange={onChange}\n                            helperText=\"Please verify your email\"\n                          />\n                        )}\n                      </div>\n                      <TextField\n                        disabled\n                        className={classes.textFieldFull}\n                        id=\"email\"\n                        type=\"email\"\n                        name=\"email\"\n                        placeholder=\"Email Address\"\n                        value={data.email}\n                        onChange={onChange}\n                        label=\"Email Address\"\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        disabled\n                        className={classes.textFieldFull}\n                        variant=\"outlined\"\n                        id=\"role\"\n                        name=\"role\"\n                        label=\"Role\"\n                        value={data.role}\n                        onChange={onChange}\n                      />\n                      <TextField\n                        disabled\n                        className={classes.textFieldFull}\n                        variant=\"outlined\"\n                        id=\"qubSchool\"\n                        name=\"qubSchool\"\n                        label=\"QUB School\"\n                        value={data.qubSchool}\n                        onChange={onChange}\n                      />\n                    </>\n                  ) : tab === 1 ? (\n                    <>\n                      <Typography\n                        variant=\"h5\"\n                        weight=\"medium\"\n                        className={classes.text}\n                      >\n                        Edit your personal information\n                      </Typography>\n                      <Typography\n                        variant=\"h6\"\n                        weight=\"medium\"\n                        className={classes.Subtext}\n                      >\n                        Personal information\n                      </Typography>\n                      <div>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          select\n                          variant=\"outlined\"\n                          id=\"title\"\n                          name=\"title\"\n                          label=\"Title\"\n                          value={data.title}\n                          onChange={(e) => onChange(e)}\n                        >\n                          {titlesMenu.map((option) => (\n                            <MenuItem key={option.id} value={option.value}>\n                              {option.label}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          select\n                          variant=\"outlined\"\n                          id=\"pronoun\"\n                          name=\"pronoun\"\n                          label=\"Pronoun\"\n                          value={data.pronoun}\n                          onChange={(e) => onChange(e)}\n                        >\n                          {pronounMenu.map((option) => (\n                            <MenuItem key={option.id} value={option.value}>\n                              {option.label}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                      </div>\n                      <div>\n                        <TextField\n                          className={classes.textField}\n                          required\n                          id=\"firstName\"\n                          type=\"text\"\n                          name=\"firstName\"\n                          placeholder=\"First Name\"\n                          value={data.firstName}\n                          onChange={(e) => onChange(e)}\n                          label=\"First Name\"\n                          variant=\"outlined\"\n                        />\n                        <TextField\n                          className={classes.textField}\n                          required\n                          id=\"lastName\"\n                          type=\"text\"\n                          name=\"lastName\"\n                          placeholder=\"Last Name\"\n                          value={data.lastName}\n                          onChange={(e) => onChange(e)}\n                          label=\"Last Name\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n                      <div>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          id=\"dob\"\n                          type=\"date\"\n                          name=\"dob\"\n                          value={data.dob}\n                          onChange={(e) => onChange(e)}\n                          label=\"Date Of Birth\"\n                          variant=\"outlined\"\n                        />\n                        <TextField\n                          className={classes.textField}\n                          required\n                          id=\"nino\"\n                          type=\"text\"\n                          name=\"nino\"\n                          placeholder=\"XX000000X\"\n                          value={data.nino}\n                          onChange={(e) => onChange(e)}\n                          label=\"National Insurance\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n                      <div>\n                        <TextField\n                          className={classes.textField}\n                          id=\"mobile\"\n                          type=\"tel\"\n                          name=\"mobile\"\n                          placeholder=\"07000 000000\"\n                          value={data.contact[0].mobile}\n                          onChange={(e) => onChange(e, 3)}\n                          label=\"Mobile Number\"\n                          variant=\"outlined\"\n                        />\n                        <TextField\n                          className={classes.textField}\n                          id=\"landline\"\n                          type=\"tel\"\n                          name=\"landline\"\n                          placeholder=\"020 0000 0000\"\n                          value={data.contact[0].landline}\n                          onChange={(e) => onChange(e, 3)}\n                          label=\"Landline Number\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n                      <Typography\n                        variant=\"h6\"\n                        weight=\"medium\"\n                        className={classes.Subtext}\n                      >\n                        Address information\n                      </Typography>\n                      <TextField\n                        required\n                        className={classes.textFieldFull}\n                        id=\"street\"\n                        type=\"text\"\n                        name=\"street\"\n                        placeholder=\"Street Address\"\n                        value={data.address[0].street}\n                        onChange={(e) => onChange(e, 1)}\n                        label=\"Street Address\"\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        required\n                        className={classes.textFieldFull}\n                        id=\"city\"\n                        type=\"text\"\n                        name=\"city\"\n                        placeholder=\"City\"\n                        value={data.address[0].city}\n                        onChange={(e) => onChange(e, 1)}\n                        label=\"City\"\n                        variant=\"outlined\"\n                      />\n                      <div>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          select\n                          variant=\"outlined\"\n                          id=\"county\"\n                          name=\"county\"\n                          label=\"County\"\n                          value={data.address[0].county}\n                          onChange={(e) => onChange(e, 1)}\n                        >\n                          {Counties.map((option) => (\n                            <MenuItem key={option.id} value={option.name}>\n                              {option.name}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          select\n                          variant=\"outlined\"\n                          id=\"country\"\n                          name=\"country\"\n                          label=\"Country\"\n                          value={data.address[0].country}\n                          onChange={(e) => onChange(e, 1)}\n                        >\n                          {countryMenu.map((option) => (\n                            <MenuItem key={option.id} value={option.value}>\n                              {option.label}\n                            </MenuItem>\n                          ))}\n                        </TextField>\n                      </div>\n                      <TextField\n                        required\n                        className={classes.textField}\n                        id=\"postcode\"\n                        type=\"text\"\n                        name=\"postcode\"\n                        placeholder=\"Postcode\"\n                        value={data.address[0].postcode}\n                        onChange={(e) => onChange(e, 1)}\n                        label=\"Postcode\"\n                        variant=\"outlined\"\n                      />\n                      <Typography\n                        variant=\"h6\"\n                        weight=\"medium\"\n                        className={classes.Subtext}\n                      >\n                        Bank Information\n                      </Typography>\n                      <TextField\n                        required\n                        className={classes.textFieldFull}\n                        id=\"bankName\"\n                        type=\"text\"\n                        name=\"bankName\"\n                        placeholder=\"Bank Name\"\n                        value={data.bank[0].bankName}\n                        onChange={(e) => onChange(e, 2)}\n                        label=\"Bank Name\"\n                        variant=\"outlined\"\n                      />\n                      <TextField\n                        required\n                        className={classes.textFieldFull}\n                        id=\"branchName\"\n                        type=\"text\"\n                        name=\"branchName\"\n                        placeholder=\"Branch Name\"\n                        value={data.bank[0].branchName}\n                        onChange={(e) => onChange(e, 2)}\n                        label=\"Branch Name\"\n                        variant=\"outlined\"\n                      />\n                      <div>\n                        <TextField\n                          required\n                          className={classes.textField}\n                          id=\"sortCode\"\n                          type=\"text\"\n                          name=\"sortCode\"\n                          placeholder=\"Sort Code\"\n                          value={data.bank[0].sortCode}\n                          onChange={(e) => onChange(e, 2)}\n                          label=\"Sort Code\"\n                          variant=\"outlined\"\n                        />\n                        <TextField\n                          required\n                          className={classes.textField}\n                          id=\"accNumber\"\n                          type=\"text\"\n                          name=\"accNumber\"\n                          placeholder=\"Account Number\"\n                          value={data.bank[0].accNumber}\n                          onChange={(e) => onChange(e, 2)}\n                          label=\"Account Number\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n                      <TextField\n                        className={classes.textFieldFull}\n                        id=\"buildingSocietyNumber\"\n                        type=\"text\"\n                        name=\"buildingSocietyNumber\"\n                        placeholder=\"Building Society Number\"\n                        value={data.bank[0].buildingSocietyNumber}\n                        onChange={(e) => onChange(e, 2)}\n                        label=\"Building Society Number\"\n                        variant=\"outlined\"\n                      />\n                      <Box>\n                        <Button\n                          size=\"large\"\n                          fullWidth={true}\n                          className={classes.button}\n                          onClick={onSubmit}\n                          color=\"secondary\"\n                          variant=\"contained\"\n                        >\n                          Save\n                        </Button>\n                      </Box>\n                    </>\n                  ) : tab === 2 ? (\n                    <>\n                      <Typography\n                        variant=\"h5\"\n                        weight=\"medium\"\n                        className={classes.text}\n                      >\n                        Tax Declaration\n                      </Typography>\n                      <Typography className={classes.taxText}>\n                        <h2>Section 1</h2>\n                        <h3>Employee Statement</h3>\n                        <p>\n                          You need to select only one of the following\n                          statements A, B or C, if you do not have a P45 or the\n                          leaving date on your P45 is before last 6th April.\n                        </p>\n                      </Typography>\n                      <FormControl\n                        disabled={data.taxDeclaration[0].signed}\n                        component=\"fieldset\"\n                        error={\n                          data.taxDeclaration[0].signed &&\n                          data.taxDeclaration[0].employeeStatements_section1 ===\n                            \"\"\n                        }\n                      >\n                        <RadioGroup\n                          className={clsx(\n                            classes.taxTextSpacingTop,\n                            classes.taxTextSpacingBottom\n                          )}\n                          name=\"employeeStatements_section1\"\n                          value={\n                            data.taxDeclaration[0].employeeStatements_section1\n                          }\n                          onChange={(e) => onChange(e, 4)}\n                        >\n                          <Grid\n                            className={classes.taxAlign}\n                            xs={12}\n                            container\n                            spacing={3}\n                            alignItems={\"center\"}\n                          >\n                            <Grid item xs={1}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                A\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                This is my first job since last 6 April and I\n                                have not been receiving taxable Jobseeker’s\n                                Allowance, Employment and Support Allowance,\n                                taxable A Incapacity Benefit, State or\n                                Occupational Pension.\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <FormControlLabel\n                                value=\"A\"\n                                control={<Radio />}\n                                label=\"A\"\n                              />\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section1 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                B\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                This is now my only job but since last 6 April I\n                                have had another job, or received taxable\n                                Jobseeker’s Allowance, Employment and Support\n                                Allowance or taxable Incapacity Benefit. I do\n                                not receive a State or B Occupational Pension.\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <FormControlLabel\n                                value=\"B\"\n                                control={<Radio />}\n                                label=\"B\"\n                              />\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section1 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                C\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                As well as my new job, I have another job or\n                                receive a State or Occupational Pension.\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <FormControlLabel\n                                value=\"C\"\n                                control={<Radio />}\n                                label=\"C\"\n                              />\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section1 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                          </Grid>\n                        </RadioGroup>\n                      </FormControl>\n                      <hr></hr>\n                      <Typography\n                        className={clsx(\n                          classes.taxText,\n                          classes.taxTextSpacingTop\n                        )}\n                      >\n                        <h2>Section 2</h2>\n                        <h3>Employee Statement</h3>\n                        <p>Please select the statement which applies to you</p>\n                      </Typography>\n\n                      <FormControl\n                        disabled={data.taxDeclaration[0].signed}\n                        component=\"fieldset\"\n                        error={\n                          data.taxDeclaration[0].signed &&\n                          data.taxDeclaration[0].employeeStatements_section2 ===\n                            \"\"\n                        }\n                      >\n                        <RadioGroup\n                          className={clsx(\n                            classes.taxTextSpacingTop,\n                            classes.taxTextSpacingBottom\n                          )}\n                          name=\"employeeStatements_section2\"\n                          value={\n                            data.taxDeclaration[0].employeeStatements_section2\n                          }\n                          onChange={(e) => onChange(e, 4)}\n                        >\n                          <Grid\n                            className={classes.taxAlign}\n                            xs={12}\n                            container\n                            spacing={3}\n                            alignItems={\"center\"}\n                          >\n                            <Grid item xs={1}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                1\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                I am an EU/EEA/Swiss National\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <FormControlLabel\n                                value=\"1\"\n                                control={<Radio />}\n                                label=\"1\"\n                              />\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section2 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                2\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={10}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                I am a Non-EU/EEA/Swiss National (I agree to the\n                                terms and conditions below)\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={1}>\n                              <FormControlLabel\n                                value=\"2\"\n                                control={<Radio />}\n                                label=\"2\"\n                              />\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section2 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                            <Grid item xs={12}>\n                              <Typography variant=\"p\" weight=\"medium\">\n                                <p>\n                                  Please Note: Current Tier 4 students cannot be\n                                  engaged via the NSP payroll. If you are a Tier\n                                  4 student, please contact OnCampus jobs ext:\n                                  3953 in the first instance.\n                                </p>\n                                <br></br>\n                                <p>\n                                  If you are subject to any other restrictions\n                                  on your visa, completion of this form confirms\n                                  you fully understand any restrictions on\n                                  working hours of your immigration permission\n                                  and you agree to abide by those restrictions\n                                </p>\n                              </Typography>\n                            </Grid>\n                          </Grid>\n                        </RadioGroup>\n                      </FormControl>\n                      <hr></hr>\n                      <Typography\n                        className={clsx(\n                          classes.taxText,\n                          classes.taxTextSpacingTop\n                        )}\n                      >\n                        <h2>Section 3</h2>\n                        <p>Student Loan Declaration</p>\n                        <p>\n                          Please read the following questions carefully and\n                          select the statement which applies to you.\n                        </p>\n                      </Typography>\n                      <FormControl\n                        disabled={data.taxDeclaration[0].signed}\n                        component=\"fieldset\"\n                        error={\n                          (data.taxDeclaration[0].signed &&\n                            data.taxDeclaration[0]\n                              .employeeStatements_section1 === \"\") ||\n                          data.taxDeclaration[0].employeeStatements_section2 ===\n                            \"\" ||\n                          data.taxDeclaration[0]\n                            .employeeStatements_section3q1 === \"\" ||\n                          (data.taxDeclaration[0]\n                            .employeeStatements_section3q1 === \"true\" &&\n                            data.taxDeclaration[0]\n                              .employeeStatements_section3q2 === \"\") ||\n                          (data.taxDeclaration[0]\n                            .employeeStatements_section3q2 === \"true\" &&\n                            data.taxDeclaration[0]\n                              .employeeStatements_section3q3 === \"\") ||\n                          (data.taxDeclaration[0]\n                            .employeeStatements_section3q3 === \"false\" &&\n                            data.taxDeclaration[0]\n                              .employeeStatements_section3q4 === \"\") ||\n                          data.taxDeclaration[0]\n                            .employeeStatements_section3q5 === \"\"\n                        }\n                      >\n                        <RadioGroup\n                          className={clsx(\n                            classes.taxTextSpacingTop,\n                            classes.taxTextSpacingBottom\n                          )}\n                          name=\"employeeStatements_section3q1\"\n                          value={\n                            data.taxDeclaration[0].employeeStatements_section3q1\n                          }\n                          onChange={(e) => onChange(e, 4)}\n                        >\n                          <Grid\n                            className={classes.taxAlign}\n                            xs={12}\n                            container\n                            spacing={3}\n                            alignItems={\"center\"}\n                          >\n                            <Grid item xs={12}>\n                              <Typography weight=\"medium\">\n                                <p>Question 1:</p>\n                                <p>\n                                  Have you left full-time education before the\n                                  last 6th April?\n                                </p>\n                              </Typography>\n                              <FormHelperText>\n                                {data.taxDeclaration[0].signed &&\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section3q1 === \"\"\n                                  ? \"Required\"\n                                  : \"\"}\n                              </FormHelperText>\n                            </Grid>\n                            <Grid item xs={6}>\n                              <FormControlLabel\n                                value={\"true\"}\n                                control={<Radio />}\n                                label=\"Yes\"\n                              />\n                              <Typography variant=\"p\" weight=\"medium\">\n                                (Go to Question 2)\n                              </Typography>\n                            </Grid>\n                            <Grid item xs={6}>\n                              <FormControlLabel\n                                value={\"false\"}\n                                control={<Radio />}\n                                label=\"No\"\n                              />\n                              <Typography variant=\"p\" weight=\"medium\">\n                                (Sign the declaration below)\n                              </Typography>\n                            </Grid>\n                          </Grid>\n                        </RadioGroup>\n                        {data.taxDeclaration[0]\n                          .employeeStatements_section3q1 === \"true\" ? (\n                          <>\n                            <RadioGroup\n                              className={clsx(classes.taxTextSpacingBottom)}\n                              name=\"employeeStatements_section3q2\"\n                              value={\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section3q2\n                              }\n                              onChange={(e) => onChange(e, 4)}\n                            >\n                              <Grid\n                                className={classes.taxAlign}\n                                xs={12}\n                                container\n                                spacing={3}\n                                alignItems={\"center\"}\n                              >\n                                <Grid item xs={12}>\n                                  <Typography variant=\"p\" weight=\"medium\">\n                                    <p>Question 2:</p>\n                                    <p>\n                                      Do you have a Student Loan which is not\n                                      fully repaid?\n                                    </p>\n                                  </Typography>\n                                  <FormHelperText>\n                                    {data.taxDeclaration[0].signed &&\n                                    data.taxDeclaration[0]\n                                      .employeeStatements_section3q2 === \"\"\n                                      ? \"Required\"\n                                      : \"\"}\n                                  </FormHelperText>\n                                </Grid>\n                                <Grid item xs={6}>\n                                  <FormControlLabel\n                                    value=\"true\"\n                                    control={<Radio />}\n                                    label=\"Yes\"\n                                  />\n                                  <Typography variant=\"p\" weight=\"medium\">\n                                    (Go to Question 3)\n                                  </Typography>\n                                </Grid>\n                                <Grid item xs={6}>\n                                  <FormControlLabel\n                                    value=\"false\"\n                                    control={<Radio />}\n                                    label=\"No\"\n                                  />\n                                  <Typography variant=\"p\" weight=\"medium\">\n                                    (Sign the declaration below)\n                                  </Typography>\n                                </Grid>\n                              </Grid>\n                            </RadioGroup>\n                            {data.taxDeclaration[0]\n                              .employeeStatements_section3q2 === \"true\" ? (\n                              <>\n                                <RadioGroup\n                                  className={clsx(classes.taxTextSpacingBottom)}\n                                  name=\"employeeStatements_section3q3\"\n                                  value={\n                                    data.taxDeclaration[0]\n                                      .employeeStatements_section3q3\n                                  }\n                                  onChange={(e) => onChange(e, 4)}\n                                >\n                                  <Grid\n                                    className={classes.taxAlign}\n                                    xs={12}\n                                    container\n                                    spacing={3}\n                                    alignItems={\"center\"}\n                                  >\n                                    <Grid item xs={12}>\n                                      <Typography weight=\"medium\">\n                                        <p>Question 3:</p>\n                                        <p>\n                                          Are you repaying your Student Loan\n                                          direct to the Student Loan Company by\n                                          agreed monthly payments?\n                                        </p>\n                                      </Typography>\n                                      <FormHelperText>\n                                        {data.taxDeclaration[0].signed &&\n                                        data.taxDeclaration[0]\n                                          .employeeStatements_section3q3 === \"\"\n                                          ? \"Required\"\n                                          : \"\"}\n                                      </FormHelperText>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                      <FormControlLabel\n                                        value=\"true\"\n                                        control={<Radio />}\n                                        label=\"Yes\"\n                                      />\n                                      <Typography variant=\"p\" weight=\"medium\">\n                                        (Sign the declaration below)\n                                      </Typography>\n                                    </Grid>\n                                    <Grid item xs={6}>\n                                      <FormControlLabel\n                                        value=\"false\"\n                                        control={<Radio />}\n                                        label=\"No\"\n                                      />\n                                      <Typography variant=\"p\" weight=\"medium\">\n                                        (Go to Question 4)\n                                      </Typography>\n                                    </Grid>\n                                  </Grid>\n                                </RadioGroup>\n                                {data.taxDeclaration[0]\n                                  .employeeStatements_section3q3 === \"false\" ? (\n                                  <>\n                                    <RadioGroup\n                                      className={clsx(\n                                        classes.taxTextSpacingBottom\n                                      )}\n                                      name=\"employeeStatements_section3q4\"\n                                      value={\n                                        data.taxDeclaration[0]\n                                          .employeeStatements_section3q4\n                                      }\n                                      onChange={(e) => onChange(e, 4)}\n                                    >\n                                      <Grid\n                                        className={classes.taxAlign}\n                                        xs={12}\n                                        container\n                                        spacing={3}\n                                        alignItems={\"center\"}\n                                      >\n                                        <Grid item xs={12}>\n                                          <Typography weight=\"medium\">\n                                            <p>Question 4:</p>\n                                            <p>\n                                              Student Load Plans - Please select\n                                              Plan 1 or Plan 2\n                                            </p>\n                                            <em>\n                                              <div\n                                                style={{\n                                                  paddingLeft: 30,\n                                                  paddingTop: 10,\n                                                }}\n                                              >\n                                                <p>\n                                                  Note: You will have a Plan 1\n                                                  student loan if:\n                                                </p>\n                                                <ol>\n                                                  <li>\n                                                    You lived in Scotland or\n                                                    Northern Ireland when you\n                                                    started your course, or\n                                                  </li>\n                                                  <li>\n                                                    You lived in England or\n                                                    Wales and started your\n                                                    course before 1st September\n                                                    2012\n                                                  </li>\n                                                </ol>\n                                              </div>\n                                            </em>\n                                            <FormHelperText>\n                                              {data.taxDeclaration[0].signed &&\n                                              data.taxDeclaration[0]\n                                                .employeeStatements_section3q4 ===\n                                                \"\"\n                                                ? \"Required\"\n                                                : \"\"}\n                                            </FormHelperText>\n                                          </Typography>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                          <FormControlLabel\n                                            value=\"1\"\n                                            control={<Radio />}\n                                            label=\"Plan 1\"\n                                          />\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                          <FormControlLabel\n                                            value=\"2\"\n                                            control={<Radio />}\n                                            label=\"Plan 2\"\n                                          />\n                                        </Grid>\n                                      </Grid>\n                                    </RadioGroup>\n                                    <RadioGroup\n                                      className={clsx(\n                                        classes.taxTextSpacingBottom\n                                      )}\n                                      name=\"employeeStatements_section3q5\"\n                                      checked={\n                                        data.taxDeclaration[0]\n                                          .employeeStatements_section3q5\n                                      }\n                                      onChange={(e) => onChange(e, 4)}\n                                    >\n                                      <Grid\n                                        className={classes.taxAlign}\n                                        xs={12}\n                                        container\n                                        spacing={3}\n                                        alignItems={\"center\"}\n                                      >\n                                        <Grid item xs={12}>\n                                          <Typography weight=\"medium\">\n                                            <p>Question 5:</p>\n                                            <p>\n                                              Post Graduate Student Loan - Have\n                                              you left full-time education\n                                              before the last 6th April and have\n                                              a Post Graduate Student Loan which\n                                              is not fully repaid which is not\n                                              being repaid via Direct Debit to\n                                              the Student Loan Company?\n                                            </p>\n                                            <FormHelperText>\n                                              {data.taxDeclaration[0].signed &&\n                                              data.taxDeclaration[0]\n                                                .employeeStatements_section3q5 ===\n                                                \"\"\n                                                ? \"Required\"\n                                                : \"\"}\n                                            </FormHelperText>\n                                          </Typography>\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                          <FormControlLabel\n                                            value=\"Yes\"\n                                            control={<Radio />}\n                                            label=\"Yes\"\n                                          />\n                                        </Grid>\n                                        <Grid item xs={6}>\n                                          <FormControlLabel\n                                            value=\"No\"\n                                            control={<Radio />}\n                                            label=\"No\"\n                                          />\n                                        </Grid>\n                                      </Grid>\n                                    </RadioGroup>\n                                  </>\n                                ) : (\n                                  \"\"\n                                )}\n                              </>\n                            ) : (\n                              \"\"\n                            )}\n                          </>\n                        ) : (\n                          \"\"\n                        )}\n                      </FormControl>\n                      {isAdmin ? (\n                        <>\n                          <Box\n                            display={\"flex\"}\n                            mt={2}\n                            mb={2}\n                            alignItems={\"center\"}\n                          >\n                            <Typography weight={\"medium\"}>\n                              {\n                                \"I confirm the data provided is correct & hereby sign this declaration\"\n                              }\n                            </Typography>\n                            <Switch\n                              checked={data.taxDeclaration[0].signed}\n                              onChange={(e) => handleSwitchChange(e, 4)}\n                              name=\"signed\"\n                              color={\"secondary\"}\n                            />\n                          </Box>\n                          <Box>\n                            <Button\n                              disabled={\n                                !data.taxDeclaration[0].signed ||\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section1 === \"\" ||\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section2 === \"\" ||\n                                data.taxDeclaration[0]\n                                  .employeeStatements_section3q1 === \"\" ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q1 === \"true\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q2 === \"\") ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q2 === \"true\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q3 === \"\") ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q3 === \"false\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q4 === \"\") ||\n                                (data.taxDeclaration[0]\n                                  .employeeStatements_section3q4 !== \"\" &&\n                                  data.taxDeclaration[0]\n                                    .employeeStatements_section3q5 === \"\")\n                              }\n                              size=\"large\"\n                              fullWidth={true}\n                              className={classes.button}\n                              onClick={(e) => onSubmit(e)}\n                              color=\"secondary\"\n                              variant=\"contained\"\n                            >\n                              Save\n                            </Button>\n                          </Box>\n                        </>\n                      ) : (\n                        <>\n                          {data.taxDeclaration[0].signed ? (\n                            <>\n                              <Box\n                                display={\"flex\"}\n                                mt={2}\n                                mb={2}\n                                alignItems={\"center\"}\n                              >\n                                <Typography weight={\"medium\"}>\n                                  {\n                                    \"I confirm the data provided is correct & hereby sign this declaration\"\n                                  }\n                                </Typography>\n                                <Switch\n                                  disabled={\n                                    data.taxDeclaration[0].signed ? true : false\n                                  }\n                                  checked={data.taxDeclaration[0].signed}\n                                  onChange={(e) => handleSwitchChange(e, 4)}\n                                  name=\"signed\"\n                                  color={\"secondary\"}\n                                />\n                              </Box>\n                              <Box>\n                                <Button\n                                  disabled={\n                                    !data.taxDeclaration[0].signed ||\n                                    data.taxDeclaration[0]\n                                      .employeeStatements_section1 === \"\" ||\n                                    data.taxDeclaration[0]\n                                      .employeeStatements_section2 === \"\" ||\n                                    data.taxDeclaration[0]\n                                      .employeeStatements_section3q1 === \"\" ||\n                                    (data.taxDeclaration[0]\n                                      .employeeStatements_section3q1 ===\n                                      \"true\" &&\n                                      data.taxDeclaration[0]\n                                        .employeeStatements_section3q2 ===\n                                        \"\") ||\n                                    (data.taxDeclaration[0]\n                                      .employeeStatements_section3q2 ===\n                                      \"true\" &&\n                                      data.taxDeclaration[0]\n                                        .employeeStatements_section3q3 ===\n                                        \"\") ||\n                                    (data.taxDeclaration[0]\n                                      .employeeStatements_section3q3 ===\n                                      \"false\" &&\n                                      data.taxDeclaration[0]\n                                        .employeeStatements_section3q4 ===\n                                        \"\") ||\n                                    (data.taxDeclaration[0]\n                                      .employeeStatements_section3q4 !== \"\" &&\n                                      data.taxDeclaration[0]\n                                        .employeeStatements_section3q5 === \"\")\n                                  }\n                                  size=\"large\"\n                                  fullWidth={true}\n                                  className={classes.button}\n                                  onClick={(e) => onSubmit(e)}\n                                  color=\"secondary\"\n                                  variant=\"contained\"\n                                >\n                                  Save\n                                </Button>\n                              </Box>\n                            </>\n                          ) : (\n                            \"\"\n                          )}\n                        </>\n                      )}\n                    </>\n                  ) : (\n                    // ) : tab === 3 ? (\n                    //   <>\n                    //     <Typography\n                    //       variant=\"h5\"\n                    //       weight=\"medium\"\n                    //       className={classes.text}\n                    //     >\n                    //       Change your password\n                    //     </Typography>\n                    //     <TextField\n                    //       className={classes.textFieldFull}\n                    //       id=\"password-current\"\n                    //       type=\"password\"\n                    //       name=\"currentPassword\"\n                    //       placeholder=\"Current Password\"\n                    //       value={password.currentPassword || \"\"}\n                    //       onChange={handleChangePassword}\n                    //       label=\"Current Password\"\n                    //       variant=\"outlined\"\n                    //       helperText={\"Forgot Password?\"}\n                    //     />\n                    //     <TextField\n                    //       className={classes.textFieldFull}\n                    //       id=\"password-new\"\n                    //       type=\"password\"\n                    //       name=\"newPassword\"\n                    //       placeholder=\"New Password\"\n                    //       value={password.newPassword || \"\"}\n                    //       onChange={handleChangePassword}\n                    //       label=\"New Password\"\n                    //       variant=\"outlined\"\n                    //     />\n                    //     <TextField\n                    //       className={classes.textFieldFull}\n                    //       id=\"password-new1\"\n                    //       type=\"password\"\n                    //       name=\"confirmPassword\"\n                    //       placeholder=\"Confirm New Password\"\n                    //       value={password.confirmPassword || \"\"}\n                    //       onChange={handleChangePassword}\n                    //       label=\"Confirm New Password\"\n                    //       variant=\"outlined\"\n                    //     />\n                    //   </>\n                    // ) : (\n                    \"\"\n                    // <>\n                    //   <Typography\n                    //     variant={\"h5\"}\n                    //     weight={\"medium\"}\n                    //     style={{ marginBottom: 35 }}\n                    //   >\n                    //     Settings\n                    //   </Typography>\n                    //   <FormControl\n                    //     variant=\"outlined\"\n                    //     style={{ marginBottom: 35 }}\n                    //   >\n                    //     <Select\n                    //       labelId=\"demo-simple-select-outlined-label\"\n                    //       id=\"demo-simple-select-outlined\"\n                    //       value={10}\n                    //     >\n                    //       <MenuItem value={10}>English</MenuItem>\n                    //       <MenuItem value={20}>Admin</MenuItem>\n                    //       <MenuItem value={30}>Super Admin</MenuItem>\n                    //     </Select>\n                    //   </FormControl>\n                    //   <Typography weight={\"bold\"}>Communication:</Typography>\n                    //   <Box display={\"flex\"}>\n                    //     <FormControlLabel\n                    //       control={\n                    //         <Checkbox\n                    //           checked\n                    //           name=\"checkedB\"\n                    //           color=\"secondary\"\n                    //         />\n                    //       }\n                    //       label=\"Email\"\n                    //     />\n                    //     <FormControlLabel\n                    //       control={\n                    //         <Checkbox name=\"checkedB\" color=\"secondary\" />\n                    //       }\n                    //       label=\"Messages\"\n                    //     />\n                    //     <FormControlLabel\n                    //       control={\n                    //         <Checkbox name=\"checkedB\" color=\"secondary\" />\n                    //       }\n                    //       label=\"Phone\"\n                    //     />\n                    //   </Box>\n                    //   <Box display={\"flex\"} mt={2} alignItems={\"center\"}>\n                    //     <Typography weight={\"medium\"}>\n                    //       Email notification\n                    //     </Typography>\n                    //     <Switch color={\"primary\"} />\n                    //   </Box>\n                    //   <Box\n                    //     display={\"flex\"}\n                    //     mt={2}\n                    //     mb={2}\n                    //     alignItems={\"center\"}\n                    //   >\n                    //     <Typography weight={\"medium\"}>\n                    //       Send copy to personal email\n                    //     </Typography>\n                    //     <Switch color={\"primary\"} />\n                    //   </Box>\n                    // </>\n                  )}\n                </form>\n              </Box>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default User;\n","import React, { useContext, useEffect } from \"react\";\n//State\nimport AuthContext from \"../../context/auth/authContext\";\n//Components\nimport NavButtonUserProfile from \"../layouts/NavButtonUserProfile\";\nimport UserProfile from \"../user/User\";\n\nconst User = (props) => {\n  const authContext = useContext(AuthContext);\n  const { loadUser, user, isAdmin } = authContext;\n\n  useEffect(() => {\n    loadUser();\n  }, []);\n\n  return (\n    <div>\n      <NavButtonUserProfile isAdmin={isAdmin} />\n      <UserProfile activeUser={user} isAdmin={isAdmin} />\n    </div>\n  );\n};\n\nexport default User;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Import from \"@material-ui/icons/Publish\";\nimport Reports from \"@material-ui/icons/Assessment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst actions = [\n  {\n    id: 1,\n    icon: (\n      <Link to=\"/\">\n        <ArrowBackIcon />\n      </Link>\n    ),\n    name: \"Back\",\n  },\n  {\n    id: 2,\n    icon: (\n      <Link to=\"/import\">\n        <Import />\n      </Link>\n    ),\n    name: \"Import File\",\n  },\n  {\n    id: 3,\n    icon: (\n      <Link to=\"/payments/new\">\n        <AttachMoneyIcon />\n      </Link>\n    ),\n    name: \"Manually Add Payment\",\n  },\n  // {\n  //   id: 4,\n  //   icon: (\n  //     <Link to=\"#\">\n  //       <Reports />\n  //     </Link>\n  //   ),\n  //   name: \"Report Manager\",\n  // },\n];\n\nconst NavButtonPayments = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"Payments Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={handleClose}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n\nexport default NavButtonPayments;\n","import React, { useContext, useEffect } from \"react\";\n//Navigation\nimport NavButtonPayments from \"../layouts/NavButtonPayments\"\n//Components\nimport UserPayments from \"../payments/UserPayments\"\n//State\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst Home = () => {\n  const authContext = useContext(AuthContext);\n\n  useEffect(() => {\n    authContext.loadUser();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <NavButtonPayments />\n      <UserPayments/>\n    </>\n  );\n};\n\nexport default Home;\n","import React, { useContext, Fragment, useEffect } from \"react\";\nimport { useLocation, useHistory, useParams, Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport moment from \"moment\";\n//Context\nimport UserContext from \"../../context/user/userContext\";\nimport PaymentContext from \"../../context/payment/paymentContext\";\nimport { monthWords } from \"../../utils/dropdowns\";\n\n//Components\nimport { Grid, Paper, Chip, Button, Typography } from \"@material-ui/core\";\nimport {\n  ThumbUp,\n  ThumbDown,\n  PauseCircleOutline,\n  PlayCircleOutline,\n  Pageview,\n  Receipt,\n} from \"@material-ui/icons\";\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport { useSnackbar } from \"notistack\";\nimport clsx from \"clsx\";\n// import CustomToolbar from \"../layouts/CustomToolbar\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"right\",\n    color: theme.palette.text.secondary,\n  },\n  right: {\n    textAlign: \"right\",\n  },\n  left: {\n    textAlign: \"left\",\n  },\n}));\n\nconst date = new Date().toUTCString();\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nconst Payments = (props) => {\n  const classes = useStyles();\n  const userContext = useContext(UserContext);\n  const paymentContext = useContext(PaymentContext);\n  const { user, payments } = props;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { id } = useParams();\n  const {\n    loading,\n    clearErrors,\n    deletePayment,\n    approvePayment,\n    rejectPayment,\n    holdPayment,\n    pendingPayment,\n    paidPayment,\n  } = paymentContext;\n\n  const history = useHistory();\n\n  function MonthWords(i) {\n    const arr = monthWords.map((value) => value.value);\n    return arr[i - 1];\n  }\n\n  if (payments !== null && payments.length === 0 && !loading) {\n    return <h4>You have no payments recorded</h4>; // if user list is empty\n  }\n\n  const onClickApprovePayment = (id) => {\n    approvePayment(id);\n  };\n\n  const onClickRejectPayment = (id) => {\n    rejectPayment(id);\n  };\n\n  const onClickHoldPayment = (id) => {\n    holdPayment(id);\n  };\n\n  const onClickPendingPayment = (id) => {\n    pendingPayment(id);\n  };\n\n  const onClickPaidPayment = (id) => {\n    paidPayment(id);\n  };\n\n  const viewPayment = (dataIndex) => {\n    let path = `/payments/${dataIndex}`;\n    history.push(path);\n  };\n\n  const CustomChip = ({ label, onDelete }) => {\n    return (\n      <Chip\n        variant=\"outlined\"\n        color=\"primary\"\n        label={label}\n        onDelete={onDelete}\n      />\n    );\n  };\n\n  const CustomFilterList = (props) => {\n    return <TableFilterList {...props} ItemComponent={CustomChip} />;\n  };\n\n  const options = {\n    filter: true,\n    filterType: \"dropdown\",\n    sortOrder: {\n      name: \"paymentPeriodNum\",\n      direction: \"asc\",\n    },\n    downloadOptions: {\n      filterOptions: {\n        useDisplayedColumnsOnly: false,\n        useDisplayedRowsOnly: true,\n      },\n      filename: `payments-${date}.csv`,\n    },\n    rowsPerPageOptions: [5, 10, 20, 50, 100],\n    rowsPerPage: 10,\n    draggableColumns: {\n      enabled: true,\n    },\n    selectableRowsHideCheckboxes: false,\n    // customToolbar: () => {\n    //   return <CustomToolbar />;\n    // },\n    onRowsDelete: (rows) => {\n      if (rows.data.length <= 10) {\n        const paymentsToDelete = rows.data.map((d) => payments[d.dataIndex]);\n        paymentsToDelete.forEach((a) => {\n          if (a.user === user._id) {\n            enqueueSnackbar(`You cannot delete your own record`, {\n              variant: \"error\",\n            });\n            clearErrors();\n          } else {\n            enqueueSnackbar(`Payment for QUBID ${a.QUBID} deleted`, {\n              variant: \"success\",\n            });\n            deletePayment(a._id);\n          }\n        });\n      } else {\n        paymentContext.loading = true;\n        const paymentsToDelete = rows.data.map((d) => payments[d.dataIndex]);\n        paymentsToDelete.forEach((a) => {\n          if (a._id === user._id) {\n            enqueueSnackbar(`You cannot delete your own record`, {\n              variant: \"error\",\n            });\n            clearErrors();\n          } else {\n            deletePayment(a._id);\n          }\n        });\n        paymentContext.loading = false;\n      }\n    },\n  };\n\n  // DO NOT change columns[0] to be anything other than ID\n  const columns = [\n    {\n      name: \"_id\",\n      label: \"UserId\",\n      options: {\n        filter: false,\n        display: false,\n        download: false,\n        sort: false,\n      },\n    },\n    {\n      name: \"paymentPeriodNum\",\n      label: \"Month\",\n      options: {\n        filter: false,\n        display: false,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"paymentPeriod\",\n      label: \"Month\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n        customBodyRender: (value) => {\n          return MonthWords(value);\n        },\n      },\n    },\n    {\n      name: \"QUBID\",\n      label: \"QUBID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"academicYear\",\n      label: \"Year\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"account\",\n      label: \"Account\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n\n    {\n      name: \"deliveredBy\",\n      label: \"Role\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"amount\",\n      label: \"Amount\",\n      options: {\n        filter: true,\n        display: true,\n        download: false,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return new Intl.NumberFormat(\"en-GB\", {\n            style: \"currency\",\n            currency: \"GBP\",\n          }).format(value);\n        },\n      },\n    },\n    {\n      name: \"amount\",\n      label: \"amount\",\n      options: {\n        filter: true,\n        display: false,\n        download: true,\n        sort: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return new Intl.NumberFormat(\"en-GB\", {\n            style: \"decimal\",\n            minimumFractionDigits: \"2\",\n          }).format(value);\n        },\n      },\n    },\n    {\n      name: \"paymentStatus\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        // filterList: [\"Pending\",\"On Hold\"],\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"updatedByUserDate\",\n      label: \"Updated\",\n      options: {\n        filter: true,\n        display: false,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"Actions\",\n      options: {\n        filter: false,\n        sort: false,\n        empty: true,\n        download: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <>\n              <Grid container direction=\"row\" justify=\"space-between\">\n                {tableMeta.rowData.find((element) => element === \"Rejected\") ===\n                  \"Rejected\" ||\n                tableMeta.rowData.find((element) => element === \"Paid\") ===\n                  \"Paid\" ? (\n                  \"\"\n                ) : tableMeta.rowData.find(\n                    (element) => element === \"Pending\"\n                  ) === \"Pending\" ? (\n                  <>\n                    <Typography color=\"primary\" align=\"center\">\n                      <ThumbUp\n                        fontSize=\"small\"\n                        onClick={() =>\n                          onClickApprovePayment(tableMeta.rowData[0])\n                        }\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Approve\n                      </Typography>\n                    </Typography>\n                    <Typography color=\"secondary\" align=\"center\">\n                      <ThumbDown\n                        fontSize=\"small\"\n                        onClick={() => {\n                          onClickRejectPayment(tableMeta.rowData[0]);\n                        }}\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Reject\n                      </Typography>\n                    </Typography>\n                    <Typography color=\"textSecondary\" align=\"center\">\n                      <PauseCircleOutline\n                        fontSize=\"small\"\n                        onClick={(e) => {\n                          onClickHoldPayment(tableMeta.rowData[0]);\n                        }}\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Hold\n                      </Typography>\n                    </Typography>\n                  </>\n                ) : tableMeta.rowData.find(\n                    (element) => element === \"On Hold\"\n                  ) === \"On Hold\" ? (\n                  <>\n                    <Typography color=\"primary\" align=\"center\">\n                      <ThumbUp\n                        fontSize=\"small\"\n                        onClick={() =>\n                          onClickApprovePayment(tableMeta.rowData[0])\n                        }\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Approve\n                      </Typography>\n                    </Typography>\n                    <Typography color=\"secondary\" align=\"center\">\n                      <ThumbDown\n                        fontSize=\"small\"\n                        onClick={() => {\n                          onClickRejectPayment(tableMeta.rowData[0]);\n                        }}\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Reject\n                      </Typography>\n                    </Typography>\n                    <Typography color=\"textSecondary\" align=\"center\">\n                      <PlayCircleOutline\n                        fontSize=\"small\"\n                        onClick={() => {\n                          onClickPendingPayment(tableMeta.rowData[0]);\n                        }}\n                      />\n                      <Typography\n                        align=\"center\"\n                        display=\"block\"\n                        variant=\"caption\"\n                      >\n                        Pending\n                      </Typography>\n                    </Typography>\n                  </>\n                ) : (\n                  <Typography\n                    style={{\n                      color: \"green\",\n                    }}\n                    align=\"center\"\n                  >\n                    <Receipt\n                      fontSize=\"small\"\n                      onClick={() => onClickPaidPayment(tableMeta.rowData[0])}\n                    />\n                    <Typography\n                      align=\"center\"\n                      display=\"block\"\n                      variant=\"caption\"\n                    >\n                      Paid\n                    </Typography>\n                  </Typography>\n                )}\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n    {\n      name: \"\",\n      options: {\n        filter: false,\n        sort: false,\n        empty: true,\n        download: false,\n        customBodyRender: (value, tableMeta, updateValue) => {\n          return (\n            <>\n              <Grid\n                container\n                direction=\"row\"\n                alignContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Typography align=\"center\">\n                  <Pageview\n                    fontSize=\"small\"\n                    onClick={() => viewPayment(tableMeta.rowData[0])}\n                    userID={tableMeta.rowData[0]}\n                  />\n                  <Typography align=\"center\" display=\"block\" variant=\"caption\">\n                    View\n                  </Typography>\n                </Typography>\n              </Grid>\n            </>\n          );\n        },\n      },\n    },\n  ];\n\n  return (\n    <Fragment>\n      <div>\n        <div>\n          {payments !== null && !loading ? (\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <MUIDataTable\n                  title={\n                    <div>\n                      <Typography variant=\"h5\">User Payments</Typography>\n                      <Typography variant=\"caption\">\n                        To approve payments individually, please select a row\n                      </Typography>\n                    </div>\n                  }\n                  data={payments}\n                  columns={columns}\n                  options={options}\n                  components={{\n                    TableFilterList: CustomFilterList,\n                  }}\n                />\n              </Grid>\n            </Grid>\n          ) : (\n            <ProgressIndicator />\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Payments;\n","import React, {Fragment } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n//Components\nimport { Grid, Paper, Button } from \"@material-ui/core\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"right\",\n    color: theme.palette.text.secondary,\n  },\n  right: {\n    textAlign: \"right\",\n  },\n  left: {\n    textAlign: \"left\",\n  },\n}));\n\nconst PaymentsNav = (props) => {\n  const classes = useStyles();\n  const { onClickReject, onClickApprove, onClickPaid } = props;\n\n  const onClickRejectAll = () => {\n    onClickReject();\n  };\n    \n  const onClickApproveAll = () => {\n    onClickApprove();\n  };\n\n  const onClickPaidAll = () => {\n    onClickPaid();\n  }\n\n  return (\n    <Fragment>\n      <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={1}>\n              <Grid item xs={4} className={clsx(classes.root, classes.left)}>\n                <Button\n                  onClick={onClickRejectAll}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                >\n                  Reject All Pending\n                </Button>\n              </Grid>\n              <Grid item xs={8} className={clsx(classes.root, classes.right)}>\n                <Button\n                  variant=\"contained\"\n                  component={Link}\n                  to=\"/payments/new\"\n                  color=\"default\"\n                >\n                  Add Payment\n                </Button>\n                <Button\n                  onClick={onClickApproveAll}\n                  variant=\"contained\"\n                  color=\"primary\"\n                >\n                  Approve All Pending\n                </Button>\n                <Button\n                  onClick={onClickPaidAll}\n                  variant=\"contained\"\n                  style={{\n                    backgroundColor: \"green\",\n                    color: \"white\"\n                }}\n                >\n                  Mark All As Paid\n                </Button>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n};\n\nexport default PaymentsNav;\n","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { useTheme } from \"@material-ui/core/styles\";\n\nconst ResponsiveDialog = (props) => {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down(\"sm\"));\n  const {\n    hideForm,\n    stage,\n    finalisePayment,\n    invoiceTotal,\n    RejectAllPayments,\n    ApproveAllPayments,\n    PaidAllPayments\n  } = props;\n\n  return (\n    <div>\n      <Dialog\n        fullScreen={fullScreen}\n        open={stage === \"SubmitPaymentForm\"}\n        onClose={hideForm}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Confirmation Required\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You are about to finalise a payment to the value of £{invoiceTotal}.\n          </DialogContentText>\n          <DialogContentText>Do you want to continue?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={hideForm} color=\"primary\">\n            Cancel\n          </Button>\n          <Button\n            onClick={() => {\n              finalisePayment();\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Continue\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        fullScreen={fullScreen}\n        open={\n          stage === \"RejectAllPayments\" ||\n          stage === \"ApproveAllPayments\" ||\n          stage === \"PaidAllPayments\"\n        }\n        onClose={hideForm}\n        aria-labelledby=\"responsive-dialog-title\"\n      >\n        <DialogTitle id=\"responsive-dialog-title\">\n          {\"Confirmation Required\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            You are about to\n            {stage === \"RejectAllPayments\"\n              ? \" REJECT ALL pending Payments!\"\n              : stage === \"ApproveAllPayments\"\n              ? \" APPROVE ALL pending Payments!\"\n              : stage === \"PaidAllPayments\"\n              ? \" set ALL APPROVED payments to Paid\"\n              : \"\"}\n          </DialogContentText>\n          <DialogContentText>Do you want to continue?</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={hideForm} color=\"primary\">\n            Cancel\n          </Button>\n          {stage === \"RejectAllPayments\" ? (\n            <Button\n              onClick={() => {\n                RejectAllPayments();\n              }}\n              color=\"primary\"\n              autoFocus\n            >\n              Reject All\n            </Button>\n          ) : stage === \"ApproveAllPayments\" ? (\n            <Button\n            onClick={() => {\n              ApproveAllPayments();\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Approve All\n          </Button>\n          ) : stage === \"PaidAllPayments\" ? (\n            <Button\n            onClick={() => {\n              PaidAllPayments();\n            }}\n            color=\"primary\"\n            autoFocus\n          >\n            Set All to Paid\n          </Button>\n          ) : (\n            \"Something Went Wrong\"\n          )}\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n};\n\nexport default ResponsiveDialog;\n","import React, { useContext, useEffect, useState } from \"react\";\n//Navigation\nimport NavButtonPayments from \"../../components/layouts/NavButtonPayments\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n//Components\nimport Payments from \"../../components/payments/Payments\";\nimport PaymentsNav from \"../../components/payments/PaymentsNav\";\nimport Dialog from \"../layouts/ConfirmationDialog\";\n//State\nimport AuthContext from \"../../context/auth/authContext\";\nimport PaymentContext from \"../../context/payment/paymentContext\";\nimport { useSnackbar } from \"notistack\";\n\nconst Payment = (props) => {\n  const authContext = useContext(AuthContext);\n  const paymentContext = useContext(PaymentContext);\n  const { loadUser, isAdmin, user } = authContext;\n  const {\n    getPayments,\n    payments,\n    loading,\n    setLoading,\n    error,\n    clearErrors,\n    rejectAllPayments,\n    approveAllPayments,\n    paidAllPayments,\n  } = paymentContext;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    loadUser();\n    getPayments();\n    if (!authContext.loading && !isAdmin) {\n      props.history.push(\"/\");\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n  }, [isAdmin, props.history, error, loading]);\n  const [formShowing, setFormShowing] = useState(false);\n  const [stage, setStage] = useState(\"\");\n  const showForm = () => {\n    setFormShowing(true);\n  };\n  const hideForm = () => {\n    setFormShowing(false);\n  };\n\n  const onClickReject = () => {\n    showForm();\n    setStage(\"RejectAllPayments\");\n  };\n\n  const onClickApprove = () => {\n    showForm();\n    setStage(\"ApproveAllPayments\");\n  };\n\n  const onClickPaid = () => {\n    showForm();\n    setStage(\"PaidAllPayments\");\n  };\n\n  const onClickRejectConfirm = () => {\n    hideForm();\n    setStage(\"\");\n    setLoading();\n    rejectAllPayments();\n    getPayments();\n  };\n\n  const onClickApproveConfirm = () => {\n    hideForm();\n    setStage(\"\");\n    setLoading();\n    approveAllPayments();\n    getPayments();\n  };\n\n  const onClickPaidConfirm = () => {\n    hideForm();\n    setStage(\"\");\n    setLoading();\n    paidAllPayments();\n    getPayments();\n  };\n\n  return (\n    <>\n      {loading ? (\n        <ProgressIndicator />\n      ) : (\n        <>\n          <NavButtonPayments />\n          <PaymentsNav\n            onClickReject={onClickReject}\n            onClickApprove={onClickApprove}\n            onClickPaid={onClickPaid}\n          />\n          <Payments user={user} isAdmin={isAdmin} payments={payments} />\n          {formShowing && (\n            <Dialog\n              RejectAllPayments={onClickRejectConfirm}\n              ApproveAllPayments={onClickApproveConfirm}\n              PaidAllPayments={onClickPaidConfirm}\n              hideForm={hideForm}\n              stage={stage}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Payment;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport AttachMoneyIcon from \"@material-ui/icons/AttachMoney\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Import from \"@material-ui/icons/Publish\";\nimport Reports from \"@material-ui/icons/Assessment\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst actions = [\n  {\n    id: 1,\n    icon: (\n      <Link to=\"/\">\n        <ArrowBackIcon />\n      </Link>\n    ),\n    name: \"Back\",\n  },\n  {\n    id: 2,\n    icon: (\n      <Link to=\"/import\">\n        <Import />\n      </Link>\n    ),\n    name: \"Import File\",\n  },\n  // {\n  //   id: 3,\n  //   icon: (\n  //     <Link to=\"/payments\">\n  //       <AttachMoneyIcon />\n  //     </Link>\n  //   ),\n  //   name: \"Manually Add Payment\",\n  // },\n  // {\n  //   id: 4,\n  //   icon: (\n  //     <Link to=\"#\">\n  //       <Reports />\n  //     </Link>\n  //   ),\n  //   name: \"Report Manager\",\n  // },\n];\n\nconst NavButtonPayments = () => {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"Payments Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.name}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={handleClose}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n\nexport default NavButtonPayments;\n","import React from \"react\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport {\n  Grid,\n  Paper,\n} from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    minWidth: 700,\n    fontSize: theme.typography.pxToRem(5),\n  },\n}));\n\nconst MarkingRange = () => {\n  const classes = useStyles();\n  return (\n    <Grid item xs={12}>\n      <TableContainer component={Paper}>\n        <Table\n          className={clsx(classes.table, classes.root)}\n          aria-label=\"spanning table\"\n          size=\"small\"\n        >\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\">Marking Range</TableCell>\n              <TableCell align=\"center\">Definition</TableCell>\n              <TableCell align=\"center\">Examples</TableCell>\n              <TableCell align=\"center\">Duration</TableCell>\n              <TableCell align=\"center\">Min Competence Level</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            <TableRow key={1}>\n              <TableCell align=\"center\">A</TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Very well-defined marking criteria; working to prepared/model answer(s); limited academic discretion/judgement required; high level of specialist knowledge not required\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Mathematical, technical and computational assessments, such as lab books and other assignments which map onto the criteria listed under Definition A\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">\n                {\"6 pieces per hour (10 mins per piece1)\"}\n              </TableCell>\n              <TableCell align=\"center\">{\"AC1/PGR A\"}</TableCell>\n            </TableRow>\n            <TableRow key={2}>\n              <TableCell align=\"center\">B</TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Well-defined criteria; some guidance provided on model answer, but requires interpretation of responses based on academic judgement/discretion; a level of specialist knowledge required as well as the ability to assess application and analysis of key principles in the discipline\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Shorter written pieces requiring significant correction/annotation eg language marking (AEL); tutorial package i.e. presentation & reflective reports (HAPP);  mathematical coursework, technical and computational assessments, such as lab books and other assignments which map onto the criteria listed under Definition B\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">\n                {\"3 pieces per hour (20 mins per piece)\"}\n              </TableCell>\n              <TableCell align=\"center\">{\"AC1/PGR A\"}</TableCell>\n            </TableRow>\n            <TableRow key={3}>\n              <TableCell align=\"center\">C</TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Broad criteria to be applied, requiring substantial academic judgement to assess evidence of students' higher-level skills (e.g.interpretation/application/ analysis/synthesis/evaluation of materials and concepts); ability to undertake independent assessment and good level of specialist knowledge required\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Essay/Substantial written piece;  mathematical coursework, technical and computational assessments, such as lab books and other assignments which map onto the criteria listed under Definition C\"\n                }\n              </TableCell>\n              <TableCell size=\"medium\" align=\"left\">\n                {\n                  <ul>\n                    <li>2-3000 = 20 mins (3 pieces per hour)</li>\n                    <li>3-4000 = 30 mins (2 pieces per hour)</li>\n                    <li>4-5000 = 40 mins (1.5 per hour)</li>\n                    <li>\n                      Greater than 5000 words = 45 mins (2 per 1.5 hours or 4\n                      per 3 hours)\n                    </li>\n                    <li>\n                      Lab books and other assignments within mathematical,\n                      technical and computational assessments in range C = 30\n                      mins (2 pieces per hour)\n                    </li>\n                  </ul>\n                }\n              </TableCell>\n              <TableCell align=\"center\">{\"AC2/PGR B\"}</TableCell>\n            </TableRow>\n            <TableRow key={4}>\n              <TableCell align=\"center\">D</TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Well-defined criteria, but requires interpretation of responses based on a level of specialist knowledge and the ability to assess application and analysis of key principles\"\n                }\n              </TableCell>\n              <TableCell align=\"left\">{\"Oral Exam\"}</TableCell>\n              <TableCell align=\"left\">\n                {\n                  \"Duration of the exam, including examiner discussion, plus 0.5 hours per hour of exam\"\n                }\n              </TableCell>\n              <TableCell align=\"center\">{\"AC2/PGR B\"}</TableCell>\n            </TableRow>\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Grid>\n  );\n};\n\nexport default MarkingRange;\n","import React, { useContext, Fragment, useEffect, useState } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport {\n  deliveryCategory,\n  semester,\n  academicYear,\n  schoolMenu,\n  monthWords,\n  yearsDD,\n} from \"../../utils/dropdowns\";\n\n//Context\nimport PaymentContext from \"../../context/payment/paymentContext\";\n\n//Components\nimport {\n  Grid,\n  Paper,\n  Button,\n  Typography,\n  TextField,\n  MenuItem,\n  InputAdornment,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Input,\n  Tooltip,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport { useSnackbar } from \"notistack\";\nimport clsx from \"clsx\";\nimport MarkingRange from \"../layouts/MarkingRange\";\nimport Dialog from \"../layouts/ConfirmationDialog\";\nimport UserPayments from \"./UserPayments\";\n// import CustomToolbar from \"../layouts/CustomToolbar\";\n\nconst CUR = \"£\";\nconst TAX_RATE = -0.2;\nconst AC1_RATE = 14.73;\nconst AC2_RATE = 17.57;\nconst BANDA_RATE = 15.01;\nconst BANDB_RATE = 20.01;\nconst MHC_A = 0.1667;\nconst MHC_B = 0.3333;\nconst MHC_C1 = 0.3333;\nconst MHC_C2 = 0.5;\nconst MHC_C3 = 0.6667;\nconst MHC_C4 = 0.75;\nconst MHC_C5 = 0.5;\nconst MHC_D = 1.5;\nconst OFFR = 0.5;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"right\",\n    color: theme.palette.text.secondary,\n  },\n  right: {\n    textAlign: \"right\",\n  },\n  left: {\n    textAlign: \"left\",\n  },\n  table: {\n    minWidth: 700,\n  },\n  spacer: {\n    marginTop: theme.spacing(2),\n  },\n  textField: {\n    \"& > *\": {},\n  },\n  footer: {\n    minHeight: 100,\n  },\n  inputField: {\n    textAlign: \"center\",\n  },\n  inputCenter: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: theme.typography.pxToRem(14),\n  },\n  inputEdit: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: theme.typography.pxToRem(14),\n    backgroundColor: \"#edfced\"\n  },\n  finalButton: {\n    margin: theme.spacing(2),\n  },\n  BandB: {\n    backgroundColor: \"white\",\n    color: \"white !important\",\n  },\n}));\n\nconst HtmlTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: \"#f5f5f9\",\n    color: \"rgba(0, 0, 0, 0.87)\",\n    maxWidth: 1000,\n    fontSize: theme.typography.pxToRem(0.1),\n    border: \"1px solid #dadde9\",\n  },\n}))(Tooltip);\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nfunction subtotal(totals) {\n  return totals.map(({ payment }) => payment).reduce((sum, i) => sum + i, 0);\n}\n\nfunction totalPaidHours(totals) {\n  return totals.reduce((sum, i) => sum + i.totalPaidHours, 0);\n}\n\nfunction totalGrade1Hours(totals) {\n  return totals\n    .filter((totals) => totals.grade === \"AC1\" || totals.grade === \"Band A\")\n    .reduce((sum, i) => sum + i.totalPaidHours, 0);\n}\n\nfunction totalGrade2Hours(totals) {\n  return totals\n    .filter((totals) => totals.grade === \"AC2\" || totals.grade === \"Band B\")\n    .reduce((sum, i) => sum + i.totalPaidHours, 0);\n}\n\nfunction totalOfficeHours(totals) {\n  return totals.reduce((sum, i) => sum * i.count, 1);\n}\n\nfunction pad(num, size) {\n  return (\"0\" + num).substr(-size);\n}\n\nconst CreatePayment = (props) => {\n  const classes = useStyles();\n  const paymentContext = useContext(PaymentContext);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const { payments, addPayment, loading, error } = paymentContext;\n  const history = useHistory();\n  const { id } = useParams();\n\n  useEffect(() => {\n    if (props.activeUsers !== null) {\n      setUserSelect(props.activeUsers);\n    } else {\n      setUserSelect([\n        {\n          _id: 0,\n          firstName: \"\",\n          lastName: \"\",\n          QUBID: \"\",\n        },\n      ]);\n    }\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n  }, [props.activeUsers]);\n\n  //State\n  let month = new Date().getMonth() + 1;\n  const [payment, setPayment] = useState({\n    user: \"\",\n    deliveredBy: \"TA\",\n    school: \"Electronics, Electrical Engineering and Computer Science\",\n    academicYear: \"2020/2021\",\n    paymentPeriod: month,\n    paymentPeriodYear: new Date().getFullYear(),\n    paymentPeriodNum: parseInt(\n      new Date().getFullYear().toString() + pad(month.toString(), 2)\n    ),\n    semester: \"1\",\n    QUBID: \"10000000\",\n    account: \"\",\n    projectCode: \"\",\n    projectName: \"\",\n    subAnalysis: \"\",\n    amount: 0.0,\n    student_cohort: true,\n    cohort_id: \"00\",\n    paymentStatus: \"Pending\",\n    grade1: \"AC1\",\n    grade2: \"AC2\",\n    rate1: AC1_RATE,\n    rate2: AC2_RATE,\n  });\n  const [markingCalc, setMarkingCalc] = useState([\n    {\n      range: \"A\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"B\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"C-1\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"C-2\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"C-3\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"C-4\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"C-5\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n    {\n      range: \"D\",\n      grade: \"\",\n      numOfStudents: 0,\n      numOfCWPcsPerStudent: 0,\n      OralExamHours: 0,\n      total: 0,\n      totalPaidHours: 0.0,\n    },\n  ]);\n  const [officeHoursCalc, setOfficeHoursCalc] = useState([\n    {\n      description: \"No of Seminar Groups per week\",\n      count: 0,\n    },\n    {\n      description: \"No of weeks\",\n      count: 0,\n    },\n  ]);\n  const [paymentCalc, setPaymentCalc] = useState({\n    lecture: [\n      {\n        activity: \"Prep - 1st delivery\",\n        paymentGrade: \"\",\n        paymentRate: 0.0,\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Prep - Repeat in same week (one repeat only)\",\n        paymentGrade: \"\",\n        paymentRate: 0.0,\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Delivery\",\n        paymentGrade: \"\",\n        paymentRate: 0.0,\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    seminar: [\n      {\n        activity: \"Prep - 1st delivery (1hr)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Prep - 1st delivery (2hrs)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Prep - Repeat in same week (one repeat only)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Delivery\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    lab: [\n      {\n        activity: \"Prep - 1st delivery (0.5hrs)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Prep - 1st delivery (1hr)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Prep - Repeat in same week (one repeat only)\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Delivery\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    fieldTrip: [\n      {\n        activity: \"Number of contact hours\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    office: [\n      {\n        activity: \"0.5 hours per seminar group per week\",\n        paymentGrade: \"\",\n        time: 0.0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    marking: [\n      {\n        activity: \"Exam / Non Exam / Coursework\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Exam / Non Exam / Coursework\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n      {\n        activity: \"Oral Exam\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n    training: [\n      {\n        activity: \"Number of hours\",\n        paymentGrade: \"\",\n        time: 0,\n        count: 0,\n        totalhrs: 0.0,\n        payment: 0.0,\n      },\n    ],\n  });\n  const [hourlyRates, setHourlyRates] = useState({\n    rate1: AC1_RATE,\n    rate2: AC2_RATE,\n  });\n  const [isDisabled, setIsDisabled] = useState({\n    panel1: false,\n    panel2: true,\n    panel3: true,\n    resetButton: true,\n    addPaymentButton: true,\n  });\n  const [isExpanded, setExpanded] = useState({\n    panel1: true,\n    panel2: false,\n    panel3: false,\n  });\n  const [userSelect, setUserSelect] = useState([]);\n  const [finalised, setFinalised] = useState(false);\n  const [grade, setGrade] = useState({\n    grade1: \"AC1\",\n    grade2: \"AC2\",\n  });\n  const [formShowing, setFormShowing] = useState(false);\n  const [stage, setStage] = useState(\"\");\n  //Events\n  const onChange = (e, i, g, r, rng) => {\n    let rate = \"\";\n    switch (i) {\n      case 1:\n        if (e.target.value === \"TA\") {\n          setHourlyRates({\n            rate1: ccyFormat(AC1_RATE),\n            rate2: ccyFormat(AC2_RATE),\n          });\n          setGrade({\n            grade1: \"AC1\",\n            grade2: \"AC2\",\n          });\n        } else {\n          setHourlyRates({\n            rate1: ccyFormat(BANDA_RATE),\n            rate2: ccyFormat(BANDB_RATE),\n          });\n          setGrade({\n            grade1: \"Band A\",\n            grade2: \"Band B\",\n          });\n        }\n        setPayment({\n          ...payment,\n          [e.target.name]: e.target.value,\n          grade1: grade.grade1,\n          rate1: hourlyRates.rate1,\n          grade2: grade.grade2,\n          rate2: hourlyRates.rate2,\n        });\n        break;\n      case 2:\n        payment.paymentPeriodNum = parseInt(\n          payment.paymentPeriodYear.toString() +\n            pad(payment.paymentPeriod.toString(), 2)\n        );\n        if (e.target.name === \"user\") {\n          let userQUBID = userSelect.filter(function (val) {\n            return val._id === e.target.value;\n          });\n          payment.QUBID = userQUBID[0].QUBID;\n        }\n        setPayment({\n          ...payment,\n          [e.target.name]: e.target.value,\n        });\n        break;\n      case 3:\n        r[e.target.name] = parseFloat(e.target.value);\n        r.paymentGrade = g;\n        if (r.paymentGrade === grade.grade1) {\n          rate = hourlyRates.rate1;\n        } else {\n          rate = hourlyRates.rate2;\n        }\n        r.totalhrs = parseFloat(r.count * r.time);\n        r.payment = parseFloat(r.totalhrs * rate);\n        setPaymentCalc({ ...paymentCalc });\n        break;\n      case 4:\n        r[e.target.name] = parseFloat(e.target.value);\n        r.paymentGrade = g;\n        if (r.paymentGrade === grade.grade1) {\n          rate = hourlyRates.rate1;\n        } else {\n          rate = hourlyRates.rate2;\n        }\n        r.payment = parseFloat(r.totalhrs * rate);\n        setPaymentCalc({ ...paymentCalc });\n        break;\n      case 5:\n        switch (rng) {\n          case \"A\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_A)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[0].time = parseFloat(\n              ccyFormat(totalGrade1Hours(markingCalc))\n            );\n            paymentCalc.marking[0].totalhrs = parseFloat(\n              ccyFormat(totalGrade1Hours(markingCalc))\n            );\n            paymentCalc.marking[0].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[0].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[0].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"B\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_B)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[0].time = parseFloat(\n              ccyFormat(totalGrade1Hours(markingCalc))\n            );\n            paymentCalc.marking[0].totalhrs = parseFloat(\n              ccyFormat(totalGrade1Hours(markingCalc))\n            );\n            paymentCalc.marking[0].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[0].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[0].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"C-1\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_C1)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[1].time = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].totalhrs = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[1].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[1].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"C-2\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_C2)\n            );\n            setMarkingCalc([...markingCalc]);\n            break;\n          case \"C-3\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_C3)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[1].time = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].totalhrs = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[1].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[1].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"C-4\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_C4)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[1].time = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].totalhrs = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[1].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[1].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"C-5\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseInt(\n              markingCalc[r].numOfStudents * markingCalc[r].numOfCWPcsPerStudent\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total * MHC_C5)\n            );\n            setMarkingCalc([...markingCalc]);\n            paymentCalc.marking[1].time = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].totalhrs = parseFloat(\n              ccyFormat(totalGrade2Hours(markingCalc))\n            );\n            paymentCalc.marking[1].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[1].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[1].time * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          case \"D\":\n            markingCalc[r][e.target.name] = parseInt(e.target.value);\n            markingCalc[r].grade = g;\n            markingCalc[r].total = parseFloat(\n              markingCalc[r].OralExamHours * MHC_D\n            );\n            markingCalc[r].totalPaidHours = parseFloat(\n              ccyFormat(markingCalc[r].total)\n            );\n            setMarkingCalc([...markingCalc]);\n\n            paymentCalc.marking[2].totalhrs = parseFloat(\n              markingCalc[r].OralExamHours * MHC_D\n            );\n            paymentCalc.marking[2].paymentGrade = g;\n            if (markingCalc[r].grade === grade.grade1) {\n              rate = hourlyRates.rate1;\n            } else {\n              rate = hourlyRates.rate2;\n            }\n            paymentCalc.marking[2].payment = parseFloat(\n              ccyFormat(paymentCalc.marking[2].totalhrs * rate)\n            );\n            setPaymentCalc({ ...paymentCalc });\n            break;\n          default:\n            break;\n        }\n        break;\n      case 6:\n        officeHoursCalc[r][e.target.name] = parseInt(e.target.value);\n        setOfficeHoursCalc([...officeHoursCalc]);\n        paymentCalc.office[0].paymentGrade = g;\n        paymentCalc.office[0].time = totalOfficeHours(officeHoursCalc);\n        paymentCalc.office[0].totalhrs = parseInt(\n          totalOfficeHours(officeHoursCalc) * OFFR\n        );\n        paymentCalc.office[0].payment = parseFloat(\n          paymentCalc.office[0].totalhrs * hourlyRates.rate1\n        );\n        setPaymentCalc({ ...paymentCalc });\n        break;\n      default:\n        setPayment({\n          ...payment,\n          [e.target.name]: e.target.value,\n        });\n    }\n  };\n  const reset = () => {\n    setOfficeHoursCalc([\n      {\n        description: \"No of Seminar Groups per week\",\n        count: 0,\n      },\n      {\n        description: \"No of weeks\",\n        count: 0,\n      },\n    ]);\n    setFinalised(false);\n    payment.user = \"\";\n    setPayment({\n      user: \"\",\n      deliveredBy: \"\",\n      school: \"\",\n      academicYear: \"\",\n      paymentPeriod: \"\",\n      paymentPeriodNum: \"\",\n      paymentPeriodYear: \"\",\n      semester: \"\",\n      QUBID: \"\",\n      account: \"\",\n      projectCode: \"\",\n      projectName: \"\",\n      subAnalysis: \"\",\n      amount: 0.0,\n      student_cohort: true,\n      cohort_id: \"00\",\n      paymentStatus: \"Pending\",\n    });\n    setHourlyRates({\n      rate1: 14.73,\n      rate2: 17.57,\n    });\n    setIsDisabled({\n      panel1: false,\n      panel2: true,\n      panel3: true,\n      resetButton: true,\n      addPaymentButton: true,\n    });\n    setExpanded({ panel1: true, panel2: false, panel3: false });\n    setPaymentCalc({\n      lecture: [\n        {\n          activity: \"Prep - 1st delivery\",\n          paymentGrade: \"\",\n          paymentRate: 0.0,\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Prep - Repeat in same week (one repeat only)\",\n          paymentGrade: \"\",\n          paymentRate: 0.0,\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Delivery\",\n          paymentGrade: \"\",\n          paymentRate: 0.0,\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      seminar: [\n        {\n          activity: \"Prep - 1st delivery (1hr)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Prep - 1st delivery (2hrs)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Prep - Repeat in same week (one repeat only)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Delivery\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      lab: [\n        {\n          activity: \"Prep - 1st delivery (0.5hrs)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Prep - 1st delivery (1hr)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Prep - Repeat in same week (one repeat only)\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Delivery\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      fieldTrip: [\n        {\n          activity: \"Number of contact hours\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      office: [\n        {\n          activity: \"0.5 hours per seminar group per week\",\n          paymentGrade: \"\",\n          time: 0.0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      marking: [\n        {\n          activity: \"Exam / Non Exam / Coursework\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Exam / Non Exam / Coursework\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n        {\n          activity: \"Oral Exam\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n      training: [\n        {\n          activity: \"Number of hours\",\n          paymentGrade: \"\",\n          time: 0,\n          count: 0,\n          totalhrs: 0.0,\n          payment: 0.0,\n        },\n      ],\n    });\n    setMarkingCalc([\n      {\n        range: \"A\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"B\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"C-1\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"C-2\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"C-3\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"C-4\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"C-5\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n      {\n        range: \"D\",\n        grade: \"\",\n        numOfStudents: 0,\n        numOfCWPcsPerStudent: 0,\n        OralExamHours: 0,\n        total: 0,\n        totalPaidHours: 0.0,\n      },\n    ]);\n  };\n  const showForm = () => {\n    setFormShowing(true);\n  };\n  const hideForm = () => {\n    setFormShowing(false);\n  };\n  const SubmitPayment = (e) => {\n    e.preventDefault();\n    const submitArray = [\n      { ...payment },\n      { ...paymentCalc },\n      [...markingCalc],\n      [...officeHoursCalc],\n    ];\n    addPayment(submitArray);\n    history.push(\"/payments\");\n  };\n  const continuePayment = (e) => {\n    e.preventDefault();\n    setIsDisabled({\n      panel1: true,\n      panel2: false,\n      panel3: true,\n      resetButton: false,\n      addPaymentButton: true,\n    });\n    setExpanded({ panel1: false, panel2: true, panel3: false });\n  };\n  const continueMarkingOfficeHours = (e) => {\n    e.preventDefault();\n    setIsDisabled({\n      panel1: true,\n      panel2: true,\n      panel3: false,\n      resetButton: false,\n      addPaymentButton: true,\n    });\n    setExpanded({ panel1: false, panel2: false, panel3: true });\n    setStage(\"SubmitPaymentForm\");\n  };\n  const finalisePayment = (e) => {\n    setStage(\"\");\n    hideForm();\n    setIsDisabled({\n      panel1: true,\n      panel2: true,\n      panel3: true,\n      resetButton: false,\n      addPaymentButton: false,\n    });\n    setExpanded({ panel1: false, panel2: false, panel3: false });\n    setFinalised(true);\n    setPayment({\n      ...payment,\n      amount: ccyFormat(invoiceTotal),\n    });\n  };\n\n  //declarations\n  const invoiceSubtotal =\n    subtotal(paymentCalc.training) +\n    subtotal(paymentCalc.marking) +\n    subtotal(paymentCalc.office) +\n    subtotal(paymentCalc.fieldTrip) +\n    subtotal(paymentCalc.lab) +\n    subtotal(paymentCalc.seminar) +\n    subtotal(paymentCalc.lecture);\n  const totPaidHours = totalPaidHours(markingCalc);\n  const totOfficeHours = totalOfficeHours(officeHoursCalc);\n  // const invoiceTaxes = TAX_RATE * 0;\n  const invoiceTotal = invoiceSubtotal;\n  return (\n    <Fragment>\n      <div>\n        <div>\n          {payments !== null && !loading ? (\n            <Grid container spacing={1}>\n              <Grid item xs={12}>\n                <Paper className={classes.paper}>\n                  <Grid container spacing={1}>\n                    <Grid\n                      item\n                      xs={8}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <div>\n                        <Typography variant=\"h5\">Add New Payment</Typography>\n                        <Typography variant=\"caption\">\n                          Teaching Support Framework - Contract and Payment\n                          Calculator\n                        </Typography>\n                      </div>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={4}\n                      className={clsx(classes.root, classes.right)}\n                    >\n                       <Button\n                        variant=\"contained\"\n                        component={Link}\n                        to=\"/payments/\"\n                        color=\"secondary\"\n                      >\n                        Back to Payments\n                      </Button>\n                      <Button\n                        disabled={isDisabled.resetButton}\n                        variant=\"contained\"\n                        onClick={reset}\n                        color=\"secondary\"\n                      >\n                        Reset\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n              <Grid item xs={12}>\n                <Accordion\n                  defaultExpanded\n                  expanded={isExpanded.panel1}\n                  disabled={isDisabled.panel1}\n                >\n                  <AccordionSummary\n                    aria-controls=\"panel1a-content\"\n                    id=\"panel1a-header\"\n                  >\n                    <Grid container spacing={1}>\n                      <Grid\n                        item\n                        xs={6}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <Typography variant=\"h5\">Set Payment</Typography>\n                      </Grid>\n                    </Grid>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Grid item xs={12}>\n                      <form onSubmit={(e) => continuePayment(e)}>\n                        <Grid container spacing={1}>\n                          <Grid\n                            item\n                            xs={2}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={\n                                payment.deliveredBy.length === 0 ? true : false\n                              }\n                              helperText={\n                                payment.deliveredBy.length === 0\n                                  ? \"Please select a value\"\n                                  : \"\"\n                              }\n                              required\n                              className={classes.textField}\n                              fullWidth\n                              select\n                              variant=\"outlined\"\n                              name=\"deliveredBy\"\n                              label=\"Delivered By\"\n                              value={payment.deliveredBy}\n                              onChange={(e) => onChange(e, 1)}\n                            >\n                              {deliveryCategory.map((option) => (\n                                <MenuItem key={option.id} value={option.value}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={2}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={\n                                payment.semester.length === 0 ? true : false\n                              }\n                              helperText={\n                                payment.semester.length === 0\n                                  ? \"Please select a semester\"\n                                  : \"\"\n                              }\n                              required\n                              className={classes.textField}\n                              fullWidth\n                              select\n                              variant=\"outlined\"\n                              name=\"semester\"\n                              label=\"Semester\"\n                              value={payment.semester}\n                              onChange={(e) => onChange(e)}\n                            >\n                              {semester.map((option) => (\n                                <MenuItem key={option.id} value={option.value}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={2}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={\n                                payment.academicYear.length === 0 ? true : false\n                              }\n                              helperText={\n                                payment.academicYear.length === 0\n                                  ? \"Please select an academic year\"\n                                  : \"\"\n                              }\n                              required\n                              className={classes.textField}\n                              fullWidth\n                              select\n                              variant=\"outlined\"\n                              name=\"academicYear\"\n                              label=\"Academic Year\"\n                              value={payment.academicYear}\n                              onChange={(e) => onChange(e)}\n                            >\n                              {academicYear.map((option) => (\n                                <MenuItem key={option.id} value={option.value}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={3}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={\n                                payment.paymentPeriod.length === 0\n                                  ? true\n                                  : false\n                              }\n                              helperText={\n                                payment.paymentPeriod.length === 0\n                                  ? \"Please select a month\"\n                                  : \"\"\n                              }\n                              required\n                              fullWidth\n                              className={classes.textField}\n                              select\n                              variant=\"outlined\"\n                              name=\"paymentPeriod\"\n                              label=\"Payment Month\"\n                              value={payment.paymentPeriod}\n                              onChange={(e) => onChange(e, 2)}\n                            >\n                              {monthWords.map((option) => (\n                                <MenuItem key={option.id} value={option.id}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={3}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={\n                                payment.paymentPeriodYear.length === 0\n                                  ? true\n                                  : false\n                              }\n                              helperText={\n                                payment.paymentPeriodYear.length === 0\n                                  ? \"Please select a payment year\"\n                                  : \"\"\n                              }\n                              required\n                              fullWidth\n                              className={classes.textField}\n                              select\n                              variant=\"outlined\"\n                              name=\"paymentPeriodYear\"\n                              label=\"Payment Year\"\n                              value={payment.paymentPeriodYear}\n                              onChange={(e) => onChange(e, 2)}\n                            >\n                              {yearsDD.map((option) => (\n                                <MenuItem\n                                  key={option.value}\n                                  value={option.value}\n                                >\n                                  {option.value}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={6}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={payment.user.length === 0 ? true : false}\n                              helperText={\n                                payment.user.length === 0\n                                  ? \"Please select a user\"\n                                  : \"\"\n                              }\n                              required\n                              fullWidth\n                              className={classes.textField}\n                              select\n                              variant=\"outlined\"\n                              name=\"user\"\n                              label=\"Name\"\n                              value={payment.user}\n                              onChange={(e) => onChange(e, 2)}\n                            >\n                              {userSelect.map((option) => (\n                                <MenuItem key={option._id} value={option._id}>\n                                  {`${option.firstName} ${option.lastName} (${option.QUBID})`}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={6}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              error={payment.school.length === 0 ? true : false}\n                              helperText={\n                                payment.school.length === 0\n                                  ? \"Please select a school\"\n                                  : \"\"\n                              }\n                              required\n                              fullWidth\n                              className={classes.textField}\n                              select\n                              variant=\"outlined\"\n                              name=\"school\"\n                              label=\"School\"\n                              value={payment.school}\n                              onChange={(e) => onChange(e)}\n                            >\n                              {schoolMenu.map((option) => (\n                                <MenuItem key={option.id} value={option.value}>\n                                  {option.label}\n                                </MenuItem>\n                              ))}\n                            </TextField>\n                          </Grid>\n                        </Grid>\n                        <Grid container spacing={1}>\n                          <Grid\n                            item\n                            xs={6}\n                            className={clsx(classes.root, classes.left)}\n                          >\n                            <TextField\n                              fullWidth\n                              className={classes.textField}\n                              variant=\"outlined\"\n                              name=\"projectName\"\n                              label=\"Module\"\n                              value={payment.projectName}\n                              onChange={(e) => onChange(e)}\n                            ></TextField>\n                          </Grid>\n                          <Grid\n                            item\n                            xs={6}\n                            className={clsx(classes.root, classes.right)}\n                          >\n                            \n                            <Button\n                              type=\"submit\"\n                              variant=\"contained\"\n                              color=\"primary\"\n                            >\n                              Continue\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </form>\n                    </Grid>\n                  </AccordionDetails>\n                </Accordion>\n                <Accordion\n                  expanded={isExpanded.panel2}\n                  disabled={isDisabled.panel2}\n                >\n                  <AccordionSummary\n                    aria-controls=\"panel2a-content\"\n                    id=\"panel2a-header\"\n                  >\n                    <Grid container spacing={1}>\n                      <Grid\n                        item\n                        xs={6}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <Typography variant=\"h5\">\n                          {\"Marking & Office Hours\"}\n                        </Typography>\n                      </Grid>\n                      <Grid\n                        item\n                        xs={6}\n                        className={clsx(classes.root, classes.right)}\n                      >\n                        <HtmlTooltip\n                          placement=\"bottom-end\"\n                          title={\n                            <React.Fragment>\n                              <MarkingRange />\n                            </React.Fragment>\n                          }\n                        >\n                          <InfoIcon></InfoIcon>\n                        </HtmlTooltip>\n                      </Grid>\n                    </Grid>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <form onSubmit={(e) => continueMarkingOfficeHours(e)}>\n                      <Grid item xs={12}>\n                        <TableContainer component={Paper}>\n                          <Table\n                            className={classes.table}\n                            aria-label=\"spanning table\"\n                            size=\"small\"\n                          >\n                            <TableHead>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\" colSpan={4}>\n                                  Marking hours Calculation (Exam / Non Exam /\n                                  Coursework)\n                                </TableCell>\n\n                                <TableCell />\n                                <TableCell />\n                                <TableCell />\n                              </TableRow>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\">Range</TableCell>\n                                <TableCell align=\"center\">\n                                  Payment Grade\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  No of Students\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  No of Pieces of Coursework per Student\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  Oral Exam Contact Hours\n                                </TableCell>\n                                <TableCell align=\"center\">Total</TableCell>\n                                <TableCell align=\"center\">\n                                  Total Paid hours\n                                </TableCell>\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {markingCalc.map((row, i) => (\n                                <TableRow key={i}>\n                                  <TableCell align=\"left\">\n                                    {row.range}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    {row.range === \"A\" || row.range === \"B\"\n                                      ? grade.grade1\n                                      : grade.grade2}\n                                  </TableCell>\n                                  {row.range === \"D\" ? (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        disabled\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        disableUnderline={true}\n                                        variant=\"filled\"\n                                        name=\"time\"\n                                      />\n                                    </TableCell>\n                                  ) : (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        classes={{\n                                          input: classes.inputEdit,\n                                        }}\n                                        variant=\"filled\"\n                                        name=\"numOfStudents\"\n                                        value={row.numOfStudents}\n                                        onChange={(e) => {\n                                          row.range === \"A\" || row.range === \"B\"\n                                            ? onChange(\n                                                e,\n                                                5,\n                                                grade.grade1,\n                                                i,\n                                                row.range\n                                              )\n                                            : onChange(\n                                                e,\n                                                5,\n                                                grade.grade2,\n                                                i,\n                                                row.range\n                                              );\n                                        }}\n                                      />\n                                    </TableCell>\n                                  )}\n                                  {row.range === \"D\" ? (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        disabled\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        disableUnderline={true}\n\n                                        variant=\"filled\"\n                                        name=\"time\"\n                                      />\n                                    </TableCell>\n                                  ) : (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        classes={{\n                                          input: classes.inputEdit,\n                                        }}\n                                        variant=\"filled\"\n                                        name=\"numOfCWPcsPerStudent\"\n                                        value={row.numOfCWPcsPerStudent}\n                                        onChange={(e) => {\n                                          row.range === \"A\" || row.range === \"B\"\n                                            ? onChange(\n                                                e,\n                                                5,\n                                                grade.grade1,\n                                                i,\n                                                row.range\n                                              )\n                                            : onChange(\n                                                e,\n                                                5,\n                                                grade.grade2,\n                                                i,\n                                                row.range\n                                              );\n                                        }}\n                                      />\n                                    </TableCell>\n                                  )}\n                                  {row.range !== \"D\" ? (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        disabled\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        disableUnderline={true}\n                                        \n                                        variant=\"filled\"\n                                        name=\"time\"\n                                      />\n                                    </TableCell>\n                                  ) : (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        classes={{\n                                          input: classes.inputEdit,\n                                        }}\n                                        variant=\"filled\"\n                                        name=\"OralExamHours\"\n                                        value={row.OralExamHours}\n                                        onChange={(e) => {\n                                          row.range === \"A\" || row.range === \"B\"\n                                            ? onChange(\n                                                e,\n                                                5,\n                                                grade.grade1,\n                                                i,\n                                                row.range\n                                              )\n                                            : onChange(\n                                                e,\n                                                5,\n                                                grade.grade2,\n                                                i,\n                                                row.range\n                                              );\n                                        }}\n                                      />\n                                    </TableCell>\n                                  )}\n                                  {row.range !== \"D\" ? (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        disabled\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        disableUnderline={true}\n                                        classes={{\n                                          input: classes.inputCenter,\n                                        }}\n                                        variant=\"filled\"\n                                        name=\"total\"\n                                        value={\n                                          row.numOfCWPcsPerStudent *\n                                          row.numOfStudents\n                                        }\n                                        onChange={(e) => {\n                                          row.range === \"A\" || row.range === \"B\"\n                                            ? onChange(\n                                                e,\n                                                5,\n                                                grade.grade1,\n                                                i,\n                                                row.range\n                                              )\n                                            : onChange(\n                                                e,\n                                                5,\n                                                grade.grade2,\n                                                i,\n                                                row.range\n                                              );\n                                        }}\n                                      />\n                                    </TableCell>\n                                  ) : (\n                                    <TableCell align=\"center\">\n                                      <Input\n                                        disabled\n                                        type=\"number\"\n                                        size=\"small\"\n                                        margin=\"dense\"\n                                        disableUnderline={true}\n                                        classes={{\n                                          input: classes.inputCenter,\n                                        }}\n                                        variant=\"filled\"\n                                        name=\"total\"\n                                        value={row.OralExamHours}\n                                        onChange={(e) => {\n                                          row.range === \"A\" || row.range === \"B\"\n                                            ? onChange(\n                                                e,\n                                                5,\n                                                grade.grade1,\n                                                i,\n                                                row.range\n                                              )\n                                            : onChange(\n                                                e,\n                                                5,\n                                                grade.grade2,\n                                                i,\n                                                row.range\n                                              );\n                                        }}\n                                      />\n                                    </TableCell>\n                                  )}\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"totalhrs\"\n                                      value={row.totalPaidHours}\n                                      onChange={(e) => {\n                                        row.range === \"A\" || row.range === \"B\"\n                                          ? onChange(\n                                              e,\n                                              5,\n                                              grade.grade1,\n                                              i,\n                                              row.range\n                                            )\n                                          : onChange(\n                                              e,\n                                              5,\n                                              grade.grade2,\n                                              i,\n                                              row.range\n                                            );\n                                      }}\n                                    />\n                                  </TableCell>\n                                </TableRow>\n                              ))}\n                              <TableRow key={uuidv4()} selected={true}>\n                                <TableCell colSpan={6} align=\"right\">\n                                  Total Paid Hours\n                                </TableCell>\n                                <TableCell align=\"center\">\n                                  {parseFloat(ccyFormat(totPaidHours))}\n                                </TableCell>\n                              </TableRow>\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                        <TableContainer\n                          className={clsx(classes.spacer)}\n                          component={Paper}\n                        >\n                          <Table\n                            className={clsx(classes.table)}\n                            aria-label=\"spanning table\"\n                            size=\"small\"\n                          >\n                            <TableHead>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\">\n                                  Office hours Calculation\n                                </TableCell>\n                                <TableCell />\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              {officeHoursCalc.map((row, i) => (\n                                <TableRow key={i}>\n                                  <TableCell align=\"left\">\n                                    {row.description}\n                                  </TableCell>\n                                  <TableCell align=\"right\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"count\"\n                                      value={row.count}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          6,\n                                          grade.grade1,\n                                          i,\n                                          row.range\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                </TableRow>\n                              ))}\n                              <TableRow key={uuidv4()} selected={true}>\n                                <TableCell align=\"left\">Total Hours</TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    disabled\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    disableUnderline={true}\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"count\"\n                                    value={parseFloat(\n                                      ccyFormat(totOfficeHours)\n                                    )}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                        <TableContainer\n                          className={clsx(classes.spacer)}\n                          component={Paper}\n                        >\n                          <Table\n                            className={clsx(classes.table)}\n                            aria-label=\"spanning table\"\n                            size=\"small\"\n                          >\n                            <TableHead>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\">\n                                  Lab Supervision/Demonstrating\n                                </TableCell>\n                                <TableCell />\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\">\n                                  {paymentCalc.lab[3].activity}\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    classes={{\n                                      input: classes.inputEdit,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"totalhrs\"\n                                    value={paymentCalc.lab[3].totalhrs}\n                                    onChange={(e) =>\n                                      onChange(\n                                        e,\n                                        4,\n                                        grade.grade1,\n                                        paymentCalc.lab[3]\n                                      )\n                                    }\n                                  />\n                                </TableCell>\n                              </TableRow>\n                              <TableRow key={uuidv4()} selected={true}>\n                                <TableCell align=\"left\">Total Hours</TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    disabled\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    disableUnderline={true}\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"count\"\n                                    value={paymentCalc.lab[3].totalhrs}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                        <Grid container spacing={1}>\n                          <Grid\n                            item\n                            xs={12}\n                            className={clsx(classes.root, classes.right)}\n                          >\n                             <div>\n                        <Typography variant=\"caption\">\n                          All values entered here will be calculated on the next view<p>Please check you have entered the correct details before proceeding</p> \n                        </Typography>\n                      </div>\n                            <Button\n                              disabled={\n                                isDisabled.panel2 ||\n                                (totOfficeHours === 0 &&\n                                  totPaidHours === 0 &&\n                                  paymentCalc.lab[3].totalhrs === 0)\n                              }\n                              variant=\"contained\"\n                              type=\"submit\"\n                              color=\"primary\"\n                            >\n                              Continue\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                    </form>\n                  </AccordionDetails>\n                </Accordion>\n                <Accordion\n                  expanded={isExpanded.panel3}\n                  disabled={isDisabled.panel3}\n                >\n                  <AccordionSummary\n                    aria-controls=\"panel3a-content\"\n                    id=\"panel3a-header\"\n                  >\n                    <Grid container spacing={1}>\n                      <Grid\n                        item\n                        xs={6}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <Typography variant=\"h5\">\n                          Enter Payment Details\n                        </Typography>\n                      </Grid>\n                      <Grid\n                        item\n                        xs={3}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <TextField\n                          fullWidth\n                          disabled\n                          size=\"small\"\n                          className={classes.textField}\n                          variant=\"outlined\"\n                          name=\"rate1\"\n                          label={`${grade.grade1} Rate`}\n                          value={hourlyRates.rate1}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                £\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </Grid>\n                      <Grid\n                        item\n                        xs={3}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <TextField\n                          fullWidth\n                          disabled\n                          size=\"small\"\n                          className={classes.textField}\n                          variant=\"outlined\"\n                          name=\"rate2\"\n                          label={`${grade.grade2} Rate`}\n                          value={hourlyRates.rate2}\n                          InputProps={{\n                            startAdornment: (\n                              <InputAdornment position=\"start\">\n                                £\n                              </InputAdornment>\n                            ),\n                          }}\n                        />\n                      </Grid>\n                    </Grid>\n                  </AccordionSummary>\n                  <AccordionDetails>\n                    <Grid item xs={12}>\n                      <TableContainer component={Paper}>\n                        <Table\n                          className={classes.table}\n                          aria-label=\"spanning table\"\n                          size=\"small\"\n                        >\n                          <TableHead>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\" colSpan={2}>\n                                Activity\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                Payment Grade\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                Delivery/ Completion time (hrs)\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                No of lectures/ Seminars/ Tutorials\n                              </TableCell>\n                              <TableCell align=\"center\">Total hours</TableCell>\n                              <TableCell align=\"center\">Payment £</TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {grade.grade2 !== \"Band B\" ? (\n                              <>\n                                <TableRow key={uuidv4()}>\n                                  <TableCell rowSpan={3}>Lecture</TableCell>\n                                  <TableCell align=\"left\">\n                                    {paymentCalc.lecture[0].activity}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    {grade.grade2}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                      value={paymentCalc.lecture[0].time}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[0]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"count\"\n                                      value={paymentCalc.lecture[0].count}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[0]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"totalhrs\"\n                                      value={\n                                        paymentCalc.lecture[0].count *\n                                        paymentCalc.lecture[0].time\n                                      }\n                                      onChangeCapture={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[0]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                    paymentCalc.lecture[0].payment\n                                  )}`}</TableCell>\n                                </TableRow>\n                                <TableRow key={uuidv4()}>\n                                  <TableCell align=\"left\">\n                                    {paymentCalc.lecture[1].activity}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    {grade.grade2}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                      value={paymentCalc.lecture[1].time}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[1]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"count\"\n                                      value={paymentCalc.lecture[1].count}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[1]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"totalhrs\"\n                                      value={\n                                        paymentCalc.lecture[1].count *\n                                        paymentCalc.lecture[1].time\n                                      }\n                                      onChangeCapture={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[1]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                    paymentCalc.lecture[1].payment\n                                  )}`}</TableCell>\n                                </TableRow>\n                                <TableRow key={uuidv4()}>\n                                  <TableCell align=\"left\">\n                                    {paymentCalc.lecture[2].activity}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    {grade.grade2}\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                      value={null}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[2]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"count\"\n                                      value={null}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          3,\n                                          grade.grade2,\n                                          paymentCalc.lecture[2]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputEdit,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"totalhrs\"\n                                      value={paymentCalc.lecture[2].totalhrs}\n                                      onChange={(e) =>\n                                        onChange(\n                                          e,\n                                          4,\n                                          grade.grade2,\n                                          paymentCalc.lecture[2]\n                                        )\n                                      }\n                                    />\n                                  </TableCell>\n                                  <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                    paymentCalc.lecture[2].payment\n                                  )}`}</TableCell>\n                                </TableRow>\n                                <TableRow key={uuidv4()} selected={true}>\n                                  <TableCell colSpan={6} align=\"left\">\n                                    Total Lectures\n                                  </TableCell>\n                                  <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                    subtotal(paymentCalc.lecture)\n                                  )}`}</TableCell>\n                                </TableRow>\n                              </>\n                            ) : (\n                              \"\"\n                            )}\n                            <TableRow key={uuidv4()}>\n                              <TableCell rowSpan={4}>\n                                Seminar / Tutorial / Oral Classes\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {paymentCalc.seminar[0].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.seminar[0].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.seminar[0].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.seminar[0].count *\n                                    paymentCalc.seminar[0].time\n                                  }\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.seminar[0].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.seminar[1].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.seminar[1].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.seminar[1].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.seminar[1].count *\n                                    paymentCalc.seminar[1].time\n                                  }\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.seminar[1].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.seminar[2].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.seminar[2].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.seminar[2].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.seminar[2].count *\n                                    paymentCalc.seminar[2].time\n                                  }\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.seminar[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.seminar[2].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.seminar[3].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.seminar[3].totalhrs}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      4,\n                                      grade.grade2,\n                                      paymentCalc.seminar[3]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.seminar[3].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"left\">\n                                Total Seminar/Tutorial/Oral Classes\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                subtotal(paymentCalc.seminar)\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell rowSpan={4}>\n                                Lab Supervision / Demonstrating\n                              </TableCell>\n                              <TableCell align=\"left\">\n                                {paymentCalc.lab[0].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.lab[0].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.lab[0].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.lab[0].count *\n                                    paymentCalc.lab[0].time\n                                  }\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.lab[0].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.lab[1].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.lab[1].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.lab[1].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.lab[1].count *\n                                    paymentCalc.lab[1].time\n                                  }\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.lab[1].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.lab[2].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.lab[2].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={paymentCalc.lab[2].count}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={\n                                    paymentCalc.lab[2].count *\n                                    paymentCalc.lab[2].time\n                                  }\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.lab[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.lab[2].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.lab[3].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.lab[3].totalhrs}\n                                  disableUnderline={true}\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.lab[3].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"left\">\n                                Total Lab Supervision/Demonstrating\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                subtotal(paymentCalc.lab)\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell>Field Trip Assistance</TableCell>\n                              <TableCell align=\"left\">\n                                {paymentCalc.fieldTrip[0].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell />\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.fieldTrip[0].totalhrs}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      4,\n                                      grade.grade1,\n                                      paymentCalc.fieldTrip[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.fieldTrip[0].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"left\">\n                                Total Field Trip Assistance\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                subtotal(paymentCalc.fieldTrip)\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell>Office Hours</TableCell>\n                              <TableCell align=\"left\">\n                                {paymentCalc.office[0].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.office[0].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.office[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.office[0].totalhrs}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.office[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.office[0].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"left\">\n                                Total Office Hours\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                subtotal(paymentCalc.office)\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell rowSpan={3}>Marking</TableCell>\n                              <TableCell align=\"left\">\n                                {paymentCalc.marking[0].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.marking[0].time}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.marking[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.marking[0].time}\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.marking[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.marking[0].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.marking[1].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"time\"\n                                  value={paymentCalc.marking[1].time}\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade2,\n                                      paymentCalc.marking[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.marking[1].time}\n                                  onChangeCapture={(e) =>\n                                    onChange(\n                                      e,\n                                      3,\n                                      grade.grade1,\n                                      paymentCalc.marking[1]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.marking[1].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                {paymentCalc.marking[2].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade2}\n                              </TableCell>\n                              <TableCell />\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.marking[2].totalhrs}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      4,\n                                      grade.grade2,\n                                      paymentCalc.marking[2]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.marking[2].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"left\">\n                                Total Marking\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                subtotal(paymentCalc.marking)\n                              )}`}</TableCell>\n                            </TableRow>\n                            {grade.grade2 !== \"Band B\" ?\n                                <>\n                            <TableRow key={uuidv4()}>\n                              <TableCell>Training</TableCell>\n                              <TableCell align=\"left\">\n                                {paymentCalc.training[0].activity}\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {grade.grade1}\n                              </TableCell>\n                              <TableCell />\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                <Input\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  classes={{\n                                    input: classes.inputEdit,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"totalhrs\"\n                                  value={paymentCalc.training[0].totalhrs}\n                                  onChange={(e) =>\n                                    onChange(\n                                      e,\n                                      4,\n                                      grade.grade1,\n                                      paymentCalc.training[0]\n                                    )\n                                  }\n                                />\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                paymentCalc.training[0].payment\n                              )}`}</TableCell>\n                            </TableRow>\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"left\">\n                                Total Training\n                              </TableCell>\n                              <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                                subtotal(paymentCalc.training)\n                              )}`}</TableCell>\n                            </TableRow>\n                                </> : \"\" }\n                            <TableRow key={uuidv4()}>\n                              <TableCell rowSpan={3} />\n                              <TableCell />\n                              <TableCell />\n                              <TableCell colSpan={3}></TableCell>\n                              <TableCell align=\"center\">\n                                {/* {`£${ccyFormat(invoiceSubtotal)}`} */}\n                              </TableCell>\n                            </TableRow>\n                            {/* <TableRow key={uuidv4()}>\n                              <TableCell />\n                              <TableCell />\n                              <TableCell>Tax</TableCell>\n                              <TableCell align=\"center\">{`${(\n                                -TAX_RATE * 100\n                              ).toFixed(0)} %`}</TableCell>\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                {`£${ccyFormat(invoiceTaxes)}`}\n                              </TableCell>\n                            </TableRow> */}\n                            <TableRow key={uuidv4()}>\n                              <TableCell />\n                              <TableCell />\n                              <TableCell colSpan={3}>Total</TableCell>\n                              <TableCell align=\"center\">\n                                {`£${ccyFormat(invoiceTotal)}`}\n                              </TableCell>\n                            </TableRow>\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                      <Grid container spacing={4}>\n                        <Grid item xs={12} className={classes.finalButton}>\n                          <Button\n                            fullWidth\n                            disabled={isDisabled.panel3 || invoiceTotal === 0}\n                            variant=\"contained\"\n                            onClick={showForm}\n                            color=\"primary\"\n                          >\n                            Finalise Payment\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </AccordionDetails>\n                </Accordion>\n              </Grid>\n              {finalised ? (\n                <Grid item xs={12}>\n                  <Paper className={classes.paper}>\n                    <Grid container spacing={1}>\n                      <Grid\n                        item\n                        xs={8}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <div>\n                          <Typography variant=\"h5\">\n                            Submit New Payment\n                          </Typography>\n                          <Typography variant=\"caption\">\n                            A new Payment request to the value of{\" \"}\n                            {`${CUR}${ccyFormat(invoiceTotal)}`} will be\n                            submitted\n                          </Typography>\n                        </div>\n                      </Grid>\n                      <Grid\n                        item\n                        xs={4}\n                        className={clsx(classes.root, classes.right)}\n                      >\n                        <Button\n                          disabled={isDisabled.addPaymentButton}\n                          variant=\"contained\"\n                          color=\"primary\"\n                          onClick={SubmitPayment}\n                        >\n                          Submit Payment\n                        </Button>\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                </Grid>\n              ) : (\n                \"\"\n              )}\n              <Grid container spacing={10}>\n                <Grid\n                  item\n                  xs={12}\n                  className={clsx(classes.footer, classes.left)}\n                >\n                  {\" \"}\n                </Grid>\n              </Grid>\n            </Grid>\n          ) : (\n            <ProgressIndicator />\n          )}\n        </div>\n      </div>\n      {formShowing && (\n        <Dialog\n          finalisePayment={finalisePayment}\n          hideForm={hideForm}\n          stage={stage}\n          invoiceTotal={ccyFormat(invoiceTotal)}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default CreatePayment;\n","import React, { useContext, useEffect } from \"react\";\n//Navigation\nimport NavButtonPaymentsAdd from \"../layouts/NavButtonPaymentsAdd\"\n//Components\nimport CreatePayments from \"../payments/CreatePayments\"\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n\n\nconst PaymentsCreate = () => {\n  const authContext = useContext(AuthContext);\n  const userAdminContext = useContext(UserAdminContext);\n  const { activeUsers, getActiveUsers } = userAdminContext;\n  const { loadUser } = authContext\n\n  useEffect(() => {\n    loadUser();\n    getActiveUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <>\n      <NavButtonPaymentsAdd />\n      <CreatePayments activeUsers={activeUsers}/>\n    </>\n  );\n};\n\nexport default PaymentsCreate;\n","import React, { useContext, Fragment, useEffect, useState } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\nimport { v4 as uuidv4 } from \"uuid\";\n\n//Context\nimport PaymentContext from \"../../context/payment/paymentContext\";\n//Components\nimport {\n  Grid,\n  Paper,\n  Button,\n  Typography,\n  TextField,\n  InputAdornment,\n  Accordion,\n  AccordionSummary,\n  AccordionDetails,\n  Input,\n  Tooltip,\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TableRow,\n} from \"@material-ui/core\";\n\nimport { useSnackbar } from \"notistack\";\nimport clsx from \"clsx\";\n\nconst CUR = \"£\";\nconst AC1_RATE = 14.73;\nconst AC2_RATE = 17.57;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"right\",\n    color: theme.palette.text.secondary,\n  },\n  right: {\n    textAlign: \"right\",\n  },\n  left: {\n    textAlign: \"left\",\n  },\n  table: {\n    minWidth: 700,\n  },\n  spacer: {\n    marginTop: theme.spacing(2),\n  },\n  textField: {\n    \"& > *\": {},\n  },\n  footer: {\n    minHeight: 100,\n  },\n  inputField: {\n    textAlign: \"center\",\n  },\n  inputCenter: {\n    textAlign: \"center\",\n    color: \"black\",\n    fontSize: theme.typography.pxToRem(14),\n  },\n  finalButton: {\n    margin: theme.spacing(2),\n  },\n}));\n\nfunction ccyFormat(num) {\n  return `${num.toFixed(2)}`;\n}\n\nfunction subtotal(totals) {\n  return totals.map(({ payment }) => payment).reduce((sum, i) => sum + i, 0);\n}\n\nfunction totalPaidHours(totals) {\n  return totals.reduce((sum, i) => sum + i.totalPaidHours, 0);\n}\n\nfunction totalOfficeHours(totals) {\n  return totals.reduce((sum, i) => sum * i.count, 1);\n}\n\nconst ViewPayment = (props) => {\n  const { current, isAdmin } = props;\n  const classes = useStyles();\n  //State\n  const [payment, setPayment] = useState(current);\n  const [markingCalc, setMarkingCalc] = useState([...current.paymentDetail.markingCalc]);\n  const [officeHoursCalc, setOfficeHoursCalc] = useState([...current.paymentDetail.officeHours]);\n  const [paymentCalc, setPaymentCalc] = useState(current.paymentDetail.paymentCalc);\n  const [hourlyRates, setHourlyRates] = useState({\n    rate1: AC1_RATE,\n    rate2: AC2_RATE,\n  });\n  const [grade, setGrade] = useState({\n    grade1: \"AC1\",\n    grade2: \"AC2\",\n  });\n\n  //declarations\n  const invoiceSubtotal =\n    subtotal(paymentCalc.training) +\n    subtotal(paymentCalc.marking) +\n    subtotal(paymentCalc.office) +\n    subtotal(paymentCalc.fieldTrip) +\n    subtotal(paymentCalc.lab) +\n    subtotal(paymentCalc.seminar) +\n    subtotal(paymentCalc.lecture);\n  const totPaidHours = totalPaidHours(markingCalc);\n  const totOfficeHours = totalOfficeHours(officeHoursCalc);\n  //   const invoiceTaxes = TAX_RATE * invoiceSubtotal;\n  const invoiceTotal = invoiceSubtotal;\n  return (\n    <Fragment>\n      <div>\n        <div>\n          <Grid container spacing={1}>\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>\n                <Grid container spacing={1}>\n                  <Grid\n                    item\n                    xs={8}\n                    className={clsx(classes.root, classes.left)}\n                  >\n                    <div>\n                      <Typography variant=\"h5\">View Payment</Typography>\n                      <Typography variant=\"caption\">\n                        Teaching Support Framework - Contract and Payment\n                        Calculator\n                      </Typography>\n                    </div>\n                  </Grid>\n                  <Grid\n                    item\n                    xs={4}\n                    className={clsx(classes.root, classes.right)}\n                  >\n                    {isAdmin && <Button\n                      variant=\"contained\"\n                      component={Link}\n                      to=\"/payments/\"\n                      color=\"secondary\"\n                    >\n                      Back to Payments\n                    </Button>}\n                  </Grid>\n                </Grid>\n              </Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Accordion expanded>\n                {/* <AccordionSummary\n                    aria-controls=\"panel2a-content\"\n                    id=\"panel2a-header\"\n                  >\n                    <Grid container spacing={1}>\n                      <Grid\n                        item\n                        xs={6}\n                        className={clsx(classes.root, classes.left)}\n                      >\n                        <Typography variant=\"h5\">\n                          {\"Marking & Office Hours\"}\n                        </Typography>\n                      </Grid>\n                    </Grid>\n                  </AccordionSummary> */}\n                <AccordionSummary\n                  aria-controls=\"panel3a-content\"\n                  id=\"panel3a-header\"\n                >\n                  <Grid container spacing={1}>\n                    <Grid\n                      item\n                      xs={6}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <Typography variant=\"h5\">\n                        {\"Marking & Office Hours\"}\n                      </Typography>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={3}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <TextField\n                        fullWidth\n                        disabled\n                        size=\"small\"\n                        className={classes.textField}\n                        variant=\"outlined\"\n                        name=\"rate1\"\n                        label={`${grade.grade1} Rate`}\n                        value={hourlyRates.rate1}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">£</InputAdornment>\n                          ),\n                        }}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      xs={3}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <TextField\n                        fullWidth\n                        disabled\n                        size=\"small\"\n                        className={classes.textField}\n                        variant=\"outlined\"\n                        name=\"rate2\"\n                        label={`${grade.grade2} Rate`}\n                        value={hourlyRates.rate2}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">£</InputAdornment>\n                          ),\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <form>\n                    <Grid item xs={12}>\n                      <TableContainer component={Paper}>\n                        <Table\n                          className={classes.table}\n                          aria-label=\"spanning table\"\n                          size=\"small\"\n                        >\n                          <TableHead>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\" colSpan={4}>\n                                Marking hours Calculation (Exam / Non Exam /\n                                Coursework)\n                              </TableCell>\n\n                              <TableCell />\n                              <TableCell />\n                              <TableCell />\n                            </TableRow>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">Range</TableCell>\n                              <TableCell align=\"center\">\n                                Payment Grade\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                No of Students\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                No of Pieces of Coursework per Student\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                Oral Exam Contact Hours\n                              </TableCell>\n                              <TableCell align=\"center\">Total</TableCell>\n                              <TableCell align=\"center\">\n                                Total Paid hours\n                              </TableCell>\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {payment.paymentDetail.markingCalc.map((row, i) => (\n                              <TableRow key={i}>\n                                <TableCell align=\"left\">{row.range}</TableCell>\n                                <TableCell align=\"center\">\n                                  {row.range === \"A\" || row.range === \"B\"\n                                    ? grade.grade1\n                                    : grade.grade2}\n                                </TableCell>\n                                {row.range === \"D\" ? (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      disableUnderline={true}\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                    />\n                                  </TableCell>\n                                ) : (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      disableUnderline={true}\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"numOfStudents\"\n                                      value={row.numOfStudents}\n                                    />\n                                  </TableCell>\n                                )}\n                                {row.range === \"D\" ? (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                    />\n                                  </TableCell>\n                                ) : (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      disableUnderline={true}\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"numOfCWPcsPerStudent\"\n                                      value={row.numOfCWPcsPerStudent}\n                                    />\n                                  </TableCell>\n                                )}\n                                {row.range !== \"D\" ? (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"time\"\n                                    />\n                                  </TableCell>\n                                ) : (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      disableUnderline={true}\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"OralExamHours\"\n                                      value={row.OralExamHours}\n                                    />\n                                  </TableCell>\n                                )}\n                                {row.range !== \"D\" ? (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"total\"\n                                      value={\n                                        row.numOfCWPcsPerStudent *\n                                        row.numOfStudents\n                                      }\n                                    />\n                                  </TableCell>\n                                ) : (\n                                  <TableCell align=\"center\">\n                                    <Input\n                                      disabled\n                                      type=\"number\"\n                                      size=\"small\"\n                                      margin=\"dense\"\n                                      disableUnderline={true}\n                                      classes={{\n                                        input: classes.inputCenter,\n                                      }}\n                                      variant=\"filled\"\n                                      name=\"total\"\n                                      value={row.OralExamHours}\n                                    />\n                                  </TableCell>\n                                )}\n                                <TableCell align=\"center\">\n                                  <Input\n                                    disabled\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    disableUnderline={true}\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"totalhrs\"\n                                    value={row.totalPaidHours}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell colSpan={6} align=\"right\">\n                                Total Paid Hours\n                              </TableCell>\n                              <TableCell align=\"center\">\n                                {parseFloat(ccyFormat(totPaidHours))}\n                              </TableCell>\n                            </TableRow>\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                      <TableContainer\n                        className={clsx(classes.spacer)}\n                        component={Paper}\n                      >\n                        <Table\n                          className={clsx(classes.table)}\n                          aria-label=\"spanning table\"\n                          size=\"small\"\n                        >\n                          <TableHead>\n                            <TableRow key={uuidv4()}>\n                              <TableCell align=\"left\">\n                                Office hours Calculation\n                              </TableCell>\n                              <TableCell />\n                            </TableRow>\n                          </TableHead>\n                          <TableBody>\n                            {officeHoursCalc.map((row, i) => (\n                              <TableRow key={i}>\n                                <TableCell align=\"left\">\n                                  {row.description}\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    disabled\n                                    disableUnderline={true}\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"count\"\n                                    value={row.count}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            ))}\n                            <TableRow key={uuidv4()} selected={true}>\n                              <TableCell align=\"left\">Total Hours</TableCell>\n                              <TableCell align=\"right\">\n                                <Input\n                                  disabled\n                                  type=\"number\"\n                                  size=\"small\"\n                                  margin=\"dense\"\n                                  disableUnderline={true}\n                                  classes={{\n                                    input: classes.inputCenter,\n                                  }}\n                                  variant=\"filled\"\n                                  name=\"count\"\n                                  value={parseFloat(ccyFormat(totOfficeHours))}\n                                />\n                              </TableCell>\n                            </TableRow>\n                          </TableBody>\n                        </Table>\n                      </TableContainer>\n                      <TableContainer\n                          className={clsx(classes.spacer)}\n                          component={Paper}\n                        >\n                          <Table\n                            className={clsx(classes.table)}\n                            aria-label=\"spanning table\"\n                            size=\"small\"\n                          >\n                            <TableHead>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\">\n                                  Lab Supervision/Demonstrating\n                                </TableCell>\n                                <TableCell />\n                              </TableRow>\n                            </TableHead>\n                            <TableBody>\n                              <TableRow key={uuidv4()}>\n                                <TableCell align=\"left\">\n                                  {paymentCalc.lab[3].activity}\n                                </TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    disabled\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    disableUnderline={true}\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"totalhrs\"\n                                    value={paymentCalc.lab[3].totalhrs}\n                          \n                                  />\n                                </TableCell>\n                              </TableRow>\n                              <TableRow key={uuidv4()} selected={true}>\n                                <TableCell align=\"left\">Total Hours</TableCell>\n                                <TableCell align=\"right\">\n                                  <Input\n                                    disabled\n                                    type=\"number\"\n                                    size=\"small\"\n                                    margin=\"dense\"\n                                    disableUnderline={true}\n                                    classes={{\n                                      input: classes.inputCenter,\n                                    }}\n                                    variant=\"filled\"\n                                    name=\"count\"\n                                    value={paymentCalc.lab[3].totalhrs}\n                                  />\n                                </TableCell>\n                              </TableRow>\n                            </TableBody>\n                          </Table>\n                        </TableContainer>\n                    </Grid>\n                  </form>\n                </AccordionDetails>\n              </Accordion>\n              <Accordion expanded>\n                <AccordionSummary\n                  aria-controls=\"panel3a-content\"\n                  id=\"panel3a-header\"\n                >\n                  <Grid container spacing={1}>\n                    <Grid\n                      item\n                      xs={6}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <Typography variant=\"h5\">\n                        Other Payment Details\n                      </Typography>\n                    </Grid>\n                    <Grid\n                      item\n                      xs={3}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <TextField\n                        fullWidth\n                        disabled\n                        size=\"small\"\n                        className={classes.textField}\n                        variant=\"outlined\"\n                        name=\"rate1\"\n                        label={`${grade.grade1} Rate`}\n                        value={hourlyRates.rate1}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">£</InputAdornment>\n                          ),\n                        }}\n                      />\n                    </Grid>\n                    <Grid\n                      item\n                      xs={3}\n                      className={clsx(classes.root, classes.left)}\n                    >\n                      <TextField\n                        fullWidth\n                        disabled\n                        size=\"small\"\n                        className={classes.textField}\n                        variant=\"outlined\"\n                        name=\"rate2\"\n                        label={`${grade.grade2} Rate`}\n                        value={hourlyRates.rate2}\n                        InputProps={{\n                          startAdornment: (\n                            <InputAdornment position=\"start\">£</InputAdornment>\n                          ),\n                        }}\n                      />\n                    </Grid>\n                  </Grid>\n                </AccordionSummary>\n                <AccordionDetails>\n                  <Grid item xs={12}>\n                    <TableContainer component={Paper}>\n                      <Table\n                        className={classes.table}\n                        aria-label=\"spanning table\"\n                        size=\"small\"\n                      >\n                        <TableHead>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\" colSpan={2}>\n                              Activity\n                            </TableCell>\n                            <TableCell align=\"center\">Payment Grade</TableCell>\n                            <TableCell align=\"center\">\n                              Delivery/ Completion time (hrs)\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              No of lectures/ Seminars/ Tutorials\n                            </TableCell>\n                            <TableCell align=\"center\">Total hours</TableCell>\n                            <TableCell align=\"center\">Payment £</TableCell>\n                          </TableRow>\n                        </TableHead>\n                        <TableBody>\n                          <TableRow key={uuidv4()}>\n                            <TableCell rowSpan={3}>Lecture</TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lecture[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.lecture[0].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.lecture[0].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.lecture[0].count *\n                                  paymentCalc.lecture[0].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lecture[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lecture[1].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.lecture[1].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.lecture[1].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.lecture[1].count *\n                                  paymentCalc.lecture[1].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lecture[1].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lecture[2].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={null}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={null}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.lecture[2].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lecture[2].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Lectures\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.lecture)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell rowSpan={4}>\n                              Seminar / Tutorial / Oral Classes\n                            </TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.seminar[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.seminar[0].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.seminar[0].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.seminar[0].count *\n                                  paymentCalc.seminar[0].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.seminar[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.seminar[1].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.seminar[1].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.seminar[1].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.seminar[1].count *\n                                  paymentCalc.seminar[1].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.seminar[1].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.seminar[2].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.seminar[2].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.seminar[2].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.seminar[2].count *\n                                  paymentCalc.seminar[2].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.seminar[2].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.seminar[3].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.seminar[3].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.seminar[3].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Seminar/Tutorial/Oral Classes\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.seminar)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell rowSpan={4}>\n                              Lab Supervision / Demonstrating\n                            </TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lab[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.lab[0].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.lab[0].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.lab[0].count *\n                                  paymentCalc.lab[0].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lab[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lab[1].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.lab[1].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.lab[1].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.lab[1].count *\n                                  paymentCalc.lab[1].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lab[1].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lab[2].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.lab[2].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                                value={paymentCalc.lab[2].count}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={\n                                  paymentCalc.lab[2].count *\n                                  paymentCalc.lab[2].time\n                                }\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lab[2].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.lab[3].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"count\"\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.lab[3].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.lab[3].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Lab Supervision/Demonstrating\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.lab)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell>Field Trip Assistance</TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.fieldTrip[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell />\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.fieldTrip[0].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.fieldTrip[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Field Trip Assistance\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.fieldTrip)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell>Office Hours</TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.office[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.office[0].time}\n                              />\n                            </TableCell>\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.office[0].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.office[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Office Hours\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.office)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell rowSpan={3}>Marking</TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.marking[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.marking[0].time}\n                              />\n                            </TableCell>\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.marking[0].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.marking[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.marking[1].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"time\"\n                                value={paymentCalc.marking[1].time}\n                              />\n                            </TableCell>\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.marking[1].time}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.marking[1].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell align=\"left\">\n                              {paymentCalc.marking[2].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade2}</TableCell>\n                            <TableCell />\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                disableUnderline={true}\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.marking[2].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.marking[2].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Marking\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.marking)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell>Training</TableCell>\n                            <TableCell align=\"left\">\n                              {paymentCalc.training[0].activity}\n                            </TableCell>\n                            <TableCell align=\"center\">{grade.grade1}</TableCell>\n                            <TableCell />\n                            <TableCell />\n                            <TableCell align=\"center\">\n                              <Input\n                                disabled\n                                disableUnderline={true}\n                                type=\"number\"\n                                size=\"small\"\n                                margin=\"dense\"\n                                classes={{\n                                  input: classes.inputCenter,\n                                }}\n                                variant=\"filled\"\n                                name=\"totalhrs\"\n                                value={paymentCalc.training[0].totalhrs}\n                              />\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              paymentCalc.training[0].payment\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()} selected={true}>\n                            <TableCell colSpan={6} align=\"left\">\n                              Total Training\n                            </TableCell>\n                            <TableCell align=\"center\">{`${CUR}${ccyFormat(\n                              subtotal(paymentCalc.training)\n                            )}`}</TableCell>\n                          </TableRow>\n                          <TableRow key={uuidv4()}>\n                            <TableCell rowSpan={3} />\n                            <TableCell />\n                            <TableCell />\n                            <TableCell colSpan={3}></TableCell>\n                            <TableCell align=\"center\">\n                              {/* {`£${ccyFormat(invoiceSubtotal)}`} */}\n                            </TableCell>\n                          </TableRow>\n                          {/* <TableRow key={uuidv4()}>\n                              <TableCell />\n                              <TableCell />\n                              <TableCell>Tax</TableCell>\n                              <TableCell align=\"center\">{`${(\n                                -TAX_RATE * 100\n                              ).toFixed(0)} %`}</TableCell>\n                              <TableCell />\n                              <TableCell align=\"center\">\n                                {`£${ccyFormat(invoiceTaxes)}`}\n                              </TableCell>\n                            </TableRow> */}\n                          <TableRow key={uuidv4()}>\n                            <TableCell />\n                            <TableCell />\n                            <TableCell colSpan={3}>Total</TableCell>\n                            <TableCell align=\"center\">\n                              {`£${ccyFormat(invoiceTotal)}`}\n                            </TableCell>\n                          </TableRow>\n                        </TableBody>\n                      </Table>\n                    </TableContainer>\n                  </Grid>\n                </AccordionDetails>\n              </Accordion>\n            </Grid>\n            <Grid container spacing={30}>\n              <Grid item xs={12} className={clsx(classes.footer, classes.left)}>\n                {\" \"}\n              </Grid>\n            </Grid>\n          </Grid>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ViewPayment;\n","import React, { useContext, useEffect } from \"react\";\nimport { useHistory, useParams, Link } from \"react-router-dom\";\n//Navigation\nimport NavButtonPaymentsAdd from \"../layouts/NavButtonPaymentsAdd\";\n//Components\nimport ViewPayments from \"../payments/ViewPayments\";\nimport ProgressIndicator from \"../layouts/Spinner\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport PaymentContext from \"../../context/payment/paymentContext\";\n\nconst PaymentsView = () => {\n  const authContext = useContext(AuthContext);\n  const userAdminContext = useContext(UserAdminContext);\n  const paymentContext = useContext(PaymentContext);\n  const {\n    getPayment,\n    loading,\n    current,\n    clearCurrent\n  } = paymentContext;\n  const { getActiveUsers } = userAdminContext;\n  const { loadUser, isAdmin } = authContext;\n  const { id } = useParams();\n\n  useEffect(() => {\n    clearCurrent()\n    getPayment(id);\n  }, [id]);\n\n  useEffect(() => {\n    loadUser();\n    getActiveUsers();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return (\n    <>\n      <NavButtonPaymentsAdd />\n      {!loading && current ? <ViewPayments current={current} isAdmin={isAdmin} /> : <ProgressIndicator />}\n    </>\n  );\n};\n\nexport default PaymentsView;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst NavButtonAbout = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const actions = [\n    {\n      id: 1,\n      icon: (\n        <Link to=\"/\">\n          <ArrowBackIcon />\n        </Link>\n      ),\n      name: \"Back\",\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"About Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={handleClose}\n          />\n        ))}\n      </SpeedDial>\n    </div>\n  );\n};\n\nexport default NavButtonAbout;\n","import React from \"react\";\n//Navigation\nimport NavButtonAbout from \"../../components/layouts/NavButtonAbout\";\n\nconst About = () => {\n  return (\n    <div>\n          <NavButtonAbout/>\n      <h1>About this app</h1>\n      <p>\n        This is a full stack react app created by Glenn Marshall-Adams\n      </p>\n      <p>This app has been designed as part of an MSc Project and is intended to manage the tracking of payments for Queens University Belfast</p>\n      <p>\n        <strong>Version: </strong> 1.0.0\n      </p>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\nimport CallMerge from \"@material-ui/icons/CallMerge\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\n// UI\nimport UserAdminAddModal from \"../userAdmin/UserAdminAddModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst NavButtonUserMgmtImport = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const userAdminContext = useContext(UserAdminContext);\n  const { setDialogOpen, setDialogClosed, toggleDialog } = userAdminContext;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const openDialog = () => {\n    setDialogOpen();\n  };\n\n  const closeDialog = () => {\n    setDialogClosed();\n  };\n\n  function handleClick(e, id) {\n    e.preventDefault();\n    if (id === 2) {\n      openDialog();\n    }\n  }\n  const actions = [\n    {\n      id: 1,\n      icon: (\n        <Link to=\"/UserAdmin\">\n          <ArrowBackIcon />\n        </Link>\n      ),\n      name: \"Back\",\n    },\n    // {\n    //   id: 2,\n    //   icon: (\n    //     <Link to=\"#\">\n    //       <PersonAddIcon />\n    //     </Link>\n    //   ),\n    //   name: \"Manually Add User\",\n    // },\n    {\n      id: 3,\n      icon: (\n        <Link to=\"/importNSP\">\n          <CallMerge />\n        </Link>\n      ),\n      name: \"Import NSP Data\",\n    },\n  ];\n\n\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"User Import Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={(e) => {\n              handleClick(e, action.id);\n            }}\n          />\n        ))}\n      </SpeedDial>\n      <>\n        <UserAdminAddModal open={toggleDialog} onClose={closeDialog} />\n      </>\n    </div>\n  );\n};\n\nexport default NavButtonUserMgmtImport;\n","import React, { useState, useRef, useContext, useEffect } from \"react\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n//UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Typography, Paper } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Upload from \"@material-ui/icons/Backup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport { useSnackbar } from \"notistack\";\nimport * as XLSX from \"xlsx\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  input: {\n    display: \"none\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"54ch\",\n  },\n}));\n\nconst Import = (props) => {\n  const classes = useStyles();\n  const userAdminContext = useContext(UserAdminContext);\n  const { addUser, error, clearErrors } = userAdminContext;\n  const [filestate, setFilestate] = useState({\n    file: \"\",\n  });\n  const [jsonFile, setJsonFileState] = useState([]);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const fileUploader = useRef(null);\n\n  const handleClick = (e) => {\n    fileUploader.current.focus();\n  };\n\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  const onChange = (e) => {\n    try {\n      e.stopPropagation();\n      e.preventDefault();\n      var file = e.target.files[0];\n      readFile(file);\n      setFilestate({ file });\n      enqueueSnackbar(`File ${file.name} is ready to be imported`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      console.error(error.message);\n      enqueueSnackbar(`File ${file.name} cannot be imported`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  const readFile = (file) => {\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n      fileReader.onload = (e) => {\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n    promise.then((d) => {\n      setJsonFileState(d);\n    });\n  };\n\n  const makePassword = (length) => {\n    var result = \"\";\n    var characters =\n      \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    var charactersLength = characters.length;\n    for (var i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    try {\n      jsonFile.map((d) => {\n        let makeRandomPassword = {\n          address: [\n            {\n              street: \"\",\n              city: \"\",\n              county: \"\",\n              country: \"\",\n              postcode: \"\",\n            },\n          ],\n          contact: [\n            {\n              mobile: \"\",\n              landline: \"\",\n            },\n          ],\n          bank: [\n            {\n              bankName: \"\",\n              branchName: \"\",\n              sortCode: \"\",\n              accNumber: \"\",\n              buildingSocietyNumber: \"\",\n            },\n          ],\n          status: \"Pending\",\n          password: makePassword(10),\n          taxDeclaration: [\n            {\n              employeeStatements_section1: \"\",\n              employeeStatements_section2: \"\",\n              employeeStatements_section3q1: \"\",\n              employeeStatements_section3q2: \"\",\n              employeeStatements_section3q3: \"\",\n              employeeStatements_section3q4: \"\",\n              employeeStatements_section3q5: \"\",\n              signed: false,\n              signedDate: \"\",\n            },\n          ],\n        };\n        let userWithAddedRandomPassword = Object.assign(d, makeRandomPassword);\n        addUser(userWithAddedRandomPassword);\n      });\n      setJsonFileState([]);\n    } catch (err) {\n      console.error(err.message);\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n  };\n  const options = {\n    filter: true,\n    filterType: \"dropdown\",\n    sortOrder: {\n      name: \"QUBID\",\n      direction: \"asc\",\n    },\n    downloadOptions: {\n      filterOptions: {\n        useDisplayedColumnsOnly: false,\n        useDisplayedRowsOnly: true,\n      },\n      filename: \"userAdminDownload.csv\",\n    },\n    rowsPerPageOptions: [5, 10, 20, 50, 100],\n    rowsPerPage: 10,\n    draggableColumns: {\n      enabled: true,\n    },\n    onRowsDelete: (rows) => {\n      const usersToDelete = rows.data.map((d) => jsonFile[d.dataIndex]);\n      const newState = jsonFile.filter((item) => !usersToDelete.includes(item));\n      setJsonFileState(newState);\n    },\n  };\n\n  const columns = [\n    {\n      name: \"QUBID\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"firstName\",\n      label: \"First Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"lastName\",\n      label: \"Last Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"email\",\n      label: \"Email\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"role\",\n      label: \"Role\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n      },\n    },\n    {\n      name: \"status\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n        customBodyRenderLite: (value) => (value = \"Pending\"),\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item xs={12} spacing={1}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} className={clsx(classes.root, classes.left)}>\n                <div>\n                  <Typography variant=\"h5\">\n                    Multi User Account Import\n                  </Typography>\n                  <Typography variant=\"caption\">\n                    Please only use the excel template provided, do not attempt\n                    to amend this in anyway\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12} className={clsx(classes.root, classes.left)}>\n                <div>\n                  <input\n                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    className={classes.input}\n                    id=\"contained-button-file\"\n                    type=\"file\"\n                    ref={fileUploader}\n                    onChange={onChange}\n                  />\n                  <label htmlFor=\"contained-button-file\">\n                    <Button\n                      component=\"span\"\n                      size=\"large\"\n                      className={classes.button}\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      startIcon={<Upload />}\n                      onClick={handleClick}\n                    >\n                      Select File to Upload\n                    </Button>\n                  </label>\n                  <TextField\n                    className={classes.textField}\n                    component=\"span\"\n                    disabled\n                    id=\"filename\"\n                    type=\"text\"\n                    name=\"filename\"\n                    value={filestate.file.name}\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n\n        {jsonFile !== null ? (\n          <>\n            <Grid item xs={12} spacing={1}>\n              <MUIDataTable\n                data={jsonFile}\n                columns={columns}\n                options={options}\n              />\n              <Button\n                component=\"span\"\n                size=\"large\"\n                className={classes.button}\n                color=\"secondary\"\n                variant=\"contained\"\n                startIcon={<PublishIcon />}\n                onClick={onSubmit}\n              >\n                Publish File\n              </Button>\n            </Grid>\n          </>\n        ) : (\n          <ProgressIndicator />\n        )}\n      </Grid>\n    </>\n  );\n};\n\nexport default Import;\n","import React, { useContext, useEffect } from \"react\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport NavButtonUserMgmtImport from \"../layouts/NavButtonUserMgmtImport\"\nimport { useSnackbar } from \"notistack\";\nimport Import from \"../import/Import\"\n\n\nconst ImportUsers = (props) => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const authContext = useContext(AuthContext);\n  const { loadUser, isAdmin } = authContext;\n  const userAdminContext = useContext(UserAdminContext);\n  const {\n    importedUsersAdded,\n    error, \n    clearErrors\n  } = userAdminContext;\n\n  useEffect(() => {\n    loadUser();\n    if (!isAdmin) {\n      props.history.push(\"/\");\n    }\n    if (importedUsersAdded) {\n      props.history.push(\"/userAdmin\");\n      clearErrors();\n    } else if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importedUsersAdded, isAdmin, props.history]);\nconsole.log(isAdmin)\n  return (\n    <div>\n      <NavButtonUserMgmtImport />\n      <div className=\"grid-1\">\n        <Import isAdmin={isAdmin}/>\n      </div>\n    </div>\n  );\n};\n\nexport default ImportUsers;\n","import React, { useState, useContext } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\n\nimport GroupAddIcon from \"@material-ui/icons/GroupAdd\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\n// UI\nimport UserAdminAddModal from \"../userAdmin/UserAdminAddModal\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n  },\n  speedDial: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst NavButtonUserMgmtImport = () => {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const userAdminContext = useContext(UserAdminContext);\n  const { setDialogOpen, setDialogClosed, toggleDialog } = userAdminContext;\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const openDialog = () => {\n    setDialogOpen();\n  };\n\n  const closeDialog = () => {\n    setDialogClosed();\n  };\n\n  function handleClick(e, id) {\n    e.preventDefault();\n    if (id === 2) {\n      openDialog();\n    }\n  }\n\n  const actions = [\n    {\n      id: 1,\n      icon: (\n        <Link to=\"/UserAdmin\">\n          <ArrowBackIcon />\n        </Link>\n      ),\n      name: \"Back\",\n    },\n    // {\n    //   id: 2,\n    //   icon: (\n    //     <Link to=\"#\">\n    //       <PersonAddIcon />\n    //     </Link>\n    //   ),\n    //   name: \"Manually Add User\",\n    // },\n    {\n      id: 3,\n      icon: (\n        <Link to=\"/import\">\n          <GroupAddIcon />\n        </Link>\n      ),\n      name: \"Import Multi Users\",\n    },\n  ];\n\n  return (\n    <div className={classes.root}>\n      <SpeedDial\n        ariaLabel=\"User Import Navigation Control\"\n        className={classes.speedDial}\n        icon={<MenuIcon />}\n        onClose={handleClose}\n        onOpen={handleOpen}\n        open={open}\n        FabProps={{ color: \"secondary\" }}\n      >\n        {actions.map((action) => (\n          <SpeedDialAction\n            key={action.id}\n            icon={action.icon}\n            tooltipTitle={action.name}\n            onClick={(e) => {\n              handleClick(e, action.id);\n            }}\n          />\n        ))}\n      </SpeedDial>\n      <>\n        <UserAdminAddModal open={toggleDialog} onClose={closeDialog} />\n      </>\n    </div>\n  );\n};\n\nexport default NavButtonUserMgmtImport;\n","import React, { useState, useRef, useContext, useEffect } from \"react\";\n//Context\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport AuthContext from \"../../context/auth/authContext\";\n//UI\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid, Card, CardHeader, Typography, Paper } from \"@material-ui/core\";\nimport Button from \"@material-ui/core/Button\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport Upload from \"@material-ui/icons/Backup\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport CheckCircleOutline from \"@material-ui/icons/CheckCircleOutline\"\nimport MUIDataTable, { TableFilterList } from \"mui-datatables\";\nimport ProgressIndicator from \"../layouts/Spinner\";\nimport { useSnackbar } from \"notistack\";\nimport * as XLSX from \"xlsx\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n    },\n    flexGrow: 1,\n  },\n  input: {\n    display: \"none\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n  textField: {\n    margin: theme.spacing(1),\n    width: \"54ch\",\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nconst mergeById = (a1, a2) =>\n  a1.map((itm) => ({\n    ...a2.find((item) => item.QUBID === itm.QUBID && item),\n    ...itm,\n  }));\n\nconst ImportNSP = (props) => {\n  const classes = useStyles();\n  const userAdminContext = useContext(UserAdminContext);\n  const {\n    getUsersNSP,\n    updateUserNSP,\n    usersNSP,\n    error,\n    clearErrors,\n    clearNSPUser,\n    loading,\n  } = userAdminContext;\n\n  const [filestate, setFilestate] = useState({\n    file: \"\",\n  });\n  const [jsonFile, setJsonFileState] = useState([]);\n  const [NSPUserState, setNSPUserState] = useState(usersNSP);\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const fileUploader = useRef(null);\n  const [enable, setEnable] = useState(true)\n\n  const handleClick = (e) => {\n    fileUploader.current.focus();\n  };\n\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error]);\n\n  useEffect(() => {\n    if (filestate.ile !== \"\") {\n      userAdminContext.loading = true;\n      try {\n        jsonFile.map((d) => {\n          NSPUserState[d.__rowNum__ - 1] = usersNSP[d.__rowNum__ - 1];\n          setNSPUserState([...NSPUserState]);\n        });\n        setJsonFileState(mergeById(NSPUserState, jsonFile));\n        userAdminContext.loading = false;\n      } catch (err) {\n        console.error(err.message);\n        enqueueSnackbar(error, {\n          variant: \"error\",\n        });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const onChange = (e) => {\n    try {\n      e.stopPropagation();\n      e.preventDefault();\n      var file = e.target.files[0];\n      readFile(file);\n      setFilestate({ file });\n      enqueueSnackbar(`File ${file.name} is ready to be imported`, {\n        variant: \"success\",\n      });\n    } catch (error) {\n      console.error(error.message);\n      enqueueSnackbar(`File ${file.name} cannot be imported`, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  const readFile = (file) => {\n    userAdminContext.loading = true;\n    const promise = new Promise((resolve, reject) => {\n      const fileReader = new FileReader();\n      fileReader.readAsArrayBuffer(file);\n      fileReader.onload = (e) => {\n        const bufferArray = e.target.result;\n        const wb = XLSX.read(bufferArray, { type: \"buffer\" });\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        const data = XLSX.utils.sheet_to_json(ws);\n        resolve(data);\n      };\n      fileReader.onerror = (error) => {\n        reject(error);\n      };\n    });\n    promise.then((d) => {\n      setJsonFileState(d);\n      d.map((a) => {\n        getUsersNSP(a.QUBID);\n      });\n    });\n    userAdminContext.loading = false;\n  };\n\n  const onLookup = (e) => {\n    userAdminContext.loading = true;\n    e.preventDefault();\n    try {\n      jsonFile.map((d) => {\n        NSPUserState[d.__rowNum__ - 1] = usersNSP[d.__rowNum__ - 1];\n        setNSPUserState([...NSPUserState]);\n      });\n      setJsonFileState(mergeById(NSPUserState, jsonFile));\n      userAdminContext.loading = false;\n      setEnable(false)\n    } catch (err) {\n      console.error(err.message);\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n  };\n\n  const reset = () => {\n    setJsonFileState([]);\n    setNSPUserState([]);\n    setFilestate({\n      file: \"\",\n    });\n    clearNSPUser();\n  };\n  const onSubmit = (e) => {\n    e.preventDefault();\n    try {\n      jsonFile.map((d) => {\n        updateUserNSP(d);\n      });\n      setJsonFileState([]);\n    } catch (err) {\n      console.error(err.message);\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n  };\n  const options = {\n    filter: true,\n    filterType: \"dropdown\",\n    sortOrder: {\n      name: \"QUBID\",\n      direction: \"asc\",\n    },\n    downloadOptions: {\n      filterOptions: {\n        useDisplayedColumnsOnly: false,\n        useDisplayedRowsOnly: true,\n      },\n      filename: \"userAdminDownload.csv\",\n    },\n    rowsPerPageOptions: [5, 10, 20, 50, 100],\n    rowsPerPage: 10,\n    draggableColumns: {\n      enabled: true,\n    },\n    onRowsDelete: (rows) => {\n      const usersToDelete = rows.data.map((d) => jsonFile[d.dataIndex]);\n      const newState = jsonFile.filter((item) => !usersToDelete.includes(item));\n      setJsonFileState(newState);\n    },\n  };\n\n  const columns = [\n    {\n      name: \"QUBID\",\n      label: \"ID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"NSPID\",\n      label: \"NSPID\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"firstName\",\n      label: \"First Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"lastName\",\n      label: \"Last Name\",\n      options: {\n        filter: false,\n        display: true,\n        download: true,\n        sort: true,\n      },\n    },\n    {\n      name: \"status\",\n      label: \"Status\",\n      options: {\n        filter: true,\n        display: true,\n        download: true,\n        sort: false,\n        customBodyRenderLite: (value) => (value = \"Pending Import\"),\n      },\n    },\n  ];\n\n  return (\n    <>\n      <Grid container spacing={1}>\n        <Grid item xs={12} spacing={1}>\n          <Paper className={classes.paper}>\n            <Grid container spacing={1}>\n              <Grid item xs={12} className={clsx(classes.root, classes.left)}>\n                <div>\n                  <Typography variant=\"h5\">NSP Data Import</Typography>\n                  <Typography variant=\"caption\">\n                    Please only use this tool, for locating and updating user\n                    accounts with their NSP ID\n                  </Typography>\n                </div>\n              </Grid>\n              <Grid item xs={12} className={clsx(classes.root, classes.left)}>\n                <div>\n                  <input\n                    accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                    className={clsx(classes.input, classes.button)}\n                    id=\"contained-button-file\"\n                    type=\"file\"\n                    ref={fileUploader}\n                    onChange={onChange}\n                  />\n                  <label htmlFor=\"contained-button-file\">\n                    <Button\n                      component=\"span\"\n                      size=\"large\"\n                      className={classes.button}\n                      color=\"secondary\"\n                      variant=\"contained\"\n                      startIcon={<Upload />}\n                      onClick={handleClick}\n                    >\n                      Select File to Upload\n                    </Button>\n                  </label>\n                  <TextField\n                    className={classes.textField}\n                    component=\"span\"\n                    disabled\n                    id=\"filename\"\n                    type=\"text\"\n                    name=\"filename\"\n                    value={filestate.file.name}\n                  />\n                </div>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        {jsonFile.length > 0 && !loading ? (\n          <>\n            <Grid item xs={12} spacing={1}>\n              <MUIDataTable\n                data={jsonFile}\n                columns={columns}\n                options={options}\n              />\n              <Grid container spacing={1}>\n                <Grid\n                  item\n                  xs={12}\n                  className={clsx(classes.button, classes.right)}\n                >\n                  <Button\n                    component=\"span\"\n                    size=\"large\"\n                    className={classes.button}\n                    style={{\n                      backgroundColor: \"green\",\n                      color: \"white\",\n                    }}\n                    variant=\"contained\"\n                    startIcon={<CheckCircleOutline />}\n                    onClick={onLookup}\n                  >\n                    Check Users\n                  </Button>\n                  <Button\n                    disabled={enable}\n                    component=\"span\"\n                    size=\"large\"\n                    className={classes.button}\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    startIcon={<PublishIcon />}\n                    onClick={onSubmit}\n                  >\n                    Import NSP ID's\n                  </Button>\n                  <Button\n                    component=\"span\"\n                    size=\"large\"\n                    className={classes.button}\n                    color=\"primary\"\n                    variant=\"contained\"\n                    startIcon={<PublishIcon />}\n                    onClick={reset}\n                  >\n                    Reset\n                  </Button>\n                </Grid>\n              </Grid>\n            </Grid>\n          </>\n        ) : (\n          <hr></hr>\n        )}\n      </Grid>\n      <Grid container spacing={10}>\n        <Grid\n          item\n          xs={12}\n          className={clsx(classes.footer, classes.left)}\n        ></Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default ImportNSP;\n","import React, { useContext, useEffect } from \"react\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport NavButtonUserMgmtImportNSP from \"../layouts/NavButtonUserMgmtImportNSP\"\nimport { useSnackbar } from \"notistack\";\nimport ImportNSP from \"../import/ImportNSP\"\n\n\nconst ImportNSPData = (props) => {\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const authContext = useContext(AuthContext);\n  const { loadUser, isAdmin } = authContext;\n  const userAdminContext = useContext(UserAdminContext);\n  const {\n    importedUsersAdded,\n    error, \n    clearErrors\n  } = userAdminContext;\n\n  useEffect(() => {\n    loadUser();\n    if (!isAdmin) {\n      props.history.push(\"/\");\n    }\n    if (importedUsersAdded) {\n      props.history.push(\"/userAdmin\");\n      clearErrors();\n    } else if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [importedUsersAdded, isAdmin, props.history]);\n\n  return (\n    <div>\n      <NavButtonUserMgmtImportNSP />\n      <div className=\"grid-1\">\n        <ImportNSP isAdmin={isAdmin}/>\n      </div>\n    </div>\n  );\n};\n\nexport default ImportNSPData;\n","import React, { useState, useContext, useEffect } from \"react\";\n//Components\nimport { useSnackbar } from \"notistack\";\n//Context\nimport AuthContext from \"../../context/auth/authContext\";\n//UI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textFieldFull: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst Register = (props) => {\n  const classes = useStyles();\n  const authContext = useContext(AuthContext);\n  const { register, error, clearErrors, isAuthenticated } = authContext;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n    if (error) {\n      enqueueSnackbar(\n        error,\n        {\n          variant: \"error\",\n        }\n      );\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    QUBID: \"\",\n    email: \"\",\n    password: \"\",\n    password2: \"\",\n  });\n  const { QUBID, email, password, password2 } = user;\n\n  const onChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (QUBID === \"\" || email === \"\" || password === \"\") {\n      enqueueSnackbar(`Please complete all fields`, {\n        variant: \"warning\",\n      });\n    } else if (password !== password2) {\n      enqueueSnackbar(`Passwords do not match`, {\n        variant: \"error\",\n      });\n    } else {\n      register({\n        QUBID,\n        email,\n        password,\n      });\n    }\n  };\n  return (\n    <div className=\"form-container\">\n      <h1>\n        Account <span className=\"text-primary\">Register</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div>\n        <div>\n            <TextField\n              className={classes.textFieldFull}\n              required\n              id=\"QUBID\"\n              type=\"text\"\n              name=\"QUBID\"\n              value={QUBID}\n              onChange={onChange}\n              placeholder=\"QUB ID Number\"\n              label=\"QUB ID\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div>\n            <TextField\n              className={classes.textFieldFull}\n              required\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={onChange}\n              label=\"Email\"\n              variant=\"outlined\"\n              autoComplete=\"username\"\n            />\n          </div>\n        </div>\n        <div>\n          <TextField\n            className={classes.textFieldFull}\n            required\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={onChange}\n            label=\"Password\"\n            variant=\"outlined\"\n            autoComplete=\"current-password\"\n            minLength=\"6\"\n          />\n        </div>\n        <div>\n          <TextField\n            className={classes.textFieldFull}\n            required\n            id=\"password2\"\n            type=\"password\"\n            name=\"password2\"\n            placeholder=\"password\"\n            value={password2}\n            onChange={onChange}\n            label=\"Confirm Password\"\n            variant=\"outlined\"\n            minLength=\"6\"\n          />\n        </div>\n        <Button\n          size=\"large\"\n          fullWidth={true}\n          className={classes.button}\n          onClick={onSubmit}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Register\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\n//Components\nimport { useSnackbar } from \"notistack\";\n//Context\nimport AuthContext from \"../../context/auth/authContext\";\n//UI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textFieldFull: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const authContext = useContext(AuthContext);\n  const { login, error, clearErrors, isAuthenticated } = authContext;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  const preventDefault = (event) => event.preventDefault();\n\n  useEffect(() => {\n    if (isAuthenticated) {\n      props.history.push(\"/\");\n    }\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n  });\n  const { email, password } = user;\n\n  const onChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    } else {\n      login({\n        email,\n        password,\n      });\n    }\n  };\n  return (\n    <div className=\"form-container\">\n      <h1>\n        Account <span className=\"text-primary\">Login</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div>\n          <TextField\n            className={classes.textFieldFull}\n            id=\"email\"\n            type=\"email\"\n            name=\"email\"\n            placeholder=\"Email\"\n            value={email}\n            onChange={onChange}\n            label=\"Email\"\n            variant=\"outlined\"\n          />\n        </div>\n        <div>\n          <TextField\n            className={classes.textFieldFull}\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            placeholder=\"password\"\n            value={password}\n            onChange={onChange}\n            label=\"Password\"\n            variant=\"outlined\"\n          />\n        </div>\n        <Button\n          size=\"large\"\n          fullWidth={true}\n          className={classes.button}\n          onClick={onSubmit}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Login\n        </Button>\n      </form>\n      <Typography component={Link} to=\"/password-reset/\">\n        Password Reset\n      </Typography>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from 'react-router-dom';\nimport AuthContext from \"../../context/auth/authContext\";\n//Components\nimport { useSnackbar } from \"notistack\";\n\nconst Verify = (props) => {\n  const {token} = useParams()\n  const authContext = useContext(AuthContext);\n  const { verifyEmail, logout } = authContext;\n\n  useEffect(() => {\n    verifyEmail(token)\n    logout()\n    props.history.push(\"/login\")\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.history]);\n  return (<>\n  <p>Thank you for verifying your email address</p>\n  </>);\n};\n\nexport default Verify;\n","import React, { useState, useEffect, useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\n//Components\nimport { useSnackbar } from \"notistack\";\nimport { Typography, TextField, Box, Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    fontSize: \"1.2rem\",\n  },\n  textFieldFull: {\n    margin: theme.spacing(1),\n    width: \"97%\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    margin: theme.spacing(1),\n    width: \"97%\",\n  },\n  text: {\n    textAlign: \"center\",\n    marginBottom: 30,\n  },\n}));\n\nconst PasswordReset = (props) => {\n  const classes = useStyles();\n  const { token } = useParams();\n  const authContext = useContext(AuthContext);\n  const { passwordUpdateRequest, logout, error, clearErrors } = authContext;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    logout();\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n    }\n    clearErrors();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const [password, setPassword] = useState({\n    newPassword: \"\",\n    confirmPassword: \"\",\n  });\n\n  const handleUpdatePassword = (e) => {\n    e.preventDefault();\n    if (password.confirmPassword === \"\" || password.newPassword === \"\") {\n      enqueueSnackbar(`Please complete all fields`, {\n        variant: \"warning\",\n      });\n    } else if (password.confirmPassword !== password.newPassword) {\n      enqueueSnackbar(`Passwords do not match`, {\n        variant: \"error\",\n      });\n    } else {\n      password.password = password.newPassword;\n      setPassword({\n        ...password,\n      });\n      passwordUpdateRequest(token, password);\n      logout();\n      props.history.push(\"/\");\n    }\n  };\n  const handleChangePassword = (e) => {\n    setPassword({\n      ...password,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <>\n      <div className=\"form-container\">\n        <h1>\n          Password <span className=\"text-primary\">Reset</span>\n        </h1>\n        <TextField\n          className={classes.textFieldFull}\n          id=\"password-new\"\n          type=\"password\"\n          name=\"newPassword\"\n          placeholder=\"New Password\"\n          value={password.newPassword || \"\"}\n          onChange={handleChangePassword}\n          label=\"New Password\"\n          variant=\"outlined\"\n        />\n        <TextField\n          className={classes.textFieldFull}\n          id=\"password-new1\"\n          type=\"password\"\n          name=\"confirmPassword\"\n          placeholder=\"Confirm New Password\"\n          value={password.confirmPassword || \"\"}\n          onChange={handleChangePassword}\n          label=\"Confirm New Password\"\n          variant=\"outlined\"\n        />\n        <Box>\n          <Button\n            size=\"large\"\n            fullWidth={true}\n            className={classes.button}\n            onClick={handleUpdatePassword}\n            color=\"secondary\"\n            variant=\"contained\"\n          >\n            Save\n          </Button>\n        </Box>\n      </div>\n    </>\n  );\n};\n\nexport default PasswordReset;\n","import React, { useState, useContext, useEffect } from \"react\";\n//Components\nimport { useSnackbar } from \"notistack\";\n//Context\nimport AuthContext from \"../../context/auth/authContext\";\n//UI\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  textFieldFull: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n  button: {\n    backgroundColor: \"rgb(214, 0, 13)\",\n    marginTop: theme.spacing(2),\n    marginBottom: theme.spacing(2),\n  },\n}));\n\nconst PasswordResetRequest = (props) => {\n  const classes = useStyles();\n  const authContext = useContext(AuthContext);\n  const {\n    register,\n    error,\n    clearErrors,\n    isAuthenticated,\n    passwordResetRequestPublic,\n    logout\n  } = authContext;\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    if (error) {\n      enqueueSnackbar(error, {\n        variant: \"error\",\n      });\n      clearErrors();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [error, isAuthenticated, props.history]);\n\n  const [user, setUser] = useState({\n    QUBID: \"\",\n    email: \"\",\n  });\n  const { QUBID, email } = user;\n\n  const onChange = (e) => {\n    setUser({\n      ...user,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    if (QUBID === \"\" || email === \"\") {\n      enqueueSnackbar(`Please complete all fields`, {\n        variant: \"warning\",\n      });\n    } else {\n      passwordResetRequestPublic(user);\n      logout();\n      props.history.push(\"/\");\n      enqueueSnackbar(`Please check ${email} for reset instructions`, {\n        variant: \"success\",\n      });\n    }\n  };\n  return (\n    <div className=\"form-container\">\n      <h1>\n        Password Reset <span className=\"text-primary\">Request</span>\n      </h1>\n      <form onSubmit={onSubmit}>\n        <div>\n          <div>\n            <TextField\n              className={classes.textFieldFull}\n              required\n              id=\"QUBID\"\n              type=\"text\"\n              name=\"QUBID\"\n              value={QUBID}\n              onChange={onChange}\n              placeholder=\"QUB ID Number\"\n              label=\"QUB ID\"\n              variant=\"outlined\"\n            />\n          </div>\n          <div>\n            <TextField\n              className={classes.textFieldFull}\n              required\n              id=\"email\"\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"Email\"\n              value={email}\n              onChange={onChange}\n              label=\"Email\"\n              variant=\"outlined\"\n              autoComplete=\"username\"\n            />\n          </div>\n        </div>\n        <Button\n          size=\"large\"\n          fullWidth={true}\n          className={classes.button}\n          onClick={onSubmit}\n          color=\"secondary\"\n          variant=\"contained\"\n        >\n          Request Reset\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default PasswordResetRequest;\n","import React, { Fragment, useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\nimport UserAdminContext from \"../../context/userAdmin/userAdminContext\";\nimport UserContext from \"../../context/user/userContext\";\n\n\nfunction NavigationBar({ title, icon }) {\n  const authContext = useContext(AuthContext);\n  const userAdminContext = useContext(UserAdminContext);\n  const userContext = useContext(UserContext);\n  const { isAuthenticated, logout } = authContext;\n  const { clearUserAccount } = userContext;\n  const { clearUserAdmin } = userAdminContext;\n\n  const onLogout = () => {\n    clearUserAdmin();\n    clearUserAccount()\n    logout();\n  };\n\n  const authLinks = (\n    <Fragment>\n      <li>\n        <a onClick={onLogout} href=\"#!\">\n          <i className=\"fas fa-sign-out-alt\"></i>{\" \"}\n          <span className=\"hide-sm\">Logout</span>\n        </a>\n      </li>\n    </Fragment>\n  );\n\n  const unAuthLinks = (\n    <Fragment>\n      <li>\n        <Link to=\"/users/register\">Register</Link>\n      </li>\n      <li>\n        <Link to=\"/login\">Login</Link>\n      </li>\n    </Fragment>\n  );\n\n  return (\n    <div className=\"navbar bg-primary\">\n      <h1>\n        <Link to=\"/\">\n        <i className={icon} />\n        {title}\n        </Link>\n      </h1>\n      <ul>\n        {isAuthenticated ? authLinks : unAuthLinks}\n      </ul>\n    </div>\n  );\n}\nNavigationBar.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string,\n};\nNavigationBar.defaultProps = {\n  title: \" DemPay\",\n  icon: \"fas fa-handshake\",\n};\nexport default NavigationBar;","import React, { useContext } from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport AuthContext from \"../../context/auth/authContext\";\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authContext = useContext(AuthContext);\n  const { isAuthenticated, loading } = authContext;\n\n  return (\n    <Route\n      {...rest}\n      render={(props) =>\n        !isAuthenticated && !loading ? (\n          <Redirect to=\"/login\" />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoute;\n","//Payments Framework Reducer\nexport const GET_PAYMENTS = \"GET_PAYMENTS\";\nexport const GET_PAYMENT = \"GET_PAYMENT\";\nexport const GET_USER_PAYMENTS = \"GET_USER_PAYMENTS\";\nexport const ADD_PAYMENT = \"ADD_PAYMENT\";\nexport const ADD_USER_PAYMENT = \"ADD_USER_PAYMENT\";\nexport const DELETE_PAYMENT = \"DELETE_PAYMENT\";\nexport const UPDATE_PAYMENT = \"UPDATE_PAYMENT\";\nexport const FILTER_PAYMENTS = \"FILTER_PAYMENTS\";\nexport const CLEAR_PAYMENTS = \"CLEAR_PAYMENTS\";\nexport const PAYMENT_ERROR = \"PAYMENT_ERROR\";\nexport const APPROVE_ALL_PAYMENTS = \"APPROVE_ALL_PAYMENTS\";\nexport const REJECT_ALL_PAYMENTS = \"REJECT_ALL_PAYMENTS\";\nexport const PAID_ALL_PAYMENTS = \"PAID_ALL_PAYMENTS\";\nexport const APPROVE_PAYMENT = \"APPROVE_PAYMENT\";\nexport const REJECT_PAYMENT = \"REJECT_PAYMENT\";\nexport const HOLD_PAYMENT = \"HOLD_PAYMENT\";\nexport const PENDING_PAYMENT = \"PENDING_PAYMENT\";\nexport const PAID_PAYMENT = \"PAID_PAYMENT\";\n//userAdmin Framework Reducer\nexport const GET_USERS = \"GET_USERS\";\nexport const GET_USERS_NSP = \"GET_USERS_NSP\";\nexport const GET_ACTIVE_USERS = \"GET_ACTIVE_USERS\";\nexport const ADD_USER = \"ADD_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const FILTER_USERS = \"FILTER_USERS\";\nexport const CLEAR_USERS = \"CLEAR_USERS\";\nexport const CLEAR_USER = \"CLEAR_USER\";\nexport const USER_ERROR = \"USER_ERROR\";\n//user Framework Reducer\nexport const GET_USER = \"GET_USERS\";\n//KPI & Charts Framework Reducer\nexport const GET_STATS = \"GET_STATS\";\nexport const STATS_ERROR = \"STATS_ERROR\";\n//Alerts Framework Reducer\nexport const SET_ALERT = \"SET_ALERT\";\nexport const REMOVE_ALERT = \"REMOVE_ALERT\";\nexport const CLEAR_ERRORS = \"CLEAR_ERRORS\";\n//Authentication Reducer\nexport const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const RESEND_VERIFY = \"RESEND_VERIFY\";\nexport const PASSWORD_RESET = \"PASSWORD_RESET\"\nexport const PASSWORD_RESET_REQUEST = \"PASSWORD_RESET_REQUEST\";\nexport const PASSWORD_RESET_EMAIL_FAIL = \"PASSWORD_RESET_EMAIL_FAIL\";\nexport const USER_LOADED = \"USER_LOADED\";\nexport const AUTH_ERROR = \"AUTH_ERROR\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n//General Reducer\nexport const SET_CURRENT = \"SET_CURRENT\";\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";\nexport const OPEN_DIALOG = \"OPEN_DIALOG\";\nexport const CLOSE_DIALOG = \"CLOSE_DIALOG\";\nexport const SET_LOADING = \"SET_LOADING\";\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  GET_USER,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_USER,\n  CLEAR_ERRORS,\n  CLEAR_USER,\n  USER_ERROR,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_USER: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n    case UPDATE_USER: {\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    }\n    case CLEAR_USER: {\n      return {\n        ...state,\n        user: null,\n        error: null,\n        current: null,\n      };\n    }\n    case SET_CURRENT: {\n      return {\n        ...state,\n        current: action.payload,\n      };\n    }\n    case CLEAR_CURRENT: {\n      return {\n        ...state,\n        current: null,\n      };\n    }\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    case USER_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport UserContext from \"./userContext.js\";\nimport userReducer from \"./UserReducer\";\n\nimport {\n  GET_USER,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_USER,\n  CLEAR_ERRORS,\n  USER_ERROR,\n  CLEAR_USER\n} from \"../types\";\n\nconst UserState = (props) => {\n  const initialState = {\n    loading: true,\n    user: null,\n    current: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  //Get User\n  const getUser = async (id) => {\n    try {\n      const res = await axios.get(`/api/user/${id}`);\n      dispatch({ type: GET_USER, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error\n      });\n    }\n  };\n\n  //Update User Record\n  const updateUser = async (user) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.put(`/api/user/${user._id}`, user, config);\n      dispatch({ type: UPDATE_USER, payload: res.data });\n      setCurrent(user)\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error\n      });\n    }\n  };\n\n  const clearUserAccount = () => {\n    dispatch({ type: CLEAR_USER });\n  };\n\n  //Set Current User\n  const setCurrent = (user) => {\n    dispatch({ type: SET_CURRENT, payload: user });\n  };\n\n  //Clear Current User\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  //Clear Errors User\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  return (\n    <UserContext.Provider\n      value={{\n        user: state.user,\n        loading: state.loading,\n        current: state.current,\n        error: state.error,\n        getUser,\n        setCurrent,\n        clearCurrent,\n        updateUser,\n        clearErrors,\n        clearUserAccount\n      }}\n    >\n      {props.children}\n    </UserContext.Provider>\n  );\n};\n\nexport default UserState;\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  GET_USERS,\n  GET_USERS_NSP,\n  GET_ACTIVE_USERS,\n  ADD_USER,\n  DELETE_USER,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_USER,\n  CLEAR_ERRORS,\n  USER_ERROR,\n  CLEAR_USERS,\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_USERS: {\n      return {\n        ...state,\n        users: action.payload,\n        importedUsersAdded: false,\n        loading: false,\n      };\n    }\n    case GET_USERS_NSP: {\n      return {\n        ...state,\n        usersNSP: [...state.usersNSP, action.payload],\n        importedUsersAdded: false,\n        loading: false,\n      };\n    }\n    case GET_ACTIVE_USERS: {\n      return {\n        ...state,\n        activeUsers: action.payload,\n        loading: false,\n      };\n    }\n    case ADD_USER: {\n      return {\n        ...state,\n        users: [action.payload, ...state.users],\n        importedUsersAdded: true,\n        loading: false,\n      };\n    }\n    case DELETE_USER: {\n      return {\n        ...state,\n        users: state.users.filter((user) => user._id !== action.payload),\n        loading: false,\n      };\n    }\n    case UPDATE_USER: {\n      return {\n        ...state,\n        users: state.users.map((user) =>\n          user._id === action.payload._id ? action.payload : user\n        ),\n        loading: false,\n      };\n    }\n    case CLEAR_USERS: {\n      return {\n        ...state,\n        users: null,\n        error: null,\n        current: null,\n        activeUsers: null,\n        usersNSP: [],\n      };\n    }\n    case SET_CURRENT: {\n      return {\n        ...state,\n        current: action.payload,\n      };\n    }\n    case CLEAR_CURRENT: {\n      return {\n        ...state,\n        current: null,\n      };\n    }\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    case USER_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case OPEN_DIALOG: {\n      return {\n        ...state,\n        toggleDialog: true,\n      };\n    }\n    case CLOSE_DIALOG: {\n      return {\n        ...state,\n        current: null,\n        toggleDialog: false,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport UserAdminContext from \"./userAdminContext.js\";\nimport userReducer from \"./UserAdminReducer\";\n\nimport {\n  GET_USERS,\n  GET_USERS_NSP,\n  GET_ACTIVE_USERS,\n  ADD_USER,\n  DELETE_USER,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_USER,\n  USER_ERROR,\n  CLEAR_ERRORS,\n  CLEAR_USERS,\n  OPEN_DIALOG,\n  CLOSE_DIALOG,\n} from \"../types\";\n\nconst UserAdminState = (props) => {\n  const initialState = {\n    usersNSP: [],\n    importedUsersAdded: false,\n    loading: true,\n    users: null,\n    activeUsers: null,\n    current: null,\n    error: null,\n    toggleDialog: false,\n  };\n\n  const [state, dispatch] = useReducer(userReducer, initialState);\n\n  //Get All Users\n  const getUsers = async () => {\n    try {\n      const res = await axios.get(\"/api/userAdmin\");\n      dispatch({ type: GET_USERS, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Get All Users\n  const getUsersNSP = async (QUBID) => {\n    try {\n      const res = await axios.get(`/api/userAdmin/${QUBID}`);\n      dispatch({ type: GET_USERS_NSP, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Get Active Users\n  const getActiveUsers = async () => {\n    try {\n      const res = await axios.get(\"/api/userAdmin/active\");\n      dispatch({ type: GET_ACTIVE_USERS, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Add new User\n  const addUser = async (user) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"/api/userAdmin\", user, config);\n      dispatch({ type: ADD_USER, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Delete User\n  const deleteUser = async (id) => {\n    try {\n      await axios.delete(`/api/userAdmin/${id}`);\n      dispatch({ type: DELETE_USER, payload: id });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Update User Record\n  const updateUser = async (user) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.put(`/api/userAdmin/${user._id}`, user, config);\n      dispatch({ type: UPDATE_USER, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Update User Record\n  const updateUserNSP = async (usersNSP) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.put(\n        `/api/userAdmin/NSP/${usersNSP._id}`,\n        usersNSP,\n        config\n      );\n      dispatch({ type: ADD_USER, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: USER_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Set Current User\n  const setCurrent = (user) => {\n    dispatch({ type: SET_CURRENT, payload: user });\n  };\n\n  //Clear Current User\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n  //Clear Errors User\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  const clearUserAdmin = () => {\n    dispatch({ type: CLEAR_USERS });\n  };\n  const clearNSPUser = () => {\n    dispatch({ type: CLEAR_USERS });\n  };\n\n  const clearActiveUsers = () => {\n    dispatch({ type: CLEAR_USERS });\n  };\n\n  //Set Dialog Open\n  const setDialogOpen = () => {\n    dispatch({ type: OPEN_DIALOG });\n  };\n\n  //Set Dialog Open\n  const setDialogClosed = () => {\n    dispatch({ type: CLOSE_DIALOG });\n  };\n\n  return (\n    <UserAdminContext.Provider\n      value={{\n        usersNSP: state.usersNSP,\n        importedUsersAdded: state.importedUsersAdded,\n        users: state.users,\n        activeUsers: state.activeUsers,\n        toggleDialog: state.toggleDialog,\n        loading: state.loading,\n        current: state.current,\n        error: state.error,\n        getUsers,\n        getUsersNSP,\n        getActiveUsers,\n        addUser,\n        deleteUser,\n        setCurrent,\n        clearCurrent,\n        updateUser,\n        updateUserNSP,\n        clearErrors,\n        setDialogOpen,\n        setDialogClosed,\n        clearUserAdmin,\n        clearActiveUsers,\n        clearNSPUser\n      }}\n    >\n      {props.children}\n    </UserAdminContext.Provider>\n  );\n};\n\nexport default UserAdminState;\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  GET_PAYMENTS,\n  GET_PAYMENT,\n  GET_USER_PAYMENTS,\n  ADD_PAYMENT,\n  ADD_USER_PAYMENT,\n  DELETE_PAYMENT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_PAYMENT,\n  PAYMENT_ERROR,\n  CLEAR_PAYMENTS,\n  APPROVE_ALL_PAYMENTS,\n  REJECT_ALL_PAYMENTS,\n  PAID_ALL_PAYMENTS,\n  APPROVE_PAYMENT,\n  REJECT_PAYMENT,\n  HOLD_PAYMENT,\n  PENDING_PAYMENT,\n  PAID_PAYMENT,\n  SET_LOADING,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_PAYMENTS: {\n      return {\n        ...state,\n        payments: action.payload,\n        loading: false,\n      };\n    }\n    case GET_USER_PAYMENTS: {\n      return {\n        ...state,\n        userPayments: action.payload,\n        loading: false,\n      };\n    }\n    case GET_PAYMENT: {\n      return {\n        ...state,\n        current: action.payload,\n        loading: false,\n      };\n    }\n    case ADD_USER_PAYMENT:\n    case ADD_PAYMENT: {\n      return {\n        ...state,\n        payments: [action.payload, ...state.payments],\n        loading: false,\n      };\n    }\n    case DELETE_PAYMENT: {\n      return {\n        ...state,\n        payments: state.payments.filter(\n          (payment) => payment._id !== action.payload\n        ),\n        loading: false,\n      };\n    }\n    case UPDATE_PAYMENT: {\n      return {\n        ...state,\n        payments: action.payload,\n        loading: false,\n      };\n    }\n    case REJECT_PAYMENT:\n    case APPROVE_PAYMENT:\n    case HOLD_PAYMENT:\n    case PENDING_PAYMENT:\n    case PAID_PAYMENT:\n    case PAID_ALL_PAYMENTS:\n    case REJECT_ALL_PAYMENTS:\n    case APPROVE_ALL_PAYMENTS: {\n      return {\n        ...state,\n        payments: action.payload,\n        loading: false,\n      };\n    }\n    case CLEAR_PAYMENTS: {\n      return {\n        ...state,\n        payments: null,\n        filtered: null,\n        error: null,\n        current: null,\n      };\n    }\n    case SET_CURRENT: {\n      return {\n        ...state,\n        current: action.payload,\n        loading: false,\n      };\n    }\n    case CLEAR_CURRENT: {\n      return {\n        ...state,\n        current: null,\n        userPayments: null,\n        loading: false,\n      };\n    }\n    case PAYMENT_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case CLEAR_ERRORS: {\n      return {\n        ...state,\n        error: null,\n      };\n    }\n    case SET_LOADING: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport paymentContext from \"./paymentContext\";\nimport paymentReducer from \"./PaymentReducer\";\nimport {\n  GET_PAYMENTS,\n  GET_PAYMENT,\n  GET_USER_PAYMENTS,\n  ADD_PAYMENT,\n  ADD_USER_PAYMENT,\n  DELETE_PAYMENT,\n  SET_CURRENT,\n  CLEAR_CURRENT,\n  UPDATE_PAYMENT,\n  FILTER_PAYMENTS,\n  PAYMENT_ERROR,\n  CLEAR_PAYMENTS,\n  APPROVE_ALL_PAYMENTS,\n  REJECT_ALL_PAYMENTS,\n  PAID_ALL_PAYMENTS,\n  APPROVE_PAYMENT,\n  REJECT_PAYMENT,\n  HOLD_PAYMENT,\n  PENDING_PAYMENT,\n  PAID_PAYMENT,\n  SET_LOADING,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nconst PaymentState = (props) => {\n  const initialState = {\n    payments: null,\n    userPayments: null,\n    current: null,\n    filtered: null,\n    error: null,\n    loading: true,\n  };\n\n  const [state, dispatch] = useReducer(paymentReducer, initialState);\n\n  //Get User Payments\n  const getUserPayments = async (id) => {\n    try {\n      const res = await axios.get(`/api/user/${id}/payments`);\n      dispatch({ type: GET_USER_PAYMENTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Get Payments\n  const getPayments = async () => {\n    try {\n      const res = await axios.get(\"/api/payments\");\n      dispatch({ type: GET_PAYMENTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n    //Get Payment\n    const getPayment = async (id) => {\n      try {\n        const res = await axios.get(`/api/payments/${id}`);\n        dispatch({ type: GET_PAYMENT, payload: res.data });\n      } catch (error) {\n        dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n      }\n    };\n\n  //Add Payment\n  const addPayment = async (payment) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(`/api/payments/new`, payment, config);\n      dispatch({ type: ADD_PAYMENT, payload: res.data });\n      getPayments();\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Add Payment\n\n  const addUserPayment = async (id, payment) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(`/api/user/${id}/payments`, payment, config);\n      dispatch({ type: ADD_USER_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Delete Payment\n  const deletePayment = async (pid) => {\n    try {\n      await axios.delete(`/api/payments/${pid}`);\n      dispatch({ type: DELETE_PAYMENT, payload: pid });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Update Payment\n\n  const updatePayment = async (payment) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.put(\n        `/api/payments/${payment._id}`,\n        payment,\n        config\n      );\n      dispatch({ type: UPDATE_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Approve Payment\n  const approvePayment = async (id) => {\n    try {\n      const res = await axios.put(`/api/payments/${id}/approve`);\n      dispatch({ type: APPROVE_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Reject Payment\n  const rejectPayment = async (id) => {\n    try {\n      const res = await axios.put(`/api/payments/${id}/reject`);\n      dispatch({ type: REJECT_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Hold Payment\n  const holdPayment = async (id) => {\n    try {\n      const res = await axios.put(`/api/payments/${id}/onhold`);\n      dispatch({ type: HOLD_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Pending Payment\n  const pendingPayment = async (id) => {\n    try {\n      const res = await axios.put(`/api/payments/${id}/pending`);\n      dispatch({ type: PENDING_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Hold Payment\n  const paidPayment = async (id) => {\n    try {\n      const res = await axios.put(`/api/payments/${id}/paid`);\n      dispatch({ type: PAID_PAYMENT, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Approve All Pending Payments\n  const approveAllPayments = async () => {\n    try {\n      const res = await axios.put(`/api/payments/approve`);\n      dispatch({ type: APPROVE_ALL_PAYMENTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Reject All Pending Payments\n  const paidAllPayments = async () => {\n    try {\n      const res = await axios.put(`/api/payments/paid`);\n      dispatch({ type: PAID_ALL_PAYMENTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Reject All Pending Payments\n  const rejectAllPayments = async () => {\n    try {\n      const res = await axios.put(`/api/payments/reject`);\n      dispatch({ type: REJECT_ALL_PAYMENTS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: PAYMENT_ERROR, payload: error.response.data.error });\n    }\n  };\n\n  //Set Current Payment\n  const setCurrent = (payment) => {\n    dispatch({ type: SET_CURRENT, payload: payment });\n  };\n\n  //Clear Current Payment\n  const clearCurrent = () => {\n    dispatch({ type: CLEAR_CURRENT });\n  };\n\n\n  //Clear Payments\n\n  const clearPayments = () => {\n    dispatch({ type: CLEAR_PAYMENTS });\n  };\n\n  //Clear Payments\n\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n  const setLoading = () => {\n    return {\n      type: SET_LOADING,\n    };\n  };\n\n  return (\n    <paymentContext.Provider\n      value={{\n        payments: state.payments,\n        userPayments: state.userPayments,\n        current: state.current,\n        filtered: state.filtered,\n        error: state.error,\n        loading: state.loading,\n        getPayments,\n        getPayment,\n        getUserPayments,\n        addPayment,\n        addUserPayment,\n        deletePayment,\n        setCurrent,\n        clearCurrent,\n        updatePayment,\n        clearPayments,\n        approvePayment,\n        rejectPayment,\n        holdPayment,\n        pendingPayment,\n        paidPayment,\n        approveAllPayments,\n        rejectAllPayments,\n        paidAllPayments,\n        setLoading,\n        clearErrors,\n      }}\n    >\n      {props.children}\n    </paymentContext.Provider>\n  );\n};\n\nexport default PaymentState;\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\nGET_STATS,\nSTATS_ERROR\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_STATS: {\n      return {\n        ...state,\n        stats: action.payload,\n        loading: false,\n        error: null\n      };\n    }\n    case STATS_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport StatsContext from \"./statsContext.js\";\nimport StatsReducer from \"./StatsReducer\";\n\nimport { GET_STATS, STATS_ERROR } from \"../types\";\n\nconst StatsState = (props) => {\n  const initialState = {\n    loading: true,\n    stats: null,\n    error: null,\n  };\n\n  const [state, dispatch] = useReducer(StatsReducer, initialState);\n\n  //Get Users where their status is set to \"Active\"\n  const getStatData = async () => {\n    try {\n      let res = await axios.get(\"/api/stats\");\n      dispatch({ type: GET_STATS, payload: res.data });\n    } catch (error) {\n      dispatch({ type: STATS_ERROR, payload: error.response.data.error });\n    }\n  };\n  return (\n    <StatsContext.Provider\n      value={{\n        stats: state.stats,\n        error: state.error,\n        loading: state.loading,\n        getStatData,\n      }}\n    >\n      {props.children}\n    </StatsContext.Provider>\n  );\n};\n\nexport default StatsState;\n","/* eslint-disable import/no-anonymous-default-export */\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  PASSWORD_RESET_REQUEST,\n  PASSWORD_RESET_EMAIL_FAIL,\n  PASSWORD_RESET,\n  RESEND_VERIFY,\n  USER_LOADED,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  AUTH_ERROR,\n  CLEAR_ERRORS,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isAdmin: action.payload.role === \"Admin\" ? true : false,\n        loading: false,\n        user: action.payload,\n      };\n    case LOGIN_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        loading: false,\n      };\n    case PASSWORD_RESET_REQUEST:\n    case PASSWORD_RESET:\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        ...action.payload,\n        loading: false,\n      };\n    case REGISTER_FAIL:\n    case LOGIN_FAIL:\n    case AUTH_ERROR:\n    case LOGOUT:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        isAdmin: null,\n        loading: false,\n        user: null,\n        error: action.payload,\n      };\n    case RESEND_VERIFY:\n      return {\n        ...state,\n        user: action.payload,\n        loading: false,\n      };\n    case PASSWORD_RESET_EMAIL_FAIL:\n      return {\n        ...state,\n      };\n    case CLEAR_ERRORS:\n      return {\n        ...state,\n        error: null,\n      };\n    default:\n      return state;\n  }\n};\n","import React, { useReducer } from \"react\";\nimport axios from \"axios\";\nimport AuthContext from \"./authContext\";\nimport AuthReducer from \"./AuthReducer\";\nimport SetAuthToken from \"../../utils/SetAuthToken\";\nimport { useSnackbar } from \"notistack\";\n\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  PASSWORD_RESET_REQUEST,\n  PASSWORD_RESET_EMAIL_FAIL,\n  PASSWORD_RESET,\n  RESEND_VERIFY,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_ERRORS,\n} from \"../types\";\nimport id from \"date-fns/esm/locale/id\";\n\nconst AuthState = (props) => {\n  const initialState = {\n    token: localStorage.getItem(\"token\"),\n    isAuthenticated: null,\n    isAdmin: null,\n    loading: true,\n    user: null,\n    error: null,\n  };\n  const { enqueueSnackbar, closeSnackbar } = useSnackbar();\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  //LOAD USER\n\n  const loadUser = async () => {\n    if (localStorage.token) {\n      SetAuthToken(localStorage.token);\n    }\n    try {\n      const res = await axios.get(\"/api/auth\");\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data,\n      });\n    } catch (error) {\n      dispatch({\n        type: AUTH_ERROR,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //REGISTER USER\n  const register = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"/api/users/register\", formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data,\n      });\n      enqueueSnackbar(`New User Registered`, {\n        variant: \"success\",\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Verify Email\n  const verifyEmail = async (token) => {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    try {\n      const res = await axios.put(\n        `/api/users/confirm-email/${token}`,\n        null,\n        config\n      );\n      dispatch({ type: REGISTER_SUCCESS, payload: res.data });\n      enqueueSnackbar(\"Email address confirmed, please log in\", {\n        variant: \"success\",\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Password Reset Request Email\n  const passwordResetRequest = async (id) => {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    try {\n      const res = await axios.post(\n        `/api/users/password-reset-request/${id}`,\n        null,\n        config\n      );\n      dispatch({ type: PASSWORD_RESET_REQUEST, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: PASSWORD_RESET_EMAIL_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Password Reset Request Email\n  const passwordUpdateRequest = async (token, formData) => {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    try {\n      const res = await axios.put(\n        `/api/users/password-reset/${token}`,\n        formData,\n        config\n      );\n      dispatch({ type: PASSWORD_RESET, payload: res.data });\n      enqueueSnackbar(\"Password reset, please login\", {\n        variant: \"success\",\n      });\n      logout();\n    } catch (error) {\n      dispatch({\n        type: PASSWORD_RESET_EMAIL_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Password Reset Request Email\n  const passwordResetRequestPublic = async (formData) => {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    try {\n      const res = await axios.post(\n        `/api/users/password-reset-request-public`,\n        formData,\n        config\n      );\n      let ID = res.data;\n      await passwordResetRequest(ID);\n    } catch (error) {\n      dispatch({\n        type: PASSWORD_RESET_EMAIL_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //Verify Email\n  const resendVerifyEmail = async (id) => {\n    const config = {\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    try {\n      const res = await axios.post(`/api/user/resend/${id}`, null, config);\n      dispatch({ type: RESEND_VERIFY, payload: res.data });\n    } catch (error) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //LOGIN USER\n\n  const login = async (formData) => {\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    };\n    try {\n      const res = await axios.post(\"/api/auth\", formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data,\n      });\n      loadUser();\n    } catch (error) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: error.response.data.error,\n      });\n    }\n  };\n\n  //LOGOUT\n\n  const logout = () => {\n    dispatch({ type: LOGOUT });\n  };\n\n  //CLEAR ERRORS\n\n  const clearErrors = () => {\n    dispatch({ type: CLEAR_ERRORS });\n  };\n\n  return (\n    <AuthContext.Provider\n      value={{\n        token: state.token,\n        isAuthenticated: state.isAuthenticated,\n        isAdmin: state.isAdmin,\n        loading: state.loading,\n        user: state.user,\n        error: state.error,\n        register,\n        loadUser,\n        login,\n        logout,\n        clearErrors,\n        verifyEmail,\n        resendVerifyEmail,\n        passwordResetRequest,\n        passwordUpdateRequest,\n        passwordResetRequestPublic,\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthState;\n","import React, { Fragment } from \"react\";\n\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch,\n} from \"react-router-dom\";\n//Authentication\nimport SetAuthToken from \"./utils/SetAuthToken\";\n//Authenticated Pages\nimport Home from \"./components/pages/Home\";\nimport UserAdmin from \"./components/pages/UserAdmin\";\nimport User from \"./components/pages/User\";\nimport UserPayments from \"./components/pages/UserPayments\";\nimport Payments from \"./components/pages/Payments\";\nimport PaymentsCreate from \"./components/pages/PaymentsCreate\";\nimport ViewPayments from \"./components/pages/PaymentsView\";\nimport About from \"./components/pages/About\";\nimport Import from \"./components/pages/Import\";\nimport ImportNSP from \"./components/pages/ImportNSP\";\n\n//Public Pages\nimport Register from \"./components/auth/Register\";\nimport Login from \"./components/auth/Login\";\nimport Verify from \"./components/auth/Verify\";\nimport PasswordReset from \"./components/auth/PasswordReset\";\nimport PasswordResetRequest from \"./components/auth/PasswordResetRequest\";\n\n//Components\nimport NavigationBar from \"./components/layouts/NavigationBar\";\nimport PrivateRoute from \"./components/routing/PrivateRoute\";\nimport { SnackbarProvider } from \"notistack\";\n//State\nimport UserState from \"./context/user/UserState\";\nimport UserAdminState from \"./context/userAdmin/UserAdminState\";\nimport PaymentState from \"./context/payment/PaymentState\";\nimport StatsState from \"./context/stats/StatsState\";\nimport AuthState from \"./context/auth/AuthState\";\n\nif (localStorage.token) {\n  SetAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  return (\n    <SnackbarProvider maxSnack={10}>\n      <AuthState>\n        <UserState>\n          <StatsState>\n            <UserAdminState>\n              <PaymentState>\n                <Router>\n                  <Fragment>\n                    <NavigationBar />\n                    <div className=\"container\">\n                      <Switch>\n                        <PrivateRoute exact path=\"/\" component={Home} />\n                        <PrivateRoute\n                          exact\n                          path=\"/userAdmin\"\n                          component={UserAdmin}\n                        />\n                        <PrivateRoute exact path=\"/import\" component={Import} />\n                        <PrivateRoute exact path=\"/importNSP\" component={ImportNSP} />\n                        <PrivateRoute\n                          exact\n                          path=\"/payments\"\n                          component={Payments}\n                        />\n                        <PrivateRoute\n                          exact\n                          path=\"/payments/new\"\n                          component={PaymentsCreate}\n                        />\n                        <PrivateRoute\n                          exact\n                          path=\"/payments/:id\"\n                          component={ViewPayments}\n                        />\n                        <PrivateRoute\n                          exact\n                          path=\"/user/:id/payments\"\n                          component={UserPayments}\n                        />\n                        <PrivateRoute exact path=\"/user/:id\" component={User} />\n\n                        <Route\n                          exact\n                          path=\"/users/confirm-email/:token\"\n                          component={Verify}\n                        />\n                        <Route\n                          exact\n                          path=\"/users/password-reset/:token\"\n                          component={PasswordReset}\n                        />\n                        <Route exact path=\"/about\" component={About} />\n                        <Route\n                          exact\n                          path=\"/users/register\"\n                          component={Register}\n                        />\n                        <Route\n                          exact\n                          path=\"/password-reset\"\n                          component={PasswordResetRequest}\n                        />\n                        <Route exact path=\"/login\" component={Login} />\n                        <Redirect from=\"*\" to=\"/\" />\n                      </Switch>\n                    </div>\n                  </Fragment>\n                </Router>\n              </PaymentState>\n            </UserAdminState>\n          </StatsState>\n        </UserState>\n      </AuthState>\n    </SnackbarProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}